2024-07-03 02:55:44.018  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 02:55:44.080  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 02:55:44.083  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 02:55:44.134  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 02:55:44.134  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 02:55:44.134  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 02:55:44.239  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 02:55:51.183  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s978ms).
2024-07-03 03:11:31.068  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 03:11:31.068  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 03:11:31.068  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 03:11:31.093  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 03:11:31.094  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 03:11:31.094  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 03:11:31.253  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 03:11:50.743  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s574ms).
2024-07-03 03:27:18.249  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 03:27:18.391  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 03:27:18.394  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 03:27:18.407  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 03:27:18.407  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 03:27:18.466  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 03:27:18.578  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 03:27:20.672  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s929ms).
2024-07-03 03:43:05.446  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 03:43:05.447  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 03:43:05.447  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 03:43:05.468  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 03:43:05.468  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 03:43:05.468  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 03:43:05.608  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 03:43:20.280  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s620ms).
2024-07-03 03:58:52.657  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 03:58:52.767  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 03:58:52.790  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 03:58:52.797  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 03:58:52.798  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 03:58:52.852  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 03:58:52.959  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 03:59:20.205  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s924ms).
2024-07-03 04:14:40.950  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 04:14:40.951  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 04:14:40.951  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 04:14:40.968  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 04:14:40.968  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 04:14:40.968  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 04:14:41.109  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 04:14:50.921  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m30s716ms).
2024-07-03 04:30:28.093  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 04:30:28.093  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 04:30:28.093  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 04:30:28.119  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 04:30:28.120  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 04:30:28.120  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 04:30:28.283  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 04:30:50.871  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s944ms).
2024-07-03 04:46:15.292  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 04:46:15.406  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 04:46:15.422  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 04:46:15.439  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 04:46:15.439  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 04:46:15.467  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 04:46:15.572  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 04:46:20.472  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s601ms).
2024-07-03 04:52:07.680  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 04:52:07.680  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 04:52:07.680  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 04:52:07.693  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 04:52:07.693  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 04:52:07.693  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 04:52:07.820  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 04:52:25.572  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m35s97ms).
2024-07-03 05:07:54.906  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 05:07:54.906  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 05:07:54.906  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 05:07:54.990  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 05:07:54.991  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 05:07:54.991  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 05:07:55.104  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 05:07:55.219  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s647ms).
2024-07-03 05:15:41.758  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 05:15:41.758  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 05:15:41.758  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 05:15:41.809  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 05:15:41.809  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 05:15:41.809  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 05:15:41.933  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 05:15:54.833  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=7m29s635ms).
2024-07-03 05:31:28.964  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 05:31:28.964  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 05:31:28.964  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 05:31:28.990  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 05:31:28.990  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 05:31:28.990  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 05:31:29.111  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 05:31:54.463  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s619ms).
2024-07-03 05:47:16.146  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 05:47:16.146  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 05:47:16.146  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 05:47:16.158  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 05:47:16.159  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 05:47:16.159  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 05:47:16.350  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 05:47:24.390  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s927ms).
2024-07-03 06:03:03.357  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 06:03:03.358  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 06:03:03.358  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 06:03:03.389  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 06:03:03.389  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 06:03:03.389  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 06:03:03.550  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 06:03:24.017  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s612ms).
2024-07-03 06:16:42.704  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 06:16:42.704  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 06:16:42.704  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 06:16:42.731  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 06:16:42.732  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 06:16:42.732  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 06:16:42.841  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 06:16:46.129  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m22s112ms).
2024-07-03 06:32:29.941  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 06:32:29.942  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 06:32:29.942  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 06:32:29.969  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 06:32:29.969  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 06:32:29.969  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 06:32:30.086  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 06:32:45.763  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s623ms).
2024-07-03 06:48:17.141  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 06:48:17.141  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 06:48:17.141  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 06:48:17.190  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 06:48:17.191  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 06:48:17.191  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 06:48:17.303  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 06:48:45.698  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s926ms).
2024-07-03 07:04:04.475  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 07:04:04.516  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 07:04:04.517  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 07:04:04.519  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 07:04:04.523  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 07:04:04.524  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 07:04:04.643  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 07:04:15.342  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s644ms).
2024-07-03 07:17:43.638  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 07:17:43.638  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 07:17:43.638  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 07:17:43.653  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 07:17:43.653  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 07:17:43.653  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 07:17:43.802  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 07:18:07.322  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m21s982ms).
2024-07-03 07:33:30.853  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 07:33:30.953  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 07:33:30.973  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 07:33:30.975  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 07:33:30.981  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 07:33:31.029  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 07:33:31.135  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 07:33:36.935  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s613ms).
2024-07-03 07:49:18.050  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 07:49:18.174  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 07:49:18.191  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 07:49:18.202  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 07:49:18.202  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 07:49:18.202  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 07:49:18.314  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 07:49:36.872  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s922ms).
2024-07-03 08:05:05.247  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 08:05:05.247  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 08:05:05.247  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 08:05:05.331  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 08:05:05.331  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 08:05:05.331  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 08:05:05.448  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 08:05:06.501  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s629ms).
2024-07-03 08:18:43.549  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 08:18:43.549  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 08:18:43.549  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 08:18:43.566  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 08:18:43.567  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 08:18:43.567  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 08:18:43.710  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 08:18:57.505  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m21s11ms).
2024-07-03 08:34:30.750  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 08:34:30.750  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 08:34:30.750  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 08:34:30.842  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 08:34:30.843  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 08:34:30.843  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 08:34:30.957  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 08:34:57.137  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s628ms).
2024-07-03 08:50:17.981  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 08:50:17.981  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 08:50:17.982  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 08:50:18.013  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 08:50:18.013  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 08:50:18.013  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 08:50:18.127  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 08:50:27.065  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s929ms).
2024-07-03 09:06:05.079  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 09:06:05.079  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 09:06:05.079  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 09:06:05.125  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 09:06:05.125  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 09:06:05.126  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 09:06:05.240  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 09:06:26.615  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s556ms).
2024-07-03 09:19:43.475  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 09:19:43.475  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 09:19:43.475  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 09:19:43.537  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 09:19:43.538  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 09:19:43.538  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 09:19:43.653  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 09:19:47.745  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m21s130ms).
2024-07-03 09:28:58.462  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 09:28:58.462  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 09:28:58.462  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 09:28:58.477  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 09:28:58.477  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 09:28:58.477  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 09:28:58.718  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 09:29:15.190  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=8m57s435ms).
2024-07-03 09:44:45.704  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 09:44:45.704  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 09:44:45.704  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 09:44:45.721  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 09:44:45.721  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 09:44:45.721  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 09:44:45.841  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 09:45:15.150  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s940ms).
2024-07-03 10:00:32.899  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 10:00:32.899  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:00:32.899  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 10:00:33.045  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:00:33.045  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 10:00:33.045  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:00:33.207  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:00:44.777  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s627ms).
2024-07-03 10:16:20.058  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 10:16:20.058  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:16:20.058  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 10:16:20.078  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:16:20.078  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 10:16:20.078  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:16:20.195  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:16:44.723  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s935ms).
2024-07-03 10:20:43.457  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 10:20:43.457  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:20:43.457  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 10:20:43.474  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:20:43.474  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 10:20:43.474  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:20:43.636  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:20:50.563  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m5s840ms).
2024-07-03 10:36:30.682  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 10:36:30.787  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:36:30.788  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 10:36:30.872  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:36:30.872  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 10:36:30.872  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:36:31.013  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:36:50.477  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s904ms).
2024-07-03 10:52:17.819  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 10:52:17.820  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:52:17.820  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 10:52:17.860  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:52:17.861  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 10:52:17.861  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:52:18.002  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 10:52:20.079  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s602ms).
2024-07-03 11:08:05.064  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 11:08:05.173  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 11:08:05.204  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 11:08:05.217  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 11:08:05.217  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 11:08:05.270  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 11:08:05.374  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 11:08:20.028  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s932ms).
2024-07-03 11:21:43.380  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 11:21:43.381  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 11:21:43.381  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 11:21:43.447  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 11:21:43.447  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 11:21:43.447  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 11:21:43.562  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 11:22:10.758  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m20s723ms).
2024-07-03 11:37:30.610  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 11:37:30.610  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 11:37:30.610  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 11:37:30.680  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 11:37:30.680  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 11:37:30.681  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 11:37:30.797  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 11:37:40.677  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s919ms).
2024-07-03 11:53:17.797  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 11:53:17.797  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 11:53:17.798  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 11:53:17.887  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 11:53:17.887  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 11:53:17.888  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 11:53:18.010  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 11:53:40.286  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s618ms).
2024-07-03 12:09:04.957  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 12:09:04.957  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 12:09:04.957  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 12:09:05.113  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 12:09:05.114  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 12:09:05.114  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 12:09:05.267  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 12:09:10.205  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s919ms).
2024-07-03 12:22:43.280  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 12:22:43.280  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 12:22:43.280  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 12:22:43.319  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 12:22:43.319  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 12:22:43.319  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 12:22:43.445  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 12:23:00.965  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m20s748ms).
2024-07-03 12:38:30.529  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 12:38:30.529  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 12:38:30.530  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 12:38:30.593  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 12:38:30.594  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 12:38:30.594  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 12:38:30.697  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 12:38:30.878  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s913ms).
2024-07-03 12:54:17.669  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 12:54:17.670  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 12:54:17.670  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 12:54:17.710  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 12:54:17.710  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 12:54:17.710  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 12:54:17.845  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 12:54:30.442  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s560ms).
2024-07-03 13:10:04.890  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 13:10:05.015  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 13:10:05.044  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 13:10:05.045  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 13:10:05.045  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 13:10:05.108  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 13:10:05.219  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 13:10:30.410  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s941ms).
2024-07-03 13:23:43.257  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 13:23:43.257  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 13:23:43.257  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 13:23:43.339  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 13:23:43.339  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 13:23:43.339  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 13:23:43.458  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 13:23:51.179  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m20s769ms).
2024-07-03 15:48:20.177  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Disconnecting from node 0 due to request timeout.
2024-07-03 15:48:20.214  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cancelled in-flight FETCH request with correlation id 67276 due to node 0 being disconnected (elapsed time since creation: 8635350ms, elapsed time since send: 8635350ms, request timeout: 30000ms)
2024-07-03 15:48:20.293  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-03 15:48:20.293  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 15:48:20.386  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Error sending fetch request (sessionId=1712755105, epoch=57355) to node 0:

org.apache.kafka.common.errors.DisconnectException: null

2024-07-03 15:48:20.544  INFO 43773 --- [kafka-coordinator-heartbeat-thread | event-service-group] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Client requested disconnect from node 2147483647
2024-07-03 15:48:20.588  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 15:48:22.723  WARN 43773 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2h24m1s539ms).
2024-07-03 17:16:11.720  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:16:11.723  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:16:11.725  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:16:11.726  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:16:11.734  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=207, memberId='consumer-event-service-group-1-5dc295e0-3216-4be4-b75a-2e4234aa89ee', protocol='range'}
2024-07-03 17:16:11.735  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 207: {consumer-event-service-group-1-5dc295e0-3216-4be4-b75a-2e4234aa89ee=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:16:11.744  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=207, memberId='consumer-event-service-group-1-5dc295e0-3216-4be4-b75a-2e4234aa89ee', protocol='range'}
2024-07-03 17:16:11.745  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:16:11.745  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:16:11.748  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:16:11.749  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:16:17.167  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:16:17.167  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:16:17.167  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-5dc295e0-3216-4be4-b75a-2e4234aa89ee sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-03 17:16:17.169  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 17:16:17.169  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 17:16:17.169  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-03 17:16:17.171  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 17:16:17.171  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 17:16:17.571  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-03 17:16:17.571  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-03 17:16:17.571  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-03 17:16:17.575  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-03 17:16:17.576  INFO 43773 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-03 17:16:17.586  INFO 43773 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03 17:16:17.601  INFO 43773 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03 17:16:17.606  INFO 43773 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-03 17:16:23.284  INFO 51598 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 51598 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-03 17:16:23.286 DEBUG 51598 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-03 17:16:23.286  INFO 51598 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-03 17:16:24.942  INFO 51598 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03 17:16:24.990  INFO 51598 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 38 ms. Found 2 JPA repository interfaces.
2024-07-03 17:16:25.717  INFO 51598 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-03 17:16:25.725  INFO 51598 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03 17:16:25.725  INFO 51598 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-03 17:16:25.776  INFO 51598 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03 17:16:25.776  INFO 51598 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2448 ms
2024-07-03 17:16:25.918  INFO 51598 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-03 17:16:25.948  INFO 51598 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-03 17:16:26.048  INFO 51598 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-03 17:16:26.104  INFO 51598 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03 17:16:26.217  INFO 51598 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03 17:16:26.234  INFO 51598 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-03 17:16:26.625  INFO 51598 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-03 17:16:26.631  INFO 51598 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03 17:16:26.962  WARN 51598 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03 17:16:27.475  INFO 51598 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-03 17:16:27.602  INFO 51598 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-03 17:16:27.602  INFO 51598 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-03 17:16:27.602  INFO 51598 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720016187601
2024-07-03 17:16:27.604  INFO 51598 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-03 17:16:27.609  INFO 51598 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-permission-service-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = permission-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-03 17:16:27.616  INFO 51598 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-03 17:16:27.616  INFO 51598 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-03 17:16:27.616  INFO 51598 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720016187616
2024-07-03 17:16:27.616  INFO 51598 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Subscribed to topic(s): roleCheckResponseTopic
2024-07-03 17:16:27.625  INFO 51598 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-03 17:16:27.632  INFO 51598 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 4.862 seconds (JVM running for 5.31)
2024-07-03 17:16:27.795  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: vt3ZtIP6R3G9uiCNesjNKA
2024-07-03 17:16:27.795  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Cluster ID: vt3ZtIP6R3G9uiCNesjNKA
2024-07-03 17:16:27.796  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 17:16:27.796  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 17:16:27.797  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:16:27.797  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] (Re-)joining group
2024-07-03 17:16:27.805  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: need to re-join with the given member-id: consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef
2024-07-03 17:16:27.805  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c
2024-07-03 17:16:27.805  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-03 17:16:27.805  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-03 17:16:27.805  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] (Re-)joining group
2024-07-03 17:16:27.805  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:16:30.718  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=210, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:16:30.763  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:16:30.768  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:16:30.770  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 17:16:30.770  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Adding newly assigned partitions: 
2024-07-03 17:16:30.771  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions assigned: []
2024-07-03 17:16:30.838  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=210, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:16:30.839  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:16:30.840  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:16:30.844  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:16:30.844  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:25:27.851  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Node -1 disconnected.
2024-07-03 17:25:27.930  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Node -1 disconnected.
2024-07-03 17:33:13.452  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:33:13.455  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Revoke previously assigned partitions 
2024-07-03 17:33:13.457  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions revoked: []
2024-07-03 17:33:13.458  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] (Re-)joining group
2024-07-03 17:33:13.461  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully joined group with generation Generation{generationId=4, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:33:13.463  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully synced group in generation Generation{generationId=4, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:33:13.463  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 17:33:13.464  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Adding newly assigned partitions: 
2024-07-03 17:33:13.464  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions assigned: []
2024-07-03 17:33:19.208  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:33:19.208  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:33:19.208  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:33:19.209  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:33:19.210  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=211, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:33:19.218  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 211: {consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:33:19.220  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=211, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:33:19.221  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:33:19.221  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:33:19.222  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:33:19.223  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:33:19.463  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:33:19.464  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Revoke previously assigned partitions 
2024-07-03 17:33:19.464  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions revoked: []
2024-07-03 17:33:19.464  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] (Re-)joining group
2024-07-03 17:33:19.466  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully joined group with generation Generation{generationId=5, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:33:19.466  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Finished assignment for group at generation 5: {consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:33:19.468  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully synced group in generation Generation{generationId=5, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:33:19.468  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:33:19.468  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:33:19.469  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:33:19.470  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:33:22.467  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:33:22.468  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:33:22.468  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:33:22.468  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] (Re-)joining group
2024-07-03 17:33:22.469  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully joined group with generation Generation{generationId=6, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:33:22.469  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Finished assignment for group at generation 6: {consumer-permission-service-group-2-92de39fd-ab9a-4dcd-91b5-0ca35637e7e0=Assignment(partitions=[]), consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:33:22.470  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully synced group in generation Generation{generationId=6, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:33:22.471  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:33:22.471  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:33:22.472  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:33:22.472  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:33:25.213  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:33:25.214  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:33:25.214  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:33:25.215  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:33:25.217  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=212, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:33:25.471  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:33:25.472  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:33:25.472  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:33:25.473  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] (Re-)joining group
2024-07-03 17:33:25.477  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully joined group with generation Generation{generationId=7, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:33:25.477  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Finished assignment for group at generation 7: {consumer-permission-service-group-2-7b8053ed-3f3e-4c77-a93a-0e29c54584df=Assignment(partitions=[]), consumer-permission-service-group-2-92de39fd-ab9a-4dcd-91b5-0ca35637e7e0=Assignment(partitions=[]), consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:33:25.478  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 212: {consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c=Assignment(partitions=[band-registration-request-0]), consumer-event-service-group-1-5d52a99e-f1a1-4e57-a795-b0411cc91d1f=Assignment(partitions=[band-registration-0])}
2024-07-03 17:33:25.482  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=212, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:33:25.482  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully synced group in generation Generation{generationId=7, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:33:25.482  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:33:25.483  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:33:25.483  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:33:25.483  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:33:25.485  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:33:25.485  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:33:25.485  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:33:25.486  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:33:31.966 ERROR 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.kafka.listener.DefaultErrorHandler   : Backoff none exhausted for roleCheckResponseTopic-0@0

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void Aspects.PermissionAspect.listen(Kafka.RoleCheckResponse)]
Bean [Aspects.PermissionAspect@4c579b5b]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [Kafka.RoleCheckResponse] for GenericMessage [payload={"correlationId":"71701619-4a78-4db7-afb1-3cd31bd75dcc","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=0, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017211902, __TypeId__=[B@179908f4, kafka_groupId=permission-service-group}], failedMessage=GenericMessage [payload={"correlationId":"71701619-4a78-4db7-afb1-3cd31bd75dcc","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=0, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017211902, __TypeId__=[B@179908f4, kafka_groupId=permission-service-group}]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [Kafka.RoleCheckResponse] for GenericMessage [payload={"correlationId":"71701619-4a78-4db7-afb1-3cd31bd75dcc","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=0, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017211902, __TypeId__=[B@179908f4, kafka_groupId=permission-service-group}], failedMessage=GenericMessage [payload={"correlationId":"71701619-4a78-4db7-afb1-3cd31bd75dcc","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=0, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017211902, __TypeId__=[B@179908f4, kafka_groupId=permission-service-group}]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2636) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2606) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2567) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2481) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2403) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2282) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1956) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1351) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1342) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1234) ~[spring-kafka-2.8.0.jar:2.8.0]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:374) ~[spring-kafka-2.8.0.jar:2.8.0]
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352) ~[spring-kafka-2.8.0.jar:2.8.0]
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92) ~[spring-kafka-2.8.0.jar:2.8.0]
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53) ~[spring-kafka-2.8.0.jar:2.8.0]
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2586) ~[spring-kafka-2.8.0.jar:2.8.0]
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [Kafka.RoleCheckResponse] for GenericMessage [payload={"correlationId":"71701619-4a78-4db7-afb1-3cd31bd75dcc","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=0, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017211902, __TypeId__=[B@179908f4, kafka_groupId=permission-service-group}], failedMessage=GenericMessage [payload={"correlationId":"71701619-4a78-4db7-afb1-3cd31bd75dcc","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=0, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017211902, __TypeId__=[B@179908f4, kafka_groupId=permission-service-group}]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2586) ~[spring-kafka-2.8.0.jar:2.8.0]
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [Kafka.RoleCheckResponse] for GenericMessage [payload={"correlationId":"71701619-4a78-4db7-afb1-3cd31bd75dcc","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=0, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017211902, __TypeId__=[B@179908f4, kafka_groupId=permission-service-group}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:145) ~[spring-messaging-5.3.15.jar:5.3.15]
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118) ~[spring-messaging-5.3.15.jar:5.3.15]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147) ~[spring-messaging-5.3.15.jar:5.3.15]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115) ~[spring-messaging-5.3.15.jar:5.3.15]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347) ~[spring-kafka-2.8.0.jar:2.8.0]
	... 14 common frames omitted

2024-07-03 17:34:58.513  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:34:58.517  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:34:58.517  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:34:58.518  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] (Re-)joining group
2024-07-03 17:34:58.521  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully joined group with generation Generation{generationId=8, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:34:58.522  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Finished assignment for group at generation 8: {consumer-permission-service-group-2-7b8053ed-3f3e-4c77-a93a-0e29c54584df=Assignment(partitions=[]), consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:34:58.525  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully synced group in generation Generation{generationId=8, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:34:58.526  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:34:58.526  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:34:58.528  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:34:58.528  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:35:01.254  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:35:01.254  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:35:01.254  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:35:01.255  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:35:01.256  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=213, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:35:01.256  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 213: {consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:35:01.258  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=213, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:35:01.258  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:35:01.258  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:35:01.259  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:35:01.260  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:35:01.522  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:35:01.523  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:35:01.523  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:35:01.523  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] (Re-)joining group
2024-07-03 17:35:01.524  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully joined group with generation Generation{generationId=9, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:35:01.524  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Finished assignment for group at generation 9: {consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:35:01.525  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully synced group in generation Generation{generationId=9, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:35:01.525  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:35:01.525  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:35:01.526  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:35:01.526  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:35:07.259  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:35:07.261  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:35:07.261  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:35:07.262  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:35:07.263  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=214, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:35:07.528  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:35:07.528  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:35:07.528  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:35:07.529  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] (Re-)joining group
2024-07-03 17:35:07.531  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully joined group with generation Generation{generationId=10, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:35:07.532  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Finished assignment for group at generation 10: {consumer-permission-service-group-2-83153d6e-239f-4780-8579-9c2e2c64b09e=Assignment(partitions=[]), consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:35:07.534  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 214: {consumer-event-service-group-1-e55e9e13-c2b6-4e2e-9d79-da4ff46bcbd0=Assignment(partitions=[band-registration-0]), consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:35:07.534  INFO 51598 --- [kafka-coordinator-heartbeat-thread | permission-service-group] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully synced group in generation Generation{generationId=10, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:35:07.535  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:35:07.535  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:35:07.536  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=214, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:35:07.536  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:35:07.537  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:35:07.537  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:35:07.536  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:35:07.539  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:35:07.539  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:35:16.535  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:35:16.536  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:35:16.536  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:35:16.536  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] (Re-)joining group
2024-07-03 17:35:16.539  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully joined group with generation Generation{generationId=11, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:35:16.540  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Finished assignment for group at generation 11: {consumer-permission-service-group-2-1bf73eb0-df89-4fc0-8e83-1b2dbbe82013=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-permission-service-group-2-83153d6e-239f-4780-8579-9c2e2c64b09e=Assignment(partitions=[]), consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef=Assignment(partitions=[])}
2024-07-03 17:35:16.543  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully synced group in generation Generation{generationId=11, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:35:16.543  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 17:35:16.544  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Adding newly assigned partitions: 
2024-07-03 17:35:16.544  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions assigned: []
2024-07-03 17:36:46.569  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:36:46.572  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Revoke previously assigned partitions 
2024-07-03 17:36:46.572  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions revoked: []
2024-07-03 17:36:46.573  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] (Re-)joining group
2024-07-03 17:36:46.577  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully joined group with generation Generation{generationId=12, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:36:46.578  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Finished assignment for group at generation 12: {consumer-permission-service-group-2-83153d6e-239f-4780-8579-9c2e2c64b09e=Assignment(partitions=[]), consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:36:46.581  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully synced group in generation Generation{generationId=12, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:36:46.581  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:36:46.581  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:36:46.584  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:36:46.584  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:36:52.311  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:36:52.312  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:36:52.312  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:36:52.312  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:36:52.313  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=215, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:36:52.313  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 215: {consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:36:52.314  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=215, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:36:52.315  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:36:52.315  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:36:52.315  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:36:52.315  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:36:52.579  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:36:52.579  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:36:52.580  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:36:52.580  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] (Re-)joining group
2024-07-03 17:36:52.580  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully joined group with generation Generation{generationId=13, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:36:52.581  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Finished assignment for group at generation 13: {consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:36:52.582  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully synced group in generation Generation{generationId=13, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:36:52.582  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:36:52.582  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:36:52.582  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:36:52.582  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:36:55.581  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:36:55.581  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:36:55.581  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:36:55.582  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] (Re-)joining group
2024-07-03 17:36:55.583  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully joined group with generation Generation{generationId=14, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:36:55.583  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Finished assignment for group at generation 14: {consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-permission-service-group-2-9722a4c6-9093-468b-b38c-fda3d70d231d=Assignment(partitions=[])}
2024-07-03 17:36:55.586  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully synced group in generation Generation{generationId=14, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:36:55.586  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:36:55.586  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:36:55.587  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:36:55.588  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:36:58.316  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:36:58.317  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:36:58.317  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:36:58.317  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:36:58.320  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=216, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:36:58.584  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:36:58.584  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:36:58.584  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:36:58.584  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] (Re-)joining group
2024-07-03 17:36:58.590  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully joined group with generation Generation{generationId=15, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:36:58.591  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Finished assignment for group at generation 15: {consumer-permission-service-group-2-feb1e559-ad20-4ee7-a607-f91fb85a8a1a=Assignment(partitions=[]), consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-permission-service-group-2-9722a4c6-9093-468b-b38c-fda3d70d231d=Assignment(partitions=[])}
2024-07-03 17:36:58.596  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully synced group in generation Generation{generationId=15, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:36:58.596  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:36:58.596  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:36:58.598  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:36:58.598  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:36:58.631  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 216: {consumer-event-service-group-1-e060b931-b998-4a7e-bb93-28787ec28aa7=Assignment(partitions=[band-registration-0]), consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:36:58.633  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=216, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:36:58.633  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:36:58.633  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:36:58.634  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:36:58.634  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:37:01.874 ERROR 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.kafka.listener.DefaultErrorHandler   : Backoff none exhausted for roleCheckResponseTopic-0@2

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void Aspects.PermissionAspect.listen(Kafka.RoleCheckResponse)]
Bean [Aspects.PermissionAspect@4c579b5b]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [Kafka.RoleCheckResponse] for GenericMessage [payload={"correlationId":"1ff3fae3-e43e-475b-b88c-35d9c68e1092","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017421854, __TypeId__=[B@1fec5650, kafka_groupId=permission-service-group}], failedMessage=GenericMessage [payload={"correlationId":"1ff3fae3-e43e-475b-b88c-35d9c68e1092","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017421854, __TypeId__=[B@1fec5650, kafka_groupId=permission-service-group}]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [Kafka.RoleCheckResponse] for GenericMessage [payload={"correlationId":"1ff3fae3-e43e-475b-b88c-35d9c68e1092","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017421854, __TypeId__=[B@1fec5650, kafka_groupId=permission-service-group}], failedMessage=GenericMessage [payload={"correlationId":"1ff3fae3-e43e-475b-b88c-35d9c68e1092","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017421854, __TypeId__=[B@1fec5650, kafka_groupId=permission-service-group}]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2636) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2606) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2567) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2481) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2403) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2282) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1956) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1351) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1342) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1234) ~[spring-kafka-2.8.0.jar:2.8.0]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:374) ~[spring-kafka-2.8.0.jar:2.8.0]
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352) ~[spring-kafka-2.8.0.jar:2.8.0]
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92) ~[spring-kafka-2.8.0.jar:2.8.0]
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53) ~[spring-kafka-2.8.0.jar:2.8.0]
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2586) ~[spring-kafka-2.8.0.jar:2.8.0]
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [Kafka.RoleCheckResponse] for GenericMessage [payload={"correlationId":"1ff3fae3-e43e-475b-b88c-35d9c68e1092","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017421854, __TypeId__=[B@1fec5650, kafka_groupId=permission-service-group}], failedMessage=GenericMessage [payload={"correlationId":"1ff3fae3-e43e-475b-b88c-35d9c68e1092","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017421854, __TypeId__=[B@1fec5650, kafka_groupId=permission-service-group}]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2586) ~[spring-kafka-2.8.0.jar:2.8.0]
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [Kafka.RoleCheckResponse] for GenericMessage [payload={"correlationId":"1ff3fae3-e43e-475b-b88c-35d9c68e1092","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=2, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017421854, __TypeId__=[B@1fec5650, kafka_groupId=permission-service-group}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:145) ~[spring-messaging-5.3.15.jar:5.3.15]
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118) ~[spring-messaging-5.3.15.jar:5.3.15]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147) ~[spring-messaging-5.3.15.jar:5.3.15]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115) ~[spring-messaging-5.3.15.jar:5.3.15]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347) ~[spring-kafka-2.8.0.jar:2.8.0]
	... 14 common frames omitted

2024-07-03 17:38:49.361  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:38:49.362  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:38:49.362  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:38:49.363  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:38:49.365  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=217, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:38:49.365  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 217: {consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:38:49.368  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=217, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:38:49.368  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:38:49.368  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:38:49.370  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:38:49.370  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:38:49.628  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:38:49.629  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:38:49.629  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:38:49.629  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] (Re-)joining group
2024-07-03 17:38:49.630  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully joined group with generation Generation{generationId=16, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:38:49.630  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Finished assignment for group at generation 16: {consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:38:49.631  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Successfully synced group in generation Generation{generationId=16, memberId='consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef', protocol='range'}
2024-07-03 17:38:49.632  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:38:49.632  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:38:49.633  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:38:49.633  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:39:13.372  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:39:13.373  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:39:13.373  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:39:13.373  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:39:13.376  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=218, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:39:13.378  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 218: {consumer-event-service-group-1-e36b4881-dc7d-47e0-ae90-25468ca6bc9e=Assignment(partitions=[band-registration-0]), consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:39:13.381  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=218, memberId='consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c', protocol='range'}
2024-07-03 17:39:13.382  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:39:13.382  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:39:13.383  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:39:13.383  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:39:21.377 ERROR 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.kafka.listener.DefaultErrorHandler   : Backoff none exhausted for roleCheckResponseTopic-0@3

org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void Aspects.PermissionAspect.listen(Kafka.RoleCheckResponse)]
Bean [Aspects.PermissionAspect@4c579b5b]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [Kafka.RoleCheckResponse] for GenericMessage [payload={"correlationId":"f698dc27-6769-43c1-8366-27dc41a9bf09","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=3, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017561354, __TypeId__=[B@6e4bd3a8, kafka_groupId=permission-service-group}], failedMessage=GenericMessage [payload={"correlationId":"f698dc27-6769-43c1-8366-27dc41a9bf09","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=3, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017561354, __TypeId__=[B@6e4bd3a8, kafka_groupId=permission-service-group}]; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [Kafka.RoleCheckResponse] for GenericMessage [payload={"correlationId":"f698dc27-6769-43c1-8366-27dc41a9bf09","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=3, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017561354, __TypeId__=[B@6e4bd3a8, kafka_groupId=permission-service-group}], failedMessage=GenericMessage [payload={"correlationId":"f698dc27-6769-43c1-8366-27dc41a9bf09","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=3, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017561354, __TypeId__=[B@6e4bd3a8, kafka_groupId=permission-service-group}]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2636) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2606) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2567) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2481) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2403) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2282) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1956) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1351) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1342) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1234) ~[spring-kafka-2.8.0.jar:2.8.0]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[na:na]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:842) ~[na:na]
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:374) ~[spring-kafka-2.8.0.jar:2.8.0]
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352) ~[spring-kafka-2.8.0.jar:2.8.0]
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92) ~[spring-kafka-2.8.0.jar:2.8.0]
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53) ~[spring-kafka-2.8.0.jar:2.8.0]
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2586) ~[spring-kafka-2.8.0.jar:2.8.0]
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message; nested exception is org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [Kafka.RoleCheckResponse] for GenericMessage [payload={"correlationId":"f698dc27-6769-43c1-8366-27dc41a9bf09","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=3, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017561354, __TypeId__=[B@6e4bd3a8, kafka_groupId=permission-service-group}], failedMessage=GenericMessage [payload={"correlationId":"f698dc27-6769-43c1-8366-27dc41a9bf09","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=3, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017561354, __TypeId__=[B@6e4bd3a8, kafka_groupId=permission-service-group}]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:352) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2586) ~[spring-kafka-2.8.0.jar:2.8.0]
	... 11 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [Kafka.RoleCheckResponse] for GenericMessage [payload={"correlationId":"f698dc27-6769-43c1-8366-27dc41a9bf09","allowed":false,"text":null,"error":"User not found with username: currentUser"}, headers={kafka_offset=3, kafka_consumer=org.apache.kafka.clients.consumer.KafkaConsumer@5e58c86, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=0, kafka_receivedTopic=roleCheckResponseTopic, kafka_receivedTimestamp=1720017561354, __TypeId__=[B@6e4bd3a8, kafka_groupId=permission-service-group}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:145) ~[spring-messaging-5.3.15.jar:5.3.15]
	at org.springframework.kafka.annotation.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:46) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118) ~[spring-messaging-5.3.15.jar:5.3.15]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147) ~[spring-messaging-5.3.15.jar:5.3.15]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115) ~[spring-messaging-5.3.15.jar:5.3.15]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56) ~[spring-kafka-2.8.0.jar:2.8.0]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347) ~[spring-kafka-2.8.0.jar:2.8.0]
	... 14 common frames omitted

2024-07-03 17:44:38.716  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:44:38.716  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:44:38.717  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:44:38.717  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:44:38.717  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-af860cd3-7106-4f22-ac11-5419f02ebb8c sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-03 17:44:38.717  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Member consumer-permission-service-group-2-690459c3-f220-4b8b-86ca-29323aab54ef sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-03 17:44:38.718  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 17:44:38.718  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 17:44:38.718  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 17:44:38.719  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-03 17:44:38.719  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 17:44:38.721  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-03 17:44:38.721  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 17:44:38.721  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-permission-service-group-2, groupId=permission-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 17:44:38.721  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 17:44:38.722  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 17:44:38.825  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-03 17:44:38.825  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-03 17:44:38.825  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-03 17:44:38.825  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-03 17:44:38.825  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-03 17:44:38.825  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-03 17:44:38.834  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-permission-service-group-2 unregistered
2024-07-03 17:44:38.834  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-03 17:44:38.835  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : permission-service-group: Consumer stopped
2024-07-03 17:44:38.835  INFO 51598 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-03 17:44:38.838  INFO 51598 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03 17:44:38.846  INFO 51598 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03 17:44:38.850  INFO 51598 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-03 17:44:42.304  INFO 52299 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 52299 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-03 17:44:42.306 DEBUG 52299 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-03 17:44:42.306  INFO 52299 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-03 17:44:42.623  INFO 52299 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03 17:44:42.653  INFO 52299 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 24 ms. Found 2 JPA repository interfaces.
2024-07-03 17:44:43.256  INFO 52299 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-03 17:44:43.263  INFO 52299 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03 17:44:43.263  INFO 52299 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-03 17:44:43.312  INFO 52299 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03 17:44:43.312  INFO 52299 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 971 ms
2024-07-03 17:44:43.453  INFO 52299 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-03 17:44:43.505  INFO 52299 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-03 17:44:43.622  INFO 52299 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-03 17:44:43.687  INFO 52299 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03 17:44:43.796  INFO 52299 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03 17:44:43.814  INFO 52299 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-03 17:44:44.287  INFO 52299 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-03 17:44:44.293  INFO 52299 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03 17:44:44.707  WARN 52299 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03 17:44:45.333  INFO 52299 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-03 17:44:45.454  INFO 52299 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-03 17:44:45.454  INFO 52299 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-03 17:44:45.454  INFO 52299 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720017885453
2024-07-03 17:44:45.456  INFO 52299 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-03 17:44:45.460  INFO 52299 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-03 17:44:45.492  INFO 52299 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-03 17:44:45.492  INFO 52299 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-03 17:44:45.492  INFO 52299 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720017885492
2024-07-03 17:44:45.492  INFO 52299 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-03 17:44:45.501  INFO 52299 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-03 17:44:45.509  INFO 52299 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 3.445 seconds (JVM running for 3.633)
2024-07-03 17:44:45.659  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: vt3ZtIP6R3G9uiCNesjNKA
2024-07-03 17:44:45.659  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: vt3ZtIP6R3G9uiCNesjNKA
2024-07-03 17:44:45.660  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 17:44:45.660  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 17:44:45.661  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:44:45.661  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:44:45.670  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-c3ee9af8-e84e-4faf-85d1-542c9d2ba9a4
2024-07-03 17:44:45.670  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-1e6ebb00-a64d-451e-a0bb-d5c1dc6d9e77
2024-07-03 17:44:45.670  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-03 17:44:45.670  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-03 17:44:45.671  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:44:45.671  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:44:46.544  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=220, memberId='consumer-event-service-group-1-1e6ebb00-a64d-451e-a0bb-d5c1dc6d9e77', protocol='range'}
2024-07-03 17:44:46.548  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=29, memberId='consumer-auth-2-c3ee9af8-e84e-4faf-85d1-542c9d2ba9a4', protocol='range'}
2024-07-03 17:44:46.552  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=220, memberId='consumer-event-service-group-1-1e6ebb00-a64d-451e-a0bb-d5c1dc6d9e77', protocol='range'}
2024-07-03 17:44:46.554  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:44:46.556  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:44:46.561  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:44:46.562  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:44:46.872  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=29, memberId='consumer-auth-2-c3ee9af8-e84e-4faf-85d1-542c9d2ba9a4', protocol='range'}
2024-07-03 17:44:46.872  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 17:44:46.872  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 17:44:46.873  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 17:44:47.275  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:44:47.275  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-c3ee9af8-e84e-4faf-85d1-542c9d2ba9a4 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-03 17:44:47.275  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:44:47.275  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-1e6ebb00-a64d-451e-a0bb-d5c1dc6d9e77 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-03 17:44:47.276  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 17:44:47.276  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 17:44:47.276  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 17:44:47.276  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 17:44:47.276  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-03 17:44:47.276  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-03 17:44:47.281  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 17:44:47.281  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 17:44:47.281  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 17:44:47.281  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 17:44:47.283  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-03 17:44:47.283  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-03 17:44:47.283  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-03 17:44:47.285  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-03 17:44:47.286  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-03 17:44:47.586  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-03 17:44:47.586  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-03 17:44:47.586  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-03 17:44:47.587  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-03 17:44:47.588  INFO 52299 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-03 17:44:47.590  INFO 52299 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03 17:44:47.592  INFO 52299 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03 17:44:47.594  INFO 52299 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-03 17:44:53.372  INFO 52329 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 52329 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-03 17:44:53.373 DEBUG 52329 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-03 17:44:53.373  INFO 52329 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-03 17:44:53.652  INFO 52329 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03 17:44:53.679  INFO 52329 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 22 ms. Found 2 JPA repository interfaces.
2024-07-03 17:44:54.234  INFO 52329 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-03 17:44:54.240  INFO 52329 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03 17:44:54.241  INFO 52329 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-03 17:44:54.285  INFO 52329 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03 17:44:54.285  INFO 52329 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 885 ms
2024-07-03 17:44:54.414  INFO 52329 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-03 17:44:54.445  INFO 52329 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-03 17:44:54.535  INFO 52329 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-03 17:44:54.589  INFO 52329 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03 17:44:54.702  INFO 52329 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03 17:44:54.719  INFO 52329 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-03 17:44:55.218  INFO 52329 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-03 17:44:55.223  INFO 52329 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03 17:44:55.527  WARN 52329 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03 17:44:56.039  INFO 52329 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-03 17:44:56.149  INFO 52329 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-03 17:44:56.149  INFO 52329 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-03 17:44:56.149  INFO 52329 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720017896148
2024-07-03 17:44:56.151  INFO 52329 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-03 17:44:56.155  INFO 52329 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-03 17:44:56.161  INFO 52329 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-03 17:44:56.161  INFO 52329 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-03 17:44:56.162  INFO 52329 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720017896161
2024-07-03 17:44:56.162  INFO 52329 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-03 17:44:56.170  INFO 52329 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-03 17:44:56.177  INFO 52329 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 3.035 seconds (JVM running for 3.51)
2024-07-03 17:44:56.345  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: vt3ZtIP6R3G9uiCNesjNKA
2024-07-03 17:44:56.345  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: vt3ZtIP6R3G9uiCNesjNKA
2024-07-03 17:44:56.346  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 17:44:56.346  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 17:44:56.347  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:44:56.347  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:44:56.358  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca
2024-07-03 17:44:56.358  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014
2024-07-03 17:44:56.358  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-03 17:44:56.358  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-03 17:44:56.358  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:44:56.358  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:44:58.553  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=222, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:44:58.556  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=31, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:44:58.632  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=222, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:44:58.634  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:44:58.635  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:44:58.640  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:44:58.640  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:44:58.974  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=31, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:44:58.975  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 17:44:58.975  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 17:44:58.975  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 17:45:10.564  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:45:10.566  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 17:45:10.566  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 17:45:10.566  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:45:10.570  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=32, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:45:10.576  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=32, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:45:10.576  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 17:45:10.576  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 17:45:10.576  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 17:45:13.561  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:45:13.562  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:45:13.562  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:45:13.562  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:45:13.565  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=223, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:45:13.572  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:45:13.572  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 17:45:13.572  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 17:45:13.572  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:45:13.573  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 223: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:45:13.574  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=33, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:45:13.574  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 33: {consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:45:13.575  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=33, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:45:13.575  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=223, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:45:13.576  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:45:13.576  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:45:13.576  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:45:13.576  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:45:13.578  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:45:13.578  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:45:13.578  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:45:13.578  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:45:16.576  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:45:16.577  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:45:16.578  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:45:16.578  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:45:16.580  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=34, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:45:16.603  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 34: {consumer-auth-1-f69b1fed-c7d4-4ebc-b2b2-bea79ff52742=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[]), consumer-auth-2-5b815bc8-292d-4a6a-a0cc-c7e9489555ef=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:45:16.605  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=34, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:45:16.606  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 17:45:16.606  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 17:45:16.606  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 17:45:22.569  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:45:22.571  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:45:22.571  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:45:22.571  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:45:22.586  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:45:22.586  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 17:45:22.586  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 17:45:22.586  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:45:22.587  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=224, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:45:22.591  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=35, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:45:22.592  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 35: {consumer-auth-1-f69b1fed-c7d4-4ebc-b2b2-bea79ff52742=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-448649b3-e256-435a-84ea-67eb5c00fafe=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[]), consumer-auth-2-5b815bc8-292d-4a6a-a0cc-c7e9489555ef=Assignment(partitions=[])}
2024-07-03 17:45:22.599  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=35, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:45:22.600  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 17:45:22.600  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 17:45:22.600  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 17:45:22.792  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 224: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0]), consumer-event-service-group-1-d549bd25-ac4b-4e7e-b300-290e692b11cc=Assignment(partitions=[band-registration-0])}
2024-07-03 17:45:22.796  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=224, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:45:22.797  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:45:22.797  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:45:22.803  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:45:22.803  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:50:22.709  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:50:22.712  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:50:22.713  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:50:22.714  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:50:22.721  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=225, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:50:22.722  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 225: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:50:22.732  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=225, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:50:22.732  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:50:22.732  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:50:22.737  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:50:22.737  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:50:22.785  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:50:22.787  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 17:50:22.788  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 17:50:22.788  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:50:22.840  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=36, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:50:22.841  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 36: {consumer-auth-1-f69b1fed-c7d4-4ebc-b2b2-bea79ff52742=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[]), consumer-auth-2-5b815bc8-292d-4a6a-a0cc-c7e9489555ef=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:50:22.844  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=36, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:50:22.845  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 17:50:22.845  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 17:50:22.845  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 17:50:23.141  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: cached metadata has changed from (version3: {band-registration=[NO_RACKS], band-registration-request=[NO_RACKS]}) at the beginning of the rebalance to (version4: {band-registration-request=[NO_RACKS]})
2024-07-03 17:50:23.142  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:50:23.142  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:50:23.142  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:50:23.143  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=226, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:50:23.143  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 226: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:50:23.144  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=226, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:50:23.144  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:50:23.144  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:50:23.145  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:50:23.145  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:50:25.842  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:50:25.842  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 17:50:25.842  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 17:50:25.842  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:50:25.843  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=37, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:50:25.843  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 37: {consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:50:25.844  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=37, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:50:25.845  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:50:25.845  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:50:25.845  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:50:25.846  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:50:28.844  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:50:28.844  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:50:28.844  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:50:28.845  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:50:28.846  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=38, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:50:28.846  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 38: {consumer-auth-2-392304af-4241-4e43-8903-04dfcf9ecf36=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[])}
2024-07-03 17:50:28.848  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=38, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:50:28.848  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 17:50:28.848  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 17:50:28.848  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 17:50:29.146  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:50:29.146  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:50:29.146  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:50:29.147  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:50:29.148  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=227, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:50:29.170  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 227: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0]), consumer-event-service-group-1-4be0db51-9918-46ce-abbd-83696815c7f5=Assignment(partitions=[band-registration-0])}
2024-07-03 17:50:29.171  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=227, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:50:29.172  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:50:29.172  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:50:29.173  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:50:29.173  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:50:31.848  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:50:31.849  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 17:50:31.849  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 17:50:31.849  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:50:31.851  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=39, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:50:31.852  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 39: {consumer-auth-1-5560f33c-66c7-413b-be51-3c6cef2a1825=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-e0377e62-a56f-48df-b1c0-9fccb35c4609=Assignment(partitions=[]), consumer-auth-2-392304af-4241-4e43-8903-04dfcf9ecf36=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[])}
2024-07-03 17:50:31.853  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=39, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:50:31.853  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 17:50:31.853  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 17:50:31.853  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 17:50:43.855  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:50:43.856  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 17:50:43.856  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 17:50:43.856  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:50:43.860  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=40, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:50:43.862  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 40: {consumer-auth-1-5560f33c-66c7-413b-be51-3c6cef2a1825=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-e0377e62-a56f-48df-b1c0-9fccb35c4609=Assignment(partitions=[]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:50:43.864  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=40, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:50:43.864  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:50:43.864  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:50:43.865  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:50:43.865  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:50:44.152  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:50:44.152  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:50:44.152  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:50:44.153  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:50:44.154  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=228, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:50:44.154  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 228: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:50:44.155  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=228, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:50:44.155  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:50:44.155  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:50:44.156  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:50:44.156  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:50:52.865  INFO 52329 --- [kafka-coordinator-heartbeat-thread | auth] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:50:52.866  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:50:52.866  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:50:52.866  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:50:52.873  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=41, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:50:53.204  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:50:53.204  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:50:53.204  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:50:53.204  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:50:53.205  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=229, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:50:53.267  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 41: {consumer-auth-1-5560f33c-66c7-413b-be51-3c6cef2a1825=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-e0377e62-a56f-48df-b1c0-9fccb35c4609=Assignment(partitions=[]), consumer-auth-2-a18a86fe-7a3d-42b2-a289-00cce0f03e65=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[])}
2024-07-03 17:50:53.271  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=41, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:50:53.271  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 17:50:53.272  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 17:50:53.272  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 17:50:53.334  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 229: {consumer-event-service-group-1-30092f31-c463-412d-a10f-7defd886fe12=Assignment(partitions=[band-registration-0]), consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:50:53.347  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=229, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:50:53.347  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:50:53.347  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:50:53.348  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:50:53.348  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:51:28.892  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:51:28.895  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 17:51:28.895  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 17:51:28.895  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:51:28.899  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=42, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:51:28.902  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 42: {consumer-auth-1-5560f33c-66c7-413b-be51-3c6cef2a1825=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-e0377e62-a56f-48df-b1c0-9fccb35c4609=Assignment(partitions=[]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:51:28.906  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=42, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:51:28.906  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:51:28.906  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:51:28.908  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:51:28.908  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:51:29.223  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:51:29.224  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:51:29.224  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:51:29.224  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:51:29.226  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=230, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:51:29.226  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 230: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:51:29.229  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=230, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:51:29.229  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:51:29.229  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:51:29.231  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:51:29.231  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:51:34.902  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:51:34.903  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:51:34.903  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:51:34.903  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:51:34.904  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=43, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:51:34.904  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 43: {consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:51:34.905  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=43, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:51:34.906  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:51:34.906  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:51:34.907  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:51:34.907  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:51:37.905  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:51:37.906  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:51:37.906  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:51:37.906  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:51:37.907  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=44, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:51:37.907  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 44: {consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[]), consumer-auth-2-307578f8-a206-4ae0-aa79-9e5e77998e6c=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:51:37.909  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=44, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:51:37.909  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 17:51:37.909  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 17:51:37.909  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 17:51:38.229  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:51:38.229  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:51:38.229  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:51:38.229  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:51:38.230  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=231, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:51:38.610  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 231: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0]), consumer-event-service-group-1-d916e0f2-07ec-49d9-837c-77902a834d44=Assignment(partitions=[band-registration-0])}
2024-07-03 17:51:38.612  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=231, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:51:38.612  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:51:38.612  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:51:38.613  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:51:38.613  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:51:43.910  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:51:43.911  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 17:51:43.911  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 17:51:43.911  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:51:43.915  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=45, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:51:43.917  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 45: {consumer-auth-2-f6d4bc4a-b7d8-4218-b1bd-21abcbdb59dd=Assignment(partitions=[]), consumer-auth-1-ed26d85a-8181-4a3e-8a4d-c0964b6c2ad3=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[]), consumer-auth-2-307578f8-a206-4ae0-aa79-9e5e77998e6c=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:51:43.920  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=45, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:51:43.920  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 17:51:43.920  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 17:51:43.920  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 17:53:56.544  INFO 52329 --- [kafka-coordinator-heartbeat-thread | auth] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Node -1 disconnected.
2024-07-03 17:53:56.543  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Node -1 disconnected.
2024-07-03 17:54:22.972  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:54:22.974  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 17:54:22.975  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 17:54:22.975  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:54:22.983  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=46, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:54:22.987  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 46: {consumer-auth-2-f6d4bc4a-b7d8-4218-b1bd-21abcbdb59dd=Assignment(partitions=[]), consumer-auth-1-ed26d85a-8181-4a3e-8a4d-c0964b6c2ad3=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:54:22.993  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=46, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:54:22.993  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:54:22.993  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:54:22.995  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:54:22.995  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:54:23.670  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:54:23.670  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:54:23.670  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:54:23.670  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:54:23.672  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=232, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:54:23.672  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 232: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:54:23.674  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=232, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:54:23.675  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:54:23.675  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:54:23.677  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:54:23.677  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:54:25.985  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:54:25.986  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:54:25.986  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:54:25.986  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:54:25.988  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=47, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:54:25.989  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 47: {consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:54:25.991  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=47, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:54:25.991  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:54:25.991  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:54:25.993  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:54:25.993  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:55:02.002  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:55:02.003  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:55:02.004  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:55:02.004  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:55:02.013  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=48, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:55:02.268  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 48: {consumer-auth-2-ca6b444e-d5f9-444c-9830-484e37e2a053=Assignment(partitions=[]), consumer-auth-1-7e8cde27-8ac7-4088-87d0-07f1082e60ec=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-cca69c8e-81e7-4688-a30b-62f50fe3d3da=Assignment(partitions=[]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:55:02.277  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=48, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:55:02.277  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:55:02.278  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:55:02.283  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:55:02.284  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:55:02.699  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:55:02.699  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:55:02.699  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:55:02.699  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:55:02.700  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=233, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:55:03.171  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 233: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0]), consumer-event-service-group-1-23c38899-47ca-412e-8a01-b55e5d6e125c=Assignment(partitions=[band-registration-0])}
2024-07-03 17:55:03.175  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=233, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:55:03.175  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:55:03.175  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:55:03.181  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:55:03.182  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:56:47.054  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:56:47.056  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:56:47.057  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:56:47.057  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:56:47.059  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=49, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:56:47.060  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 49: {consumer-auth-2-ca6b444e-d5f9-444c-9830-484e37e2a053=Assignment(partitions=[]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:56:47.064  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=49, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:56:47.064  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:56:47.065  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:56:47.066  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:56:47.066  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:56:50.060  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:56:50.061  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:56:50.061  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:56:50.061  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:56:50.062  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=50, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:56:50.062  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 50: {consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:56:50.063  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=50, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:56:50.063  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:56:50.063  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:56:50.064  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:56:50.064  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:56:50.745  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:56:50.745  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:56:50.745  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:56:50.745  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:56:50.746  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=234, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:56:50.747  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 234: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:56:50.749  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=234, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:56:50.749  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:56:50.749  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:56:50.750  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:56:50.750  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:57:14.070  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:57:14.071  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:57:14.071  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:57:14.072  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:57:14.074  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=51, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:57:14.075  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 51: {consumer-auth-2-fdc663c1-2fc3-4f19-bafc-b5143f62e9fb=Assignment(partitions=[]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:57:14.078  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=51, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:57:14.078  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:57:14.078  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:57:14.080  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=8, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:57:14.080  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:57:14.756  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 17:57:14.756  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 17:57:14.756  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 17:57:14.756  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 17:57:14.758  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=235, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:57:15.050  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 235: {consumer-event-service-group-1-edb3983f-374c-4056-a25d-e75fcda6b976=Assignment(partitions=[band-registration-0]), consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 17:57:15.052  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=235, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 17:57:15.052  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 17:57:15.052  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 17:57:15.053  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:57:15.053  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 17:57:17.076  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:57:17.076  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:57:17.076  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:57:17.076  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:57:17.083  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=52, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:57:17.572  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 52: {consumer-auth-2-4dcfd3cc-89ec-43bf-b80e-8029a5c81033=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-1-4ee321f0-777e-4aaa-a8aa-77f6216030ca=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-fdc663c1-2fc3-4f19-bafc-b5143f62e9fb=Assignment(partitions=[]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[])}
2024-07-03 17:57:17.575  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=52, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:57:17.575  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 17:57:17.575  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 17:57:17.575  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 17:58:50.124  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:58:50.126  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 17:58:50.126  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 17:58:50.127  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:58:50.129  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=53, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:58:50.129  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 53: {consumer-auth-2-fdc663c1-2fc3-4f19-bafc-b5143f62e9fb=Assignment(partitions=[]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:58:50.133  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=53, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:58:50.134  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:58:50.134  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:58:50.135  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=9, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:58:50.136  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 17:59:17.143  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 17:59:17.144  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 17:59:17.144  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 17:59:17.144  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 17:59:17.148  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=54, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:59:17.484  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 54: {consumer-auth-1-c0ffbd20-fb71-470c-80bd-6476e5e8e713=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-fdc663c1-2fc3-4f19-bafc-b5143f62e9fb=Assignment(partitions=[]), consumer-auth-2-dcb9234e-9c8f-48af-b1b9-83de2059156e=Assignment(partitions=[]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 17:59:17.488  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=54, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 17:59:17.489  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 17:59:17.489  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 17:59:17.491  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=9, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 17:59:17.491  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 18:00:53.189  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:00:53.191  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 18:00:53.192  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 18:00:53.193  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:00:53.198  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=55, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:00:53.199  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 55: {consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 18:00:53.206  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=55, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:00:53.207  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 18:00:53.207  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 18:00:53.212  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:00:53.212  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 18:00:53.841  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 18:00:53.841  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 18:00:53.841  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 18:00:53.841  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 18:00:53.843  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=236, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:00:53.843  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 236: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 18:00:53.845  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=236, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:00:53.846  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 18:00:53.846  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 18:00:53.848  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:00:53.848  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 18:01:02.200  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:01:02.200  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 18:01:02.200  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 18:01:02.200  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:01:02.202  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=56, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:01:02.304  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 56: {consumer-auth-2-06cfd02f-9712-4a07-b9ef-d7f1245d37a2=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-1-064a46f9-1f7b-4bfe-8085-e21f0aceb420=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-186afbdb-e13e-4923-9945-a22db45ff334=Assignment(partitions=[]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[])}
2024-07-03 18:01:02.306  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=56, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:01:02.306  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 18:01:02.307  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 18:01:02.307  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 18:01:02.848  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 18:01:02.848  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 18:01:02.848  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 18:01:02.848  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 18:01:02.849  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=237, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:01:02.990  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 237: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0]), consumer-event-service-group-1-5edcd844-0b7b-46c4-b801-a339aec76b9f=Assignment(partitions=[band-registration-0])}
2024-07-03 18:01:02.993  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=237, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:01:02.993  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 18:01:02.993  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 18:01:02.994  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:01:02.994  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 18:07:14.369  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:07:14.371  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 18:07:14.373  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 18:07:14.374  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:07:14.384  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=57, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:07:14.385  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 57: {consumer-auth-2-06cfd02f-9712-4a07-b9ef-d7f1245d37a2=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[])}
2024-07-03 18:07:14.390  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=57, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:07:14.390  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 18:07:14.391  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 18:07:14.391  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 18:07:17.385  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:07:17.385  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 18:07:17.385  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 18:07:17.385  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:07:17.386  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=58, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:07:17.386  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 58: {consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 18:07:17.388  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=58, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:07:17.388  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 18:07:17.388  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 18:07:17.390  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=11, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:07:17.390  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 18:07:18.010  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 18:07:18.010  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 18:07:18.011  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 18:07:18.011  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 18:07:18.012  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=238, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:07:18.012  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 238: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 18:07:18.014  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=238, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:07:18.014  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 18:07:18.014  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 18:07:18.015  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:07:18.015  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 18:07:20.388  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:07:20.388  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 18:07:20.388  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 18:07:20.388  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:07:20.389  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=59, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:07:20.407  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 59: {consumer-auth-2-ab2cb2a0-bf01-4a0a-8b2d-7aec10f7582e=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[]), consumer-auth-1-29519ef2-edb9-4647-b98b-7c45edf9ae15=Assignment(partitions=[roleCheckTopic-0])}
2024-07-03 18:07:20.410  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=59, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:07:20.410  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 18:07:20.410  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 18:07:20.410  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 18:07:23.391  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:07:23.391  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 18:07:23.391  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 18:07:23.391  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:07:23.396  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=60, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:07:23.397  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 60: {consumer-auth-2-a6c9c8e7-b5c7-4f70-ae41-fa765d34b824=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-ab2cb2a0-bf01-4a0a-8b2d-7aec10f7582e=Assignment(partitions=[]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[]), consumer-auth-1-29519ef2-edb9-4647-b98b-7c45edf9ae15=Assignment(partitions=[roleCheckTopic-0])}
2024-07-03 18:07:23.399  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=60, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:07:23.399  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 18:07:23.399  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 18:07:23.399  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 18:07:24.015  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 18:07:24.016  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 18:07:24.016  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 18:07:24.016  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 18:07:24.018  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=239, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:07:24.449  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 239: {consumer-event-service-group-1-d9f25743-22dc-4558-89bf-63efa1655bf3=Assignment(partitions=[band-registration-0]), consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 18:07:24.454  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=239, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:07:24.454  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 18:07:24.454  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 18:07:24.456  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:07:24.456  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 18:17:11.627  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:17:11.630  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 18:17:11.630  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 18:17:11.631  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:17:11.693  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=61, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:17:11.697  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 61: {consumer-auth-2-a6c9c8e7-b5c7-4f70-ae41-fa765d34b824=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[])}
2024-07-03 18:17:11.705  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=61, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:17:11.705  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 18:17:11.705  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 18:17:11.705  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 18:17:23.404  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: cached metadata has changed from (version21: {roleCheckResponseTopic=[NO_RACKS], roleCheckTopic=[NO_RACKS]}) at the beginning of the rebalance to (version22: {roleCheckResponseTopic=[NO_RACKS]})
2024-07-03 18:17:23.404  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 18:17:23.405  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 18:17:23.405  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:17:23.699  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=62, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:17:23.699  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 62: {consumer-auth-2-a6c9c8e7-b5c7-4f70-ae41-fa765d34b824=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[])}
2024-07-03 18:17:23.702  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=62, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:17:23.702  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 18:17:23.702  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 18:17:23.702  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 18:18:29.756  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:18:29.757  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 18:18:29.758  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 18:18:29.758  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:18:29.763  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=63, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:18:29.769  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 63: {consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 18:18:29.774  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=63, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:18:29.774  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 18:18:29.774  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 18:18:29.776  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=12, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:18:29.776  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 18:18:30.354  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 18:18:30.354  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 18:18:30.354  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 18:18:30.354  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 18:18:30.355  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=240, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:18:30.355  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 240: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 18:18:30.357  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=240, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:18:30.357  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 18:18:30.357  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 18:18:30.357  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:18:30.357  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 18:18:35.766  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:18:35.766  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 18:18:35.766  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 18:18:35.766  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:18:35.768  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=64, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:18:35.815  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 64: {consumer-auth-2-461729fb-e86f-485e-abec-d6c721170522=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-1-a62eebb7-fc4e-4160-8985-cad9ce2fc525=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[])}
2024-07-03 18:18:35.816  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=64, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:18:35.816  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 18:18:35.816  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 18:18:35.817  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 18:18:36.358  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 18:18:36.359  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 18:18:36.359  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 18:18:36.359  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 18:18:36.360  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=241, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:18:36.467  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 241: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0]), consumer-event-service-group-1-fc7b93f4-93d4-4d1a-b869-057c0c0bb0ea=Assignment(partitions=[band-registration-0])}
2024-07-03 18:18:36.470  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=241, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:18:36.470  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 18:18:36.470  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 18:18:36.473  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:18:36.473  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 18:18:38.769  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:18:38.769  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 18:18:38.770  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 18:18:38.770  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:18:38.773  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=65, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:18:38.775  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 65: {consumer-auth-2-8f23e225-2571-48ef-8756-28c14433fcea=Assignment(partitions=[]), consumer-auth-2-461729fb-e86f-485e-abec-d6c721170522=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-1-a62eebb7-fc4e-4160-8985-cad9ce2fc525=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[])}
2024-07-03 18:18:38.777  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=65, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:18:38.777  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 18:18:38.777  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 18:18:38.777  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 18:19:14.788  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:19:14.791  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 18:19:14.792  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 18:19:14.792  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:19:14.795  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=66, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:19:14.796  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 66: {consumer-auth-2-8f23e225-2571-48ef-8756-28c14433fcea=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[])}
2024-07-03 18:19:14.798  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=66, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:19:14.798  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 18:19:14.798  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 18:19:14.798  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 18:19:15.441  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 18:19:15.441  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 18:19:15.441  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 18:19:15.441  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 18:19:15.443  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=242, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:19:15.443  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 242: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 18:19:15.445  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=242, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:19:15.446  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 18:19:15.446  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 18:19:15.447  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:19:15.447  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 18:19:17.797  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:19:17.797  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 18:19:17.797  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 18:19:17.797  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:19:17.798  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=67, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:19:17.798  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 67: {consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 18:19:17.799  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=67, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:19:17.800  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 18:19:17.800  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 18:19:17.801  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=14, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:19:17.801  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 18:19:23.801  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:19:23.803  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 18:19:23.803  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 18:19:23.803  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:19:23.805  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=68, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:19:23.805  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 68: {consumer-auth-2-01cbb2cd-6b95-4dcf-9b0e-ab4f794b6175=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[])}
2024-07-03 18:19:23.807  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=68, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:19:23.808  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 18:19:23.808  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 18:19:23.808  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 18:19:24.447  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 18:19:24.447  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 18:19:24.447  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 18:19:24.447  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 18:19:24.449  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=243, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:19:24.753  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 243: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0]), consumer-event-service-group-1-b70189f5-c94b-440e-aae6-a62c0dcce660=Assignment(partitions=[band-registration-0])}
2024-07-03 18:19:24.756  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=243, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:19:24.756  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 18:19:24.756  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 18:19:24.757  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:19:24.757  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 18:19:32.809  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:19:32.810  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 18:19:32.810  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 18:19:32.810  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:19:32.813  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=69, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:19:32.816  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 69: {consumer-auth-1-46a19214-f59f-4145-800d-39b35938d4de=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-e62b01ce-6bc8-47cc-baf9-fe3d6783660f=Assignment(partitions=[]), consumer-auth-2-01cbb2cd-6b95-4dcf-9b0e-ab4f794b6175=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[])}
2024-07-03 18:19:32.819  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=69, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:19:32.819  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 18:19:32.819  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 18:19:32.819  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 18:22:17.950  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:22:17.960  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 18:22:17.965  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 18:22:17.969  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:22:17.977  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=70, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:22:17.979  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 70: {consumer-auth-2-01cbb2cd-6b95-4dcf-9b0e-ab4f794b6175=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[])}
2024-07-03 18:22:17.987  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=70, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:22:17.988  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 18:22:17.988  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 18:22:17.989  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 18:22:20.979  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:22:20.979  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 18:22:20.979  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 18:22:20.980  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:22:20.984  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=71, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:22:20.986  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 71: {consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 18:22:20.991  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=71, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:22:20.993  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 18:22:20.993  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 18:22:20.998  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=15, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:22:20.999  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 18:22:21.516  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 18:22:21.517  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 18:22:21.517  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 18:22:21.517  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 18:22:21.518  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=244, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:22:21.519  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 244: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 18:22:21.521  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=244, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:22:21.521  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 18:22:21.521  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 18:22:21.522  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:22:21.523  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 18:22:26.987  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:22:26.987  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 18:22:26.987  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 18:22:26.987  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:22:26.989  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=72, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:22:27.043  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 72: {consumer-auth-1-9f6ca39e-ffaa-4cc2-b354-f67936225273=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-8c8091ec-87c4-4d55-8bcc-ff3259497f04=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[]), consumer-auth-2-cbede9da-668a-4a3f-bf28-7ae78244b6f5=Assignment(partitions=[])}
2024-07-03 18:22:27.052  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=72, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:22:27.052  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 18:22:27.053  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 18:22:27.053  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 18:22:27.522  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 18:22:27.522  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 18:22:27.523  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 18:22:27.523  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 18:22:27.538  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=245, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:22:27.781  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 245: {consumer-event-service-group-1-2e3f61ab-b24b-4d71-b7db-c896bf538201=Assignment(partitions=[band-registration-0]), consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 18:22:27.785  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=245, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:22:27.785  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 18:22:27.785  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 18:22:27.789  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:22:27.789  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 18:23:54.026  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:23:54.026  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 18:23:54.027  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 18:23:54.027  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:23:54.035  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=73, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:23:54.036  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 73: {consumer-auth-2-8c8091ec-87c4-4d55-8bcc-ff3259497f04=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[])}
2024-07-03 18:23:54.039  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=73, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:23:54.040  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 18:23:54.040  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 18:23:54.040  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 18:23:57.037  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:23:57.037  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-03 18:23:57.037  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-03 18:23:57.037  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:23:57.038  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=74, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:23:57.038  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 74: {consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 18:23:57.039  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=74, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:23:57.040  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 18:23:57.040  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 18:23:57.041  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=16, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:23:57.041  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 18:23:57.570  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 18:23:57.570  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 18:23:57.570  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 18:23:57.570  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 18:23:57.571  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=246, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:23:57.571  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 246: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0])}
2024-07-03 18:23:57.573  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=246, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:23:57.574  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 18:23:57.574  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 18:23:57.575  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:23:57.575  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 18:24:03.041  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:24:03.041  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 18:24:03.041  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 18:24:03.041  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:24:03.043  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=75, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:24:03.043  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 75: {consumer-auth-2-f806f1a8-df37-4ab8-8ee7-0a3faac6ffe2=Assignment(partitions=[]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-03 18:24:03.045  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=75, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:24:03.045  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 18:24:03.045  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 18:24:03.047  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=16, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:24:03.047  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 18:24:03.574  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-03 18:24:03.574  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 18:24:03.574  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 18:24:03.574  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 18:24:03.575  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=247, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:24:03.794  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 247: {consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014=Assignment(partitions=[band-registration-request-0]), consumer-event-service-group-1-07af8a18-8a49-40f8-b84f-4864e8f56cb3=Assignment(partitions=[band-registration-0])}
2024-07-03 18:24:03.796  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=247, memberId='consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014', protocol='range'}
2024-07-03 18:24:03.796  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 18:24:03.796  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 18:24:03.797  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:24:03.797  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 18:24:36.073  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-03 18:24:36.076  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 18:24:36.077  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 18:24:36.077  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 18:24:36.085  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=76, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:24:36.393  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 76: {consumer-auth-2-c1d22934-3c5f-47b5-82b1-7e2ac5d03fd0=Assignment(partitions=[]), consumer-auth-2-f806f1a8-df37-4ab8-8ee7-0a3faac6ffe2=Assignment(partitions=[]), consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-1-f4f09dae-c502-435f-bd37-9779864b33a1=Assignment(partitions=[roleCheckTopic-0])}
2024-07-03 18:24:36.400  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=76, memberId='consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca', protocol='range'}
2024-07-03 18:24:36.401  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-03 18:24:36.401  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-03 18:24:36.404  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=16, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 18:24:36.404  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-03 18:25:05.414  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 18:25:05.414  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-03 18:25:05.414  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 18:25:05.415  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-03 18:25:05.415  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-b3b2abac-759f-4cb0-8a34-b10ec25e01ca sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-03 18:25:05.415  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-c1f8d52c-64b6-4302-8119-165e58c69014 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-03 18:25:05.415  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 18:25:05.415  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 18:25:05.415  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 18:25:05.416  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 18:25:05.417  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-03 18:25:05.415  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-03 18:25:05.418  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 18:25:05.418  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 18:25:05.419  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 18:25:05.419  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 18:25:05.606  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-03 18:25:05.606  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-03 18:25:05.606  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-03 18:25:05.608  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-03 18:25:05.608  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-03 18:25:05.817  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-03 18:25:05.817  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-03 18:25:05.817  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-03 18:25:05.820  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-03 18:25:05.820  INFO 52329 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-03 18:25:05.825  INFO 52329 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03 18:25:05.830  INFO 52329 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03 18:25:05.832  INFO 52329 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-03 19:49:05.077  INFO 57958 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 57958 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-03 19:49:05.079 DEBUG 57958 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-03 19:49:05.079  INFO 57958 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-03 19:49:05.357  INFO 57958 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03 19:49:05.450  INFO 57958 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 85 ms. Found 2 JPA repository interfaces.
2024-07-03 19:49:05.956  INFO 57958 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-03 19:49:05.962  INFO 57958 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03 19:49:05.962  INFO 57958 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-03 19:49:06.009  INFO 57958 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03 19:49:06.010  INFO 57958 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 902 ms
2024-07-03 19:49:06.142  INFO 57958 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-03 19:49:06.174  INFO 57958 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-03 19:49:06.266  INFO 57958 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-03 19:49:06.321  INFO 57958 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03 19:49:06.447  INFO 57958 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03 19:49:06.459  INFO 57958 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-03 19:49:06.847  INFO 57958 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-03 19:49:06.852  INFO 57958 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03 19:49:07.157  WARN 57958 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03 19:49:07.713  INFO 57958 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-03 19:49:07.823  INFO 57958 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-03 19:49:07.824  INFO 57958 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-03 19:49:07.824  INFO 57958 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720025347823
2024-07-03 19:49:07.826  INFO 57958 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-03 19:49:07.830  INFO 57958 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-03 19:49:07.839  INFO 57958 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-03 19:49:07.840  INFO 57958 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-03 19:49:07.840  INFO 57958 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720025347839
2024-07-03 19:49:07.840  INFO 57958 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-03 19:49:07.849  INFO 57958 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-03 19:49:07.857  INFO 57958 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 3.001 seconds (JVM running for 3.195)
2024-07-03 19:49:08.025  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: vt3ZtIP6R3G9uiCNesjNKA
2024-07-03 19:49:08.025  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: vt3ZtIP6R3G9uiCNesjNKA
2024-07-03 19:49:08.026  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 19:49:08.026  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-03 19:49:08.027  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 19:49:08.027  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 19:49:08.044  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-be9b42f8-0807-4375-b394-e806e06c29fb
2024-07-03 19:49:08.044  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-0aef029c-fe20-4c07-b671-7625e6c7d345
2024-07-03 19:49:08.044  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-03 19:49:08.044  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-03 19:49:08.044  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-03 19:49:08.044  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-03 19:49:08.166  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=309, memberId='consumer-event-service-group-1-0aef029c-fe20-4c07-b671-7625e6c7d345', protocol='range'}
2024-07-03 19:49:08.181  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=185, memberId='consumer-auth-2-be9b42f8-0807-4375-b394-e806e06c29fb', protocol='range'}
2024-07-03 19:49:08.340  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=185, memberId='consumer-auth-2-be9b42f8-0807-4375-b394-e806e06c29fb', protocol='range'}
2024-07-03 19:49:08.341  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-03 19:49:08.342  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-03 19:49:08.342  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-03 19:49:08.495  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=309, memberId='consumer-event-service-group-1-0aef029c-fe20-4c07-b671-7625e6c7d345', protocol='range'}
2024-07-03 19:49:08.496  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-03 19:49:08.498  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-03 19:49:08.505  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=105, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-03 19:49:08.506  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-03 19:49:08.575  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.example.Service.EventServiceImpl     : Registration unsuccessful for bandId: 2 for eventId: 7
2024-07-03 19:49:08.578  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-03 19:49:08.587  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-07-03 19:49:08.594  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-03 19:49:08.595  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-03 19:49:08.595  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720025348594
2024-07-03 19:49:08.597  INFO 57958 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: vt3ZtIP6R3G9uiCNesjNKA
2024-07-03 19:49:08.598  INFO 57958 --- [kafka-producer-network-thread | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 174 with epoch 0
2024-07-03 19:58:08.099  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Node -1 disconnected.
2024-07-03 19:58:08.147  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Node -1 disconnected.
2024-07-03 19:58:08.609  INFO 57958 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=producer-1] Node -1 disconnected.
2024-07-03 20:15:47.704  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-03 20:15:47.704  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-be9b42f8-0807-4375-b394-e806e06c29fb sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-03 20:15:47.706  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-03 20:15:47.706  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 20:15:47.706  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 20:15:47.706  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-03 20:15:47.706  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-0aef029c-fe20-4c07-b671-7625e6c7d345 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-03 20:15:47.706  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 20:15:47.706  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 20:15:47.707  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 20:15:47.709  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-03 20:15:47.709  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 20:15:47.709  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-03 20:15:47.711  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-03 20:15:47.725  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-03 20:15:47.725  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-03 20:15:47.726  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-03 20:15:47.729  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-03 20:15:47.730  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-03 20:15:48.140  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-03 20:15:48.140  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-03 20:15:48.140  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-03 20:15:48.141  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-03 20:15:48.141  INFO 57958 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-03 20:15:48.156  INFO 57958 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03 20:15:48.159  INFO 57958 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03 20:15:48.161  INFO 57958 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 15:31:43.979  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 15:31:43.981  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 15:31:43.982  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 15:31:43.982  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 15:31:43.985  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=14, memberId='consumer-auth-2-3d0ed981-a06c-4ca3-8caa-3593a2a42a7e', protocol='range'}
2024-07-06 15:31:43.986  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 14: {consumer-auth-2-3d0ed981-a06c-4ca3-8caa-3593a2a42a7e=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-56c864cc-c65e-44f4-a02e-32f1715456e3=Assignment(partitions=[])}
2024-07-06 15:31:43.990  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=14, memberId='consumer-auth-2-3d0ed981-a06c-4ca3-8caa-3593a2a42a7e', protocol='range'}
2024-07-06 15:31:43.991  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 15:31:43.991  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 15:31:43.993  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 15:31:43.993  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 15:31:52.976  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 15:31:52.977  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 15:31:52.977  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 15:31:52.977  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 15:31:52.979  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=9, memberId='consumer-event-service-group-1-d6ecfd5a-66f2-43ce-83e0-1e6349c8ac73', protocol='range'}
2024-07-06 15:31:52.980  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 9: {consumer-event-service-group-1-d6ecfd5a-66f2-43ce-83e0-1e6349c8ac73=Assignment(partitions=[band-registration-request-0])}
2024-07-06 15:31:52.983  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=9, memberId='consumer-event-service-group-1-d6ecfd5a-66f2-43ce-83e0-1e6349c8ac73', protocol='range'}
2024-07-06 15:31:52.983  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 15:31:52.983  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 15:31:52.985  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 15:31:52.985  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 15:31:52.989  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 15:31:52.989  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 15:31:52.990  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 15:31:52.990  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 15:31:52.991  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=15, memberId='consumer-auth-2-3d0ed981-a06c-4ca3-8caa-3593a2a42a7e', protocol='range'}
2024-07-06 15:31:53.157  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 15: {consumer-auth-1-e330e3de-a3f2-4ace-99a7-9d4540a85e27=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-f59a0710-f2e7-4087-953e-d1df8a679dde=Assignment(partitions=[]), consumer-auth-2-3d0ed981-a06c-4ca3-8caa-3593a2a42a7e=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 15:31:53.160  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=15, memberId='consumer-auth-2-3d0ed981-a06c-4ca3-8caa-3593a2a42a7e', protocol='range'}
2024-07-06 15:31:53.161  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 15:31:53.161  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 15:31:53.163  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 15:31:53.164  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 15:32:01.869  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 15:32:01.869  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 15:32:01.870  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 15:32:01.870  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 15:32:01.870  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-d6ecfd5a-66f2-43ce-83e0-1e6349c8ac73 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 15:32:01.870  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-3d0ed981-a06c-4ca3-8caa-3593a2a42a7e sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 15:32:01.870  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 15:32:01.871  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 15:32:01.871  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 15:32:01.873  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 15:32:01.873  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 15:32:01.873  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 15:32:01.874  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 15:32:01.875  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 15:32:01.875  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 15:32:01.876  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 15:32:02.082  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 15:32:02.082  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 15:32:02.082  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 15:32:02.084  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 15:32:02.084  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 15:32:02.218  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 15:32:02.218  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 15:32:02.218  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 15:32:02.219  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 15:32:02.219  INFO 8765 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 15:32:02.232  INFO 8765 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 15:32:02.235  INFO 8765 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 15:32:02.236  INFO 8765 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 15:32:05.770  INFO 8945 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 8945 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 15:32:05.771 DEBUG 8945 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 15:32:05.771  INFO 8945 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 15:32:06.048  INFO 8945 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 15:32:06.140  INFO 8945 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 87 ms. Found 2 JPA repository interfaces.
2024-07-06 15:32:06.641  INFO 8945 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 15:32:06.648  INFO 8945 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 15:32:06.648  INFO 8945 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 15:32:06.696  INFO 8945 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 15:32:06.696  INFO 8945 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 895 ms
2024-07-06 15:32:06.820  INFO 8945 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 15:32:06.851  INFO 8945 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 15:32:06.941  INFO 8945 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 15:32:06.995  INFO 8945 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 15:32:07.116  INFO 8945 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 15:32:07.127  INFO 8945 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 15:32:07.506  INFO 8945 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 15:32:07.511  INFO 8945 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 15:32:07.933  WARN 8945 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 15:32:08.472  INFO 8945 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 15:32:08.580  INFO 8945 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 15:32:08.580  INFO 8945 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 15:32:08.580  INFO 8945 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720269128579
2024-07-06 15:32:08.582  INFO 8945 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 15:32:08.586  INFO 8945 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 15:32:08.592  INFO 8945 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 15:32:08.593  INFO 8945 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 15:32:08.593  INFO 8945 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720269128592
2024-07-06 15:32:08.593  INFO 8945 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 15:32:08.602  INFO 8945 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 15:32:08.610  INFO 8945 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 3.048 seconds (JVM running for 3.251)
2024-07-06 15:32:08.774  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 15:32:08.774  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 15:32:08.775  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 15:32:08.775  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 15:32:08.776  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 15:32:08.776  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 15:32:08.785  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1
2024-07-06 15:32:08.785  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe
2024-07-06 15:32:08.785  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 15:32:08.785  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 15:32:08.785  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 15:32:08.785  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 15:32:10.881  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=11, memberId='consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1', protocol='range'}
2024-07-06 15:32:10.970  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=11, memberId='consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1', protocol='range'}
2024-07-06 15:32:10.972  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 15:32:10.976  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 15:32:10.995  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 15:32:11.015  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=17, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:32:11.099  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 15:32:11.355  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=17, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:32:11.357  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 15:32:11.358  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 15:32:11.370  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 15:32:11.372  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 15:33:05.054  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 15:33:05.059  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 15:33:05.060  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 15:33:05.061  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 15:33:05.064  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=18, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:33:05.072  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=18, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:33:05.075  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 15:33:05.076  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 15:33:05.081  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 15:33:05.082  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 15:33:07.905  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 15:33:07.906  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 15:33:07.906  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 15:33:07.906  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 15:33:07.907  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=12, memberId='consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1', protocol='range'}
2024-07-06 15:33:07.913  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 12: {consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1=Assignment(partitions=[band-registration-request-0])}
2024-07-06 15:33:07.916  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=12, memberId='consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1', protocol='range'}
2024-07-06 15:33:07.916  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 15:33:07.916  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 15:33:07.917  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 15:33:07.917  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 15:33:08.066  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 15:33:08.066  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 15:33:08.066  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 15:33:08.066  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 15:33:08.067  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=19, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:33:08.068  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 19: {consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 15:33:08.069  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=19, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:33:08.069  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 15:33:08.069  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 15:33:08.070  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 15:33:08.070  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 15:33:14.069  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 15:33:14.070  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 15:33:14.070  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 15:33:14.070  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 15:33:14.074  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=20, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:33:14.247  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 20: {consumer-auth-1-12290e93-20dd-428d-8e4b-bd795552876c=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-33c4db49-a202-4503-ac49-76134fb99376=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe=Assignment(partitions=[])}
2024-07-06 15:33:14.250  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=20, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:33:14.250  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 15:33:14.250  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 15:33:14.250  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 15:33:17.076  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 15:33:17.076  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-06 15:33:17.076  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-06 15:33:17.076  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 15:33:17.079  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=21, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:33:17.080  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 21: {consumer-auth-1-12290e93-20dd-428d-8e4b-bd795552876c=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-33c4db49-a202-4503-ac49-76134fb99376=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-b39fecca-b3f2-4161-b0b6-6ba110066359=Assignment(partitions=[]), consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe=Assignment(partitions=[])}
2024-07-06 15:33:17.082  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=21, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:33:17.082  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 15:33:17.082  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 15:33:17.083  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 15:33:19.913  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 15:33:19.914  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 15:33:19.914  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 15:33:19.914  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 15:33:19.915  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=13, memberId='consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1', protocol='range'}
2024-07-06 15:33:20.166  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 13: {consumer-event-service-group-1-f3ac1d6d-5831-404c-86f6-7b5d2600ed78=Assignment(partitions=[band-registration-0]), consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1=Assignment(partitions=[band-registration-request-0])}
2024-07-06 15:33:20.169  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=13, memberId='consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1', protocol='range'}
2024-07-06 15:33:20.169  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 15:33:20.170  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 15:33:20.174  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 15:33:20.175  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 15:33:55.937  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 15:33:55.954  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 15:33:55.955  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 15:33:55.962  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 15:33:55.976  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=14, memberId='consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1', protocol='range'}
2024-07-06 15:33:55.985  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 14: {consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1=Assignment(partitions=[band-registration-request-0])}
2024-07-06 15:33:56.004  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=14, memberId='consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1', protocol='range'}
2024-07-06 15:33:56.004  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 15:33:56.005  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 15:33:56.016  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 15:33:56.017  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 15:33:56.100  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 15:33:56.101  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-06 15:33:56.101  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-06 15:33:56.101  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 15:33:56.104  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=22, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:33:56.109  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 22: {consumer-auth-1-12290e93-20dd-428d-8e4b-bd795552876c=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-33c4db49-a202-4503-ac49-76134fb99376=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe=Assignment(partitions=[])}
2024-07-06 15:33:56.114  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=22, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:33:56.124  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 15:33:56.124  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 15:33:56.125  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 15:34:19.997  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 15:34:20.000  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 15:34:20.000  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 15:34:20.001  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 15:34:20.004  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=15, memberId='consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1', protocol='range'}
2024-07-06 15:34:20.081  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 15: {consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1=Assignment(partitions=[band-registration-request-0]), consumer-event-service-group-1-a50d7af7-9ae2-4da7-b0a2-161d9fe0d18f=Assignment(partitions=[band-registration-0])}
2024-07-06 15:34:20.085  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=15, memberId='consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1', protocol='range'}
2024-07-06 15:34:20.086  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 15:34:20.086  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 15:34:20.088  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 15:34:20.088  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 15:34:20.113  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 15:34:20.114  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-06 15:34:20.114  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-06 15:34:20.114  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 15:34:20.119  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=23, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:34:20.120  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 23: {consumer-auth-2-9eb0f013-dcf3-47c3-8270-cf86637fcd2a=Assignment(partitions=[]), consumer-auth-1-12290e93-20dd-428d-8e4b-bd795552876c=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-33c4db49-a202-4503-ac49-76134fb99376=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe=Assignment(partitions=[])}
2024-07-06 15:34:20.122  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=23, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:34:20.122  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 15:34:20.123  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 15:34:20.123  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 15:35:38.034  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 15:35:38.038  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 15:35:38.038  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 15:35:38.038  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 15:35:38.042  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=16, memberId='consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1', protocol='range'}
2024-07-06 15:35:38.043  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 16: {consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1=Assignment(partitions=[band-registration-request-0])}
2024-07-06 15:35:38.048  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=16, memberId='consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1', protocol='range'}
2024-07-06 15:35:38.048  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 15:35:38.048  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 15:35:38.051  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 15:35:38.051  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 15:35:38.149  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 15:35:38.149  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-06 15:35:38.150  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-06 15:35:38.150  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 15:35:38.154  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=24, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:35:38.157  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 24: {consumer-auth-1-12290e93-20dd-428d-8e4b-bd795552876c=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-33c4db49-a202-4503-ac49-76134fb99376=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe=Assignment(partitions=[])}
2024-07-06 15:35:38.159  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=24, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:35:38.160  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 15:35:38.160  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 15:35:38.160  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 15:35:47.045  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 15:35:47.046  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 15:35:47.046  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 15:35:47.046  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 15:35:47.049  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=17, memberId='consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1', protocol='range'}
2024-07-06 15:35:47.132  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 17: {consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1=Assignment(partitions=[band-registration-request-0]), consumer-event-service-group-1-897e3c43-daac-423a-8818-b73aad88958c=Assignment(partitions=[band-registration-0])}
2024-07-06 15:35:47.136  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=17, memberId='consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1', protocol='range'}
2024-07-06 15:35:47.136  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 15:35:47.136  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 15:35:47.139  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 15:35:47.139  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 15:35:47.165  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 15:35:47.165  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-06 15:35:47.166  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-06 15:35:47.166  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 15:35:47.168  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=25, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:35:47.169  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 25: {consumer-auth-1-12290e93-20dd-428d-8e4b-bd795552876c=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-33c4db49-a202-4503-ac49-76134fb99376=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe=Assignment(partitions=[]), consumer-auth-2-e3e26c15-7f85-4c19-bd4e-cde101676dda=Assignment(partitions=[])}
2024-07-06 15:35:47.171  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=25, memberId='consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe', protocol='range'}
2024-07-06 15:35:47.172  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 15:35:47.172  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 15:35:47.172  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 15:41:03.771  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-9227d084-22ac-46b4-9ff7-1ab285972ffe sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 15:41:03.771  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 15:41:03.772  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 15:41:03.772  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-bfee6de3-43ab-42d4-b016-9992e0e4a3b1 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 15:41:03.772  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 15:41:03.772  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 15:41:03.773  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 15:41:03.773  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 15:41:03.773  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 15:41:03.773  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 15:41:03.775  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 15:41:03.775  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 15:41:03.776  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 15:41:03.776  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 15:41:03.779  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 15:41:03.779  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 15:41:03.779  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 15:41:03.782  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 15:41:03.782  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 15:41:04.139  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 15:41:04.140  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 15:41:04.140  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 15:41:04.145  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 15:41:04.145  INFO 8945 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 15:41:04.193  INFO 8945 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 15:41:04.204  INFO 8945 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 15:41:04.209  INFO 8945 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 15:53:17.844  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-d04eb1ab-f473-4042-bb2b-aa7f769d685f sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 15:53:17.845  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 15:53:17.846  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 15:53:17.845  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 15:53:17.846  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 15:53:17.846  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-ddcd32f8-5e0f-40e2-a3c9-5540a1bed5f3 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 15:53:17.847  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 15:53:17.847  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 15:53:17.848  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 15:53:17.850  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 15:53:17.850  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 15:53:17.850  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 15:53:17.850  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 15:53:17.852  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 15:53:17.858  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 15:53:17.858  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 15:53:17.858  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 15:53:17.864  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 15:53:17.864  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 15:53:18.111  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 15:53:18.112  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 15:53:18.112  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 15:53:18.113  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 15:53:18.114  INFO 9973 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 15:53:18.137  INFO 9973 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 15:53:18.140  INFO 9973 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 15:53:18.143  INFO 9973 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 15:53:34.180  INFO 10193 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 10193 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 15:53:34.184 DEBUG 10193 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 15:53:34.184  INFO 10193 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 15:53:34.580  INFO 10193 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 15:53:35.264  INFO 10193 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 673 ms. Found 2 JPA repository interfaces.
2024-07-06 15:53:35.923  INFO 10193 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 15:53:35.932  INFO 10193 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 15:53:35.932  INFO 10193 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 15:53:35.988  INFO 10193 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 15:53:35.988  INFO 10193 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1757 ms
2024-07-06 15:53:36.110  INFO 10193 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 15:53:36.140  INFO 10193 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 15:53:36.231  INFO 10193 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 15:53:36.284  INFO 10193 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 15:53:36.398  INFO 10193 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 15:53:36.409  INFO 10193 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 15:53:36.786  INFO 10193 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 15:53:36.791  INFO 10193 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 15:53:37.099  WARN 10193 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 15:53:37.622  INFO 10193 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 15:53:37.745  INFO 10193 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 15:53:37.745  INFO 10193 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 15:53:37.745  INFO 10193 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720270417744
2024-07-06 15:53:37.747  INFO 10193 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 15:53:37.751  INFO 10193 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 15:53:37.758  INFO 10193 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 15:53:37.758  INFO 10193 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 15:53:37.758  INFO 10193 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720270417758
2024-07-06 15:53:37.758  INFO 10193 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 15:53:37.767  INFO 10193 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 15:53:37.774  INFO 10193 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 4.104 seconds (JVM running for 4.596)
2024-07-06 15:53:37.936  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 15:53:37.936  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 15:53:37.936  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 15:53:37.936  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 15:53:37.937  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 15:53:37.937  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 15:53:37.948  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-d5a63041-ce26-4a71-9029-28861d516191
2024-07-06 15:53:37.948  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 15:53:37.948  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 15:53:37.957  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-4243edbc-90a9-4b46-9463-ecb0119ad779
2024-07-06 15:53:37.959  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 15:53:37.960  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 15:53:40.043  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=43, memberId='consumer-event-service-group-1-4243edbc-90a9-4b46-9463-ecb0119ad779', protocol='range'}
2024-07-06 15:53:40.049  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=61, memberId='consumer-auth-2-d5a63041-ce26-4a71-9029-28861d516191', protocol='range'}
2024-07-06 15:53:40.193  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=43, memberId='consumer-event-service-group-1-4243edbc-90a9-4b46-9463-ecb0119ad779', protocol='range'}
2024-07-06 15:53:40.193  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=61, memberId='consumer-auth-2-d5a63041-ce26-4a71-9029-28861d516191', protocol='range'}
2024-07-06 15:53:40.196  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 15:53:40.196  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 15:53:40.196  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 15:53:40.198  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 15:53:40.198  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 15:53:40.204  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 15:53:40.204  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 15:54:03.857  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.example.Service.EventServiceImpl     : Registration unsuccessful for bandId: 2 for eventId: 7
2024-07-06 15:54:03.863  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.ProducerConfig    : ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-06 15:54:03.874  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.producer.KafkaProducer     : [Producer clientId=producer-1] Instantiated an idempotent producer.
2024-07-06 15:54:03.883  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 15:54:03.883  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 15:54:03.883  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720270443882
2024-07-06 15:54:03.886  INFO 10193 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.Metadata        : [Producer clientId=producer-1] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 15:54:03.887  INFO 10193 --- [kafka-producer-network-thread | producer-1] o.a.k.c.p.internals.TransactionManager   : [Producer clientId=producer-1] ProducerId set to 1029 with epoch 0
2024-07-06 16:02:38.018  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Node -1 disconnected.
2024-07-06 16:02:38.245  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Node -1 disconnected.
2024-07-06 16:03:03.897  INFO 10193 --- [kafka-producer-network-thread | producer-1] org.apache.kafka.clients.NetworkClient   : [Producer clientId=producer-1] Node -1 disconnected.
2024-07-06 16:08:55.942  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.example.Service.EventServiceImpl     : Registration unsuccessful for bandId: 2 for eventId: 7
2024-07-06 17:12:18.489  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] com.example.Service.EventServiceImpl     : Registration unsuccessful for bandId: 2 for eventId: 7
2024-07-06 17:59:22.989  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 17:59:22.995  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-06 17:59:22.997  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-06 17:59:22.998  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 17:59:23.002  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=62, memberId='consumer-auth-2-d5a63041-ce26-4a71-9029-28861d516191', protocol='range'}
2024-07-06 17:59:23.003  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=62, memberId='consumer-auth-2-d5a63041-ce26-4a71-9029-28861d516191', protocol='range'}
2024-07-06 17:59:23.004  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-06 17:59:23.004  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 17:59:23.005  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=63, memberId='consumer-auth-2-d5a63041-ce26-4a71-9029-28861d516191', protocol='range'}
2024-07-06 17:59:23.015  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 63: {consumer-auth-2-d5a63041-ce26-4a71-9029-28861d516191=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 17:59:23.019  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=63, memberId='consumer-auth-2-d5a63041-ce26-4a71-9029-28861d516191', protocol='range'}
2024-07-06 17:59:23.020  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 17:59:23.020  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 17:59:23.024  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=18, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 17:59:23.024  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 17:59:25.420  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 17:59:25.420  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 17:59:25.420  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 17:59:25.420  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 17:59:25.422  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=44, memberId='consumer-event-service-group-1-4243edbc-90a9-4b46-9463-ecb0119ad779', protocol='range'}
2024-07-06 17:59:25.422  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 44: {consumer-event-service-group-1-4243edbc-90a9-4b46-9463-ecb0119ad779=Assignment(partitions=[band-registration-request-0])}
2024-07-06 17:59:25.424  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=44, memberId='consumer-event-service-group-1-4243edbc-90a9-4b46-9463-ecb0119ad779', protocol='range'}
2024-07-06 17:59:25.424  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 17:59:25.424  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 17:59:25.425  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 17:59:25.426  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 17:59:26.101  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 17:59:26.101  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 17:59:26.102  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 17:59:26.102  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 17:59:26.102  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-d5a63041-ce26-4a71-9029-28861d516191 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 17:59:26.102  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-4243edbc-90a9-4b46-9463-ecb0119ad779 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 17:59:26.103  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 17:59:26.104  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 17:59:26.104  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 17:59:26.104  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 17:59:26.107  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 17:59:26.107  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 17:59:26.109  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 17:59:26.109  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 17:59:26.110  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 17:59:26.112  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 17:59:26.130  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 17:59:26.130  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 17:59:26.130  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 17:59:26.133  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 17:59:26.134  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 17:59:26.552  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 17:59:26.552  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 17:59:26.552  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 17:59:26.553  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 17:59:26.553  INFO 10193 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 17:59:26.572  INFO 10193 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 17:59:26.575  INFO 10193 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 17:59:26.577  INFO 10193 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 17:59:33.017  INFO 11443 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 11443 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 17:59:33.019 DEBUG 11443 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 17:59:33.019  INFO 11443 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 17:59:33.460  INFO 11443 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 17:59:34.267  INFO 11443 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 793 ms. Found 2 JPA repository interfaces.
2024-07-06 17:59:35.791  INFO 11443 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 17:59:35.799  INFO 11443 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 17:59:35.799  INFO 11443 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 17:59:35.854  INFO 11443 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 17:59:35.855  INFO 11443 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2791 ms
2024-07-06 17:59:36.162  INFO 11443 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 17:59:36.250  INFO 11443 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 17:59:36.542  INFO 11443 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 17:59:36.614  INFO 11443 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 17:59:36.751  INFO 11443 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 17:59:36.764  INFO 11443 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 17:59:37.251  INFO 11443 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 17:59:37.255  INFO 11443 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 17:59:37.590  WARN 11443 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 17:59:38.279  INFO 11443 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 17:59:38.390  INFO 11443 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 17:59:38.390  INFO 11443 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 17:59:38.390  INFO 11443 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720277978389
2024-07-06 17:59:38.391  INFO 11443 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 17:59:38.396  INFO 11443 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 17:59:38.404  INFO 11443 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 17:59:38.404  INFO 11443 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 17:59:38.404  INFO 11443 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720277978403
2024-07-06 17:59:38.404  INFO 11443 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 17:59:38.413  INFO 11443 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 17:59:38.421  INFO 11443 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 6.059 seconds (JVM running for 6.387)
2024-07-06 17:59:38.580  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 17:59:38.580  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 17:59:38.580  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 17:59:38.580  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 17:59:38.581  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 17:59:38.581  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 17:59:38.589  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-aebc96f0-81b6-426b-80ed-258bcebbf2ce
2024-07-06 17:59:38.590  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 17:59:38.589  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-abb9b55c-9a52-4e6c-81be-bdbe87012c3d
2024-07-06 17:59:38.590  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 17:59:38.590  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 17:59:38.590  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 17:59:39.626  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=47, memberId='consumer-event-service-group-1-aebc96f0-81b6-426b-80ed-258bcebbf2ce', protocol='range'}
2024-07-06 17:59:39.667  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=47, memberId='consumer-event-service-group-1-aebc96f0-81b6-426b-80ed-258bcebbf2ce', protocol='range'}
2024-07-06 17:59:39.674  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 17:59:39.679  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 17:59:39.688  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 17:59:39.689  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 17:59:40.154  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=68, memberId='consumer-auth-2-abb9b55c-9a52-4e6c-81be-bdbe87012c3d', protocol='range'}
2024-07-06 17:59:40.364  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=68, memberId='consumer-auth-2-abb9b55c-9a52-4e6c-81be-bdbe87012c3d', protocol='range'}
2024-07-06 17:59:40.365  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 17:59:40.366  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 17:59:40.366  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 18:00:03.217  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:00:03.217  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-abb9b55c-9a52-4e6c-81be-bdbe87012c3d sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:00:03.218  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:00:03.218  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-aebc96f0-81b6-426b-80ed-258bcebbf2ce sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:00:03.218  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:00:03.219  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:00:03.219  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:00:03.219  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:00:03.219  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:00:03.219  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:00:03.222  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:00:03.222  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:00:03.222  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:00:03.222  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:00:03.224  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:00:03.224  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:00:03.224  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:00:03.228  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 18:00:03.229  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 18:00:03.374  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:00:03.374  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:00:03.375  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:00:03.379  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:00:03.379  INFO 11443 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:00:03.408  INFO 11443 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:00:03.410  INFO 11443 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 18:00:03.412  INFO 11443 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 18:00:35.917  INFO 11545 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 11545 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:00:35.919 DEBUG 11545 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:00:35.919  INFO 11545 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:00:36.467  INFO 11545 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:00:36.663  INFO 11545 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 188 ms. Found 2 JPA repository interfaces.
2024-07-06 18:00:38.858  INFO 11545 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:00:38.872  INFO 11545 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:00:38.873  INFO 11545 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:00:38.978  INFO 11545 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:00:38.979  INFO 11545 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3012 ms
2024-07-06 18:00:39.253  INFO 11545 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:00:39.314  INFO 11545 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:00:39.534  INFO 11545 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:00:39.652  INFO 11545 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:00:40.241  INFO 11545 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:00:40.297  INFO 11545 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:00:42.366  INFO 11545 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:00:42.381  INFO 11545 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:00:43.857  WARN 11545 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:00:45.452  INFO 11545 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:00:45.661  INFO 11545 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:00:45.661  INFO 11545 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:00:45.661  INFO 11545 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720278045660
2024-07-06 18:00:45.664  INFO 11545 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:00:45.671  INFO 11545 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:00:45.684  INFO 11545 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:00:45.685  INFO 11545 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:00:45.685  INFO 11545 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720278045684
2024-07-06 18:00:45.686  INFO 11545 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:00:45.699  INFO 11545 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:00:45.712  INFO 11545 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 10.119 seconds (JVM running for 10.493)
2024-07-06 18:00:46.000  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:00:46.000  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:00:46.001  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:00:46.002  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:00:46.003  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:00:46.004  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:00:46.020  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-0b28ce36-8e54-4290-9128-c169cebb4d32
2024-07-06 18:00:46.020  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-f78a70c4-f6c0-44bc-a8bc-dd3227cdf11f
2024-07-06 18:00:46.020  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:00:46.020  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:00:46.020  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:00:46.020  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:00:46.025  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=71, memberId='consumer-auth-2-0b28ce36-8e54-4290-9128-c169cebb4d32', protocol='range'}
2024-07-06 18:00:46.025  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=50, memberId='consumer-event-service-group-1-f78a70c4-f6c0-44bc-a8bc-dd3227cdf11f', protocol='range'}
2024-07-06 18:00:46.030  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 71: {consumer-auth-2-0b28ce36-8e54-4290-9128-c169cebb4d32=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 18:00:46.033  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 50: {consumer-event-service-group-1-f78a70c4-f6c0-44bc-a8bc-dd3227cdf11f=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:00:46.049  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=71, memberId='consumer-auth-2-0b28ce36-8e54-4290-9128-c169cebb4d32', protocol='range'}
2024-07-06 18:00:46.050  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:00:46.053  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:00:46.216  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=50, memberId='consumer-event-service-group-1-f78a70c4-f6c0-44bc-a8bc-dd3227cdf11f', protocol='range'}
2024-07-06 18:00:46.218  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:00:46.224  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:00:46.305  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=19, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:00:46.316  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:00:46.332  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:00:46.426  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:00:52.028  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:00:52.028  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 18:00:52.030  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:00:52.030  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:00:52.030  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 18:00:52.030  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:00:52.031  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:00:52.031  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:00:52.038  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=72, memberId='consumer-auth-2-0b28ce36-8e54-4290-9128-c169cebb4d32', protocol='range'}
2024-07-06 18:00:52.043  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=51, memberId='consumer-event-service-group-1-f78a70c4-f6c0-44bc-a8bc-dd3227cdf11f', protocol='range'}
2024-07-06 18:00:52.046  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 51: {consumer-event-service-group-1-693b6640-ebf5-440e-a9e9-1c115b1c1258=Assignment(partitions=[band-registration-0]), consumer-event-service-group-1-f78a70c4-f6c0-44bc-a8bc-dd3227cdf11f=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:00:52.047  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 72: {consumer-auth-2-9114fbfa-31f0-48ce-add2-51528a2d3c37=Assignment(partitions=[]), consumer-auth-2-0b28ce36-8e54-4290-9128-c169cebb4d32=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-6d138f7d-bd17-4ad6-a9c8-a77700983886=Assignment(partitions=[]), consumer-auth-1-e975c6d2-7326-47ac-bfb7-4e3460a3df7d=Assignment(partitions=[roleCheckTopic-0])}
2024-07-06 18:00:52.051  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=51, memberId='consumer-event-service-group-1-f78a70c4-f6c0-44bc-a8bc-dd3227cdf11f', protocol='range'}
2024-07-06 18:00:52.051  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:00:52.051  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:00:52.051  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=72, memberId='consumer-auth-2-0b28ce36-8e54-4290-9128-c169cebb4d32', protocol='range'}
2024-07-06 18:00:52.052  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:00:52.052  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:00:52.056  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:00:52.056  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:00:52.057  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=19, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:00:52.059  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:01:19.053  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:01:19.054  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 18:01:19.055  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:01:19.055  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:01:19.055  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 18:01:19.056  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:01:19.055  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:01:19.056  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:01:19.058  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=52, memberId='consumer-event-service-group-1-f78a70c4-f6c0-44bc-a8bc-dd3227cdf11f', protocol='range'}
2024-07-06 18:01:19.059  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 52: {consumer-event-service-group-1-f78a70c4-f6c0-44bc-a8bc-dd3227cdf11f=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:01:19.064  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=52, memberId='consumer-event-service-group-1-f78a70c4-f6c0-44bc-a8bc-dd3227cdf11f', protocol='range'}
2024-07-06 18:01:19.065  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:01:19.065  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:01:19.067  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:01:19.067  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:01:40.601  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:01:40.602  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-0b28ce36-8e54-4290-9128-c169cebb4d32 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:01:40.602  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:01:40.602  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-f78a70c4-f6c0-44bc-a8bc-dd3227cdf11f sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:01:40.602  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:01:40.602  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:01:40.603  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:01:40.603  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:01:40.603  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:01:40.604  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:01:40.604  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:01:40.604  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:01:40.605  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:01:40.606  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:01:40.924  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:01:40.925  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:01:40.925  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:01:40.927  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:01:40.927  INFO 11545 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:01:55.626  INFO 11721 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 11721 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:01:55.627 DEBUG 11721 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:01:55.627  INFO 11721 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:01:55.979  INFO 11721 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:01:56.075  INFO 11721 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 88 ms. Found 2 JPA repository interfaces.
2024-07-06 18:01:56.587  INFO 11721 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:01:56.594  INFO 11721 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:01:56.594  INFO 11721 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:01:56.643  INFO 11721 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:01:56.643  INFO 11721 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 988 ms
2024-07-06 18:01:56.765  INFO 11721 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:01:56.795  INFO 11721 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:01:56.882  INFO 11721 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:01:56.936  INFO 11721 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:01:57.045  INFO 11721 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:01:57.056  INFO 11721 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:01:57.531  INFO 11721 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:01:57.538  INFO 11721 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:01:57.928  WARN 11721 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:01:58.614  INFO 11721 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:01:58.739  INFO 11721 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:01:58.739  INFO 11721 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:01:58.739  INFO 11721 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720278118738
2024-07-06 18:01:58.741  INFO 11721 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:01:58.746  INFO 11721 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:01:58.754  INFO 11721 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:01:58.754  INFO 11721 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:01:58.754  INFO 11721 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720278118754
2024-07-06 18:01:58.755  INFO 11721 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:01:58.765  INFO 11721 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:01:58.773  INFO 11721 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 3.36 seconds (JVM running for 3.572)
2024-07-06 18:01:58.984  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:01:58.984  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:01:58.985  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:01:58.985  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:01:58.986  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:01:58.986  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:01:58.997  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-065dcd56-ebf1-4000-85e2-50105b37e02c
2024-07-06 18:01:58.997  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-e435ff64-759c-4274-9336-be86a302fe72
2024-07-06 18:01:58.997  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:01:58.997  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:01:58.997  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:01:58.998  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:02:01.086  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=55, memberId='consumer-event-service-group-1-e435ff64-759c-4274-9336-be86a302fe72', protocol='range'}
2024-07-06 18:02:01.231  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=55, memberId='consumer-event-service-group-1-e435ff64-759c-4274-9336-be86a302fe72', protocol='range'}
2024-07-06 18:02:01.237  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:02:01.240  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:02:01.253  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:02:01.254  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:02:07.090  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 18:02:07.093  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:02:07.094  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:02:07.094  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:02:07.097  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=56, memberId='consumer-event-service-group-1-e435ff64-759c-4274-9336-be86a302fe72', protocol='range'}
2024-07-06 18:02:07.103  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 56: {consumer-event-service-group-1-e435ff64-759c-4274-9336-be86a302fe72=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:02:07.106  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=56, memberId='consumer-event-service-group-1-e435ff64-759c-4274-9336-be86a302fe72', protocol='range'}
2024-07-06 18:02:07.106  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:02:07.106  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:02:07.108  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:02:07.108  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:02:22.103  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 18:02:22.104  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:02:22.105  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:02:22.105  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:02:22.106  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=57, memberId='consumer-event-service-group-1-e435ff64-759c-4274-9336-be86a302fe72', protocol='range'}
2024-07-06 18:02:22.426  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 57: {consumer-event-service-group-1-e435ff64-759c-4274-9336-be86a302fe72=Assignment(partitions=[band-registration-request-0]), consumer-event-service-group-1-67fba3f9-aa18-47b0-99c1-4aa3011da3e3=Assignment(partitions=[band-registration-0])}
2024-07-06 18:02:22.439  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=57, memberId='consumer-event-service-group-1-e435ff64-759c-4274-9336-be86a302fe72', protocol='range'}
2024-07-06 18:02:22.440  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:02:22.440  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:02:22.443  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:02:22.443  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:02:31.755  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=73, memberId='consumer-auth-2-065dcd56-ebf1-4000-85e2-50105b37e02c', protocol='range'}
2024-07-06 18:02:31.763  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=73, memberId='consumer-auth-2-065dcd56-ebf1-4000-85e2-50105b37e02c', protocol='range'}
2024-07-06 18:02:31.764  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-06 18:02:31.764  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:02:31.782  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=74, memberId='consumer-auth-2-065dcd56-ebf1-4000-85e2-50105b37e02c', protocol='range'}
2024-07-06 18:02:31.793  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=74, memberId='consumer-auth-2-065dcd56-ebf1-4000-85e2-50105b37e02c', protocol='range'}
2024-07-06 18:02:31.794  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:02:31.794  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:02:31.797  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=19, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:02:31.797  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:05:40.856  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:05:40.859  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:05:40.860  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 18:05:40.860  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:05:43.188  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 18:05:43.189  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:05:43.189  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:05:43.189  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:05:43.193  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=58, memberId='consumer-event-service-group-1-e435ff64-759c-4274-9336-be86a302fe72', protocol='range'}
2024-07-06 18:05:43.194  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 58: {consumer-event-service-group-1-e435ff64-759c-4274-9336-be86a302fe72=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:05:43.201  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=58, memberId='consumer-event-service-group-1-e435ff64-759c-4274-9336-be86a302fe72', protocol='range'}
2024-07-06 18:05:43.202  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:05:43.202  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:05:43.205  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:05:43.205  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:05:43.483  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:05:43.483  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-065dcd56-ebf1-4000-85e2-50105b37e02c sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:05:43.484  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:05:43.484  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-e435ff64-759c-4274-9336-be86a302fe72 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:05:43.484  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:05:43.490  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:05:43.484  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:05:43.491  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:05:43.491  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:05:43.491  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:05:43.501  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:05:43.501  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:05:43.503  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:05:43.506  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:05:43.714  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:05:43.714  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:05:43.715  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:05:43.730  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:05:43.732  INFO 11721 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:06:03.305  INFO 11873 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 11873 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:06:03.308 DEBUG 11873 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:06:03.309  INFO 11873 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:06:04.380  INFO 11873 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:06:04.622  INFO 11873 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 222 ms. Found 2 JPA repository interfaces.
2024-07-06 18:06:06.222  INFO 11873 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:06:06.248  INFO 11873 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:06:06.249  INFO 11873 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:06:06.395  INFO 11873 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:06:06.396  INFO 11873 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3029 ms
2024-07-06 18:06:06.792  INFO 11873 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:06:06.924  INFO 11873 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:06:07.246  INFO 11873 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:06:07.434  INFO 11873 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:06:07.648  INFO 11873 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:06:07.684  INFO 11873 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:06:08.444  INFO 11873 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:06:08.453  INFO 11873 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:06:09.063  WARN 11873 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:06:10.389  INFO 11873 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:06:10.549  INFO 11873 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:06:10.549  INFO 11873 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:06:10.549  INFO 11873 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720278370548
2024-07-06 18:06:10.551  INFO 11873 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:06:10.557  INFO 11873 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:06:10.568  INFO 11873 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:06:10.568  INFO 11873 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:06:10.568  INFO 11873 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720278370568
2024-07-06 18:06:10.569  INFO 11873 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:06:10.582  INFO 11873 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:06:10.607  INFO 11873 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 7.714 seconds (JVM running for 8.02)
2024-07-06 18:06:10.895  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:06:10.895  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:06:10.896  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:06:10.896  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:06:10.897  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:06:10.898  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:06:10.910  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-3ef8bafb-9511-4fc0-b91d-22b556adf5d0
2024-07-06 18:06:10.910  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-96872ce2-e601-4d59-8cda-77d5fc3d29c0
2024-07-06 18:06:10.910  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:06:10.911  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:06:10.911  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:06:10.912  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:06:10.915  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=60, memberId='consumer-event-service-group-1-96872ce2-e601-4d59-8cda-77d5fc3d29c0', protocol='range'}
2024-07-06 18:06:10.919  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 60: {consumer-event-service-group-1-96872ce2-e601-4d59-8cda-77d5fc3d29c0=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:06:10.938  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=60, memberId='consumer-event-service-group-1-96872ce2-e601-4d59-8cda-77d5fc3d29c0', protocol='range'}
2024-07-06 18:06:10.939  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:06:10.941  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:06:10.949  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:06:10.950  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:06:13.919  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 18:06:13.922  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:06:13.923  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:06:13.923  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:06:13.926  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=61, memberId='consumer-event-service-group-1-96872ce2-e601-4d59-8cda-77d5fc3d29c0', protocol='range'}
2024-07-06 18:06:13.988  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 61: {consumer-event-service-group-1-96872ce2-e601-4d59-8cda-77d5fc3d29c0=Assignment(partitions=[band-registration-request-0]), consumer-event-service-group-1-10de1f50-a1ba-4eb4-af24-f28f4a175e72=Assignment(partitions=[band-registration-0])}
2024-07-06 18:06:13.992  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=61, memberId='consumer-event-service-group-1-96872ce2-e601-4d59-8cda-77d5fc3d29c0', protocol='range'}
2024-07-06 18:06:13.993  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:06:13.993  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:06:13.997  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:06:13.997  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:06:37.001  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=75, memberId='consumer-auth-2-3ef8bafb-9511-4fc0-b91d-22b556adf5d0', protocol='range'}
2024-07-06 18:06:37.004  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=75, memberId='consumer-auth-2-3ef8bafb-9511-4fc0-b91d-22b556adf5d0', protocol='range'}
2024-07-06 18:06:37.004  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-06 18:06:37.005  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:06:37.943  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 18:06:37.943  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:06:37.944  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:06:37.944  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:06:37.947  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=62, memberId='consumer-event-service-group-1-96872ce2-e601-4d59-8cda-77d5fc3d29c0', protocol='range'}
2024-07-06 18:06:37.948  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 62: {consumer-event-service-group-1-96872ce2-e601-4d59-8cda-77d5fc3d29c0=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:06:37.954  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=62, memberId='consumer-event-service-group-1-96872ce2-e601-4d59-8cda-77d5fc3d29c0', protocol='range'}
2024-07-06 18:06:37.954  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:06:37.955  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:06:37.958  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:06:37.959  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:06:38.351  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:06:38.351  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-3ef8bafb-9511-4fc0-b91d-22b556adf5d0 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:06:38.351  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:06:38.351  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-96872ce2-e601-4d59-8cda-77d5fc3d29c0 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:06:38.352  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:06:38.352  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:06:38.352  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:06:38.354  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:06:38.354  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:06:38.355  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:06:38.356  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:06:38.377  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:06:38.377  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:06:38.386  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:06:38.766  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:06:38.767  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:06:38.767  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:06:38.771  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:06:38.772  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:07:08.354  INFO 11873 --- [SpringApplicationShutdownHook] o.s.c.support.DefaultLifecycleProcessor  : Failed to shut down 1 bean with phase value 2147483547 within timeout of 30000ms: [org.springframework.kafka.config.internalKafkaListenerEndpointRegistry]
2024-07-06 18:07:08.357  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Disconnecting from node 2147483647 due to request timeout.
2024-07-06 18:07:08.362  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Cancelled in-flight JOIN_GROUP request with correlation id 7 due to node 2147483647 being disconnected (elapsed time since creation: 31351ms, elapsed time since send: 31352ms, request timeout: 305000ms)
2024-07-06 18:07:08.362  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Cancelled in-flight LEAVE_GROUP request with correlation id 8 due to node 2147483647 being disconnected (elapsed time since creation: 30005ms, elapsed time since send: 30005ms, request timeout: 30000ms)
2024-07-06 18:07:08.363  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: null. isDisconnected: true. Rediscovery will be attempted.
2024-07-06 18:07:08.364  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:07:08.364  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:07:08.364  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:07:08.366  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 18:07:08.366  INFO 11873 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 18:07:08.379  INFO 11873 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:07:08.381  INFO 11873 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 18:07:08.384  INFO 11873 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 18:07:23.919  INFO 12037 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 12037 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:07:23.921 DEBUG 12037 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:07:23.922  INFO 12037 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:07:24.340  INFO 12037 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:07:24.443  INFO 12037 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 95 ms. Found 2 JPA repository interfaces.
2024-07-06 18:07:24.971  INFO 12037 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:07:24.979  INFO 12037 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:07:24.979  INFO 12037 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:07:25.026  INFO 12037 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:07:25.027  INFO 12037 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1058 ms
2024-07-06 18:07:25.150  INFO 12037 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:07:25.179  INFO 12037 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:07:25.268  INFO 12037 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:07:25.341  INFO 12037 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:07:25.497  INFO 12037 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:07:25.512  INFO 12037 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:07:26.048  INFO 12037 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:07:26.054  INFO 12037 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:07:27.105  WARN 12037 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:07:27.753  INFO 12037 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:07:27.863  INFO 12037 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:07:27.864  INFO 12037 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:07:27.864  INFO 12037 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720278447863
2024-07-06 18:07:27.865  INFO 12037 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:07:27.870  INFO 12037 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:07:27.877  INFO 12037 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:07:27.877  INFO 12037 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:07:27.877  INFO 12037 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720278447876
2024-07-06 18:07:27.877  INFO 12037 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:07:27.885  INFO 12037 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:07:27.892  INFO 12037 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 4.321 seconds (JVM running for 4.639)
2024-07-06 18:07:28.049  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:07:28.049  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:07:28.049  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:07:28.049  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:07:28.050  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:07:28.050  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:07:28.059  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-40a56b5e-64f2-4679-9667-b685f2ad9911
2024-07-06 18:07:28.059  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-37565025-63a9-436b-806a-cdf65bf56c47
2024-07-06 18:07:28.060  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:07:28.060  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:07:28.060  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:07:28.060  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:07:29.136  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=65, memberId='consumer-event-service-group-1-37565025-63a9-436b-806a-cdf65bf56c47', protocol='range'}
2024-07-06 18:07:29.202  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=65, memberId='consumer-event-service-group-1-37565025-63a9-436b-806a-cdf65bf56c47', protocol='range'}
2024-07-06 18:07:29.205  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:07:29.208  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:07:29.242  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:07:29.243  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:07:44.332  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=80, memberId='consumer-auth-2-40a56b5e-64f2-4679-9667-b685f2ad9911', protocol='range'}
2024-07-06 18:07:44.344  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=80, memberId='consumer-auth-2-40a56b5e-64f2-4679-9667-b685f2ad9911', protocol='range'}
2024-07-06 18:07:44.345  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:07:44.345  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:07:44.347  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=19, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:07:44.348  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:11:26.252  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 18:11:26.255  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:11:26.257  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:11:26.258  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:11:26.261  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=66, memberId='consumer-event-service-group-1-37565025-63a9-436b-806a-cdf65bf56c47', protocol='range'}
2024-07-06 18:11:26.268  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 66: {consumer-event-service-group-1-37565025-63a9-436b-806a-cdf65bf56c47=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:11:26.273  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=66, memberId='consumer-event-service-group-1-37565025-63a9-436b-806a-cdf65bf56c47', protocol='range'}
2024-07-06 18:11:26.274  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:11:26.274  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:11:26.276  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:11:26.276  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:11:26.425  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:11:26.425  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:11:26.426  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 18:11:26.426  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:11:28.421  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:11:28.421  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-40a56b5e-64f2-4679-9667-b685f2ad9911 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:11:28.421  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:11:28.421  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-37565025-63a9-436b-806a-cdf65bf56c47 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:11:28.422  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:11:28.422  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:11:28.423  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:11:28.423  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:11:28.424  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:11:28.424  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:11:28.429  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:11:28.429  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:11:28.430  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:11:28.430  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:11:28.623  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:11:28.623  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:11:28.623  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:11:28.626  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:11:28.627  INFO 12037 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:12:27.234  INFO 12251 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 12251 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:12:27.236 DEBUG 12251 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:12:27.236  INFO 12251 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:12:27.530  INFO 12251 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:12:27.623  INFO 12251 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 87 ms. Found 2 JPA repository interfaces.
2024-07-06 18:12:28.138  INFO 12251 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:12:28.145  INFO 12251 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:12:28.145  INFO 12251 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:12:28.194  INFO 12251 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:12:28.194  INFO 12251 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 926 ms
2024-07-06 18:12:28.315  INFO 12251 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:12:28.345  INFO 12251 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:12:28.434  INFO 12251 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:12:28.489  INFO 12251 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:12:28.608  INFO 12251 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:12:28.619  INFO 12251 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:12:28.999  INFO 12251 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:12:29.004  INFO 12251 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:12:29.311  WARN 12251 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:12:29.845  INFO 12251 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:12:29.954  INFO 12251 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:12:29.954  INFO 12251 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:12:29.954  INFO 12251 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720278749953
2024-07-06 18:12:29.955  INFO 12251 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:12:29.960  INFO 12251 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:12:29.968  INFO 12251 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:12:29.968  INFO 12251 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:12:29.968  INFO 12251 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720278749968
2024-07-06 18:12:29.968  INFO 12251 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:12:29.976  INFO 12251 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:12:29.984  INFO 12251 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 2.999 seconds (JVM running for 3.246)
2024-07-06 18:12:30.145  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:12:30.145  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:12:30.146  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:12:30.146  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:12:30.147  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:12:30.147  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:12:30.155  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-6e0130ac-f5a4-4cdc-9537-2f8d889d74f6
2024-07-06 18:12:30.155  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-4e88321a-22f6-4829-976b-c50aeebcef74
2024-07-06 18:12:30.155  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:12:30.155  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:12:30.155  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:12:30.155  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:12:30.207  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=69, memberId='consumer-event-service-group-1-6e0130ac-f5a4-4cdc-9537-2f8d889d74f6', protocol='range'}
2024-07-06 18:12:30.250  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=69, memberId='consumer-event-service-group-1-6e0130ac-f5a4-4cdc-9537-2f8d889d74f6', protocol='range'}
2024-07-06 18:12:30.252  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:12:30.253  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:12:30.258  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:12:30.259  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:12:45.651  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=84, memberId='consumer-auth-2-4e88321a-22f6-4829-976b-c50aeebcef74', protocol='range'}
2024-07-06 18:12:45.657  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=84, memberId='consumer-auth-2-4e88321a-22f6-4829-976b-c50aeebcef74', protocol='range'}
2024-07-06 18:12:45.657  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:12:45.657  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:12:45.659  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=19, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:12:45.659  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:14:35.291  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:14:35.291  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:14:35.294  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:14:35.294  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 18:14:35.295  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-4e88321a-22f6-4829-976b-c50aeebcef74 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:14:35.295  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-6e0130ac-f5a4-4cdc-9537-2f8d889d74f6 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:14:35.296  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:14:35.296  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:14:35.296  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:14:35.296  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:14:35.297  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:14:35.298  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:14:35.304  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:14:35.304  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:14:35.304  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:14:35.304  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:14:35.432  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:14:35.432  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:14:35.432  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:14:35.435  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 18:14:35.435  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 18:14:35.659  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:14:35.660  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:14:35.660  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:14:35.661  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:14:35.661  INFO 12251 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:14:35.674  INFO 12251 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:14:35.677  INFO 12251 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 18:14:35.678  INFO 12251 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 18:15:21.730  INFO 12398 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 12398 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:15:21.733 DEBUG 12398 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:15:21.733  INFO 12398 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:15:22.185  INFO 12398 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:15:22.358  INFO 12398 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 161 ms. Found 2 JPA repository interfaces.
2024-07-06 18:15:23.078  INFO 12398 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:15:23.087  INFO 12398 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:15:23.087  INFO 12398 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:15:23.145  INFO 12398 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:15:23.146  INFO 12398 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1370 ms
2024-07-06 18:15:23.283  INFO 12398 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:15:23.315  INFO 12398 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:15:23.413  INFO 12398 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:15:23.468  INFO 12398 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:15:23.579  INFO 12398 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:15:23.589  INFO 12398 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:15:24.144  INFO 12398 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:15:24.155  INFO 12398 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:15:24.475  WARN 12398 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:15:25.013  INFO 12398 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:15:25.125  INFO 12398 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:15:25.125  INFO 12398 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:15:25.125  INFO 12398 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720278925124
2024-07-06 18:15:25.126  INFO 12398 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:15:25.131  INFO 12398 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:15:25.138  INFO 12398 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:15:25.138  INFO 12398 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:15:25.138  INFO 12398 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720278925138
2024-07-06 18:15:25.138  INFO 12398 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:15:25.147  INFO 12398 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:15:25.155  INFO 12398 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 3.72 seconds (JVM running for 4.016)
2024-07-06 18:15:25.310  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:15:25.310  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:15:25.311  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:15:25.311  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:15:25.312  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:15:25.312  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:15:25.320  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-c87ff1bd-f16e-4ba4-9ecd-6645dc05f195
2024-07-06 18:15:25.320  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-52b36fbb-906b-4ab5-bdcf-bf989626d212
2024-07-06 18:15:25.320  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:15:25.320  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:15:25.320  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:15:25.320  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:15:27.386  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=73, memberId='consumer-event-service-group-1-c87ff1bd-f16e-4ba4-9ecd-6645dc05f195', protocol='range'}
2024-07-06 18:15:27.433  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=73, memberId='consumer-event-service-group-1-c87ff1bd-f16e-4ba4-9ecd-6645dc05f195', protocol='range'}
2024-07-06 18:15:27.436  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:15:27.438  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:15:27.447  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:15:27.448  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:16:05.466  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=86, memberId='consumer-auth-2-52b36fbb-906b-4ab5-bdcf-bf989626d212', protocol='range'}
2024-07-06 18:16:05.508  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=86, memberId='consumer-auth-2-52b36fbb-906b-4ab5-bdcf-bf989626d212', protocol='range'}
2024-07-06 18:16:05.508  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 18:16:05.508  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 18:16:05.508  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 18:16:56.497  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:16:56.506  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-06 18:16:56.513  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-06 18:16:56.516  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:16:57.425  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 18:16:57.427  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:16:57.427  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:16:57.427  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:16:57.433  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=74, memberId='consumer-event-service-group-1-c87ff1bd-f16e-4ba4-9ecd-6645dc05f195', protocol='range'}
2024-07-06 18:16:57.464  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 74: {consumer-event-service-group-1-c87ff1bd-f16e-4ba4-9ecd-6645dc05f195=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:16:57.478  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=74, memberId='consumer-event-service-group-1-c87ff1bd-f16e-4ba4-9ecd-6645dc05f195', protocol='range'}
2024-07-06 18:16:57.481  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:16:57.481  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:16:57.487  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:16:57.488  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:16:58.967  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:16:58.967  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-52b36fbb-906b-4ab5-bdcf-bf989626d212 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:16:58.968  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:16:58.968  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-c87ff1bd-f16e-4ba4-9ecd-6645dc05f195 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:16:58.969  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:16:58.969  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:16:58.969  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:16:58.972  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:16:58.969  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:16:58.972  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:16:58.975  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:16:58.975  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:16:58.975  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:16:58.975  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:16:59.223  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:16:59.224  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:16:59.224  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:16:59.230  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:16:59.230  INFO 12398 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:17:42.354  INFO 12600 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 12600 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:17:42.357 DEBUG 12600 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:17:42.357  INFO 12600 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:17:43.093  INFO 12600 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:17:43.249  INFO 12600 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 140 ms. Found 2 JPA repository interfaces.
2024-07-06 18:17:43.911  INFO 12600 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:17:43.918  INFO 12600 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:17:43.919  INFO 12600 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:17:43.968  INFO 12600 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:17:43.969  INFO 12600 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1556 ms
2024-07-06 18:17:44.098  INFO 12600 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:17:44.128  INFO 12600 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:17:44.215  INFO 12600 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:17:44.272  INFO 12600 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:17:44.393  INFO 12600 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:17:44.404  INFO 12600 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:17:44.822  INFO 12600 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:17:44.827  INFO 12600 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:17:45.134  WARN 12600 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:17:45.694  INFO 12600 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:17:45.841  INFO 12600 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:17:45.841  INFO 12600 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:17:45.842  INFO 12600 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720279065840
2024-07-06 18:17:45.843  INFO 12600 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:17:45.850  INFO 12600 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:17:45.862  INFO 12600 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:17:45.862  INFO 12600 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:17:45.862  INFO 12600 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720279065862
2024-07-06 18:17:45.862  INFO 12600 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:17:45.873  INFO 12600 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:17:45.883  INFO 12600 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 3.947 seconds (JVM running for 4.315)
2024-07-06 18:17:46.070  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:17:46.070  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:17:46.071  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:17:46.071  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:17:46.072  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:17:46.072  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:17:46.082  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-31748bce-fb65-41a5-8135-dbd7d505d3f3
2024-07-06 18:17:46.082  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-a65d5944-60f4-4421-a7bc-cdda569a5ff1
2024-07-06 18:17:46.082  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:17:46.082  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:17:46.082  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:17:46.083  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:17:46.085  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=76, memberId='consumer-event-service-group-1-a65d5944-60f4-4421-a7bc-cdda569a5ff1', protocol='range'}
2024-07-06 18:17:46.088  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 76: {consumer-event-service-group-1-a65d5944-60f4-4421-a7bc-cdda569a5ff1=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:17:46.094  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=76, memberId='consumer-event-service-group-1-a65d5944-60f4-4421-a7bc-cdda569a5ff1', protocol='range'}
2024-07-06 18:17:46.094  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:17:46.096  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:17:46.102  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:17:46.103  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:18:24.200  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=88, memberId='consumer-auth-2-31748bce-fb65-41a5-8135-dbd7d505d3f3', protocol='range'}
2024-07-06 18:18:24.232  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=88, memberId='consumer-auth-2-31748bce-fb65-41a5-8135-dbd7d505d3f3', protocol='range'}
2024-07-06 18:18:24.233  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 18:18:24.233  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 18:18:24.233  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 18:21:49.362  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:21:49.362  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-31748bce-fb65-41a5-8135-dbd7d505d3f3 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:21:49.364  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:21:49.364  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:21:49.364  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:21:49.364  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:21:49.364  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-a65d5944-60f4-4421-a7bc-cdda569a5ff1 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:21:49.364  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:21:49.365  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:21:49.365  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:21:49.365  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:21:49.365  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:21:49.365  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:21:49.366  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:21:49.370  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:21:49.370  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:21:49.370  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:21:49.374  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 18:21:49.374  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 18:21:49.705  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:21:49.706  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:21:49.707  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:21:49.712  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:21:49.713  INFO 12600 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:21:49.735  INFO 12600 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:21:49.738  INFO 12600 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 18:21:49.740  INFO 12600 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 18:27:49.319  INFO 13106 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 13106 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:27:49.321 DEBUG 13106 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:27:49.322  INFO 13106 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:27:49.688  INFO 13106 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:27:49.792  INFO 13106 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 98 ms. Found 2 JPA repository interfaces.
2024-07-06 18:27:50.435  INFO 13106 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:27:50.450  INFO 13106 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:27:50.451  INFO 13106 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:27:50.550  INFO 13106 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:27:50.550  INFO 13106 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1185 ms
2024-07-06 18:27:50.713  INFO 13106 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:27:50.748  INFO 13106 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:27:50.849  INFO 13106 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:27:50.905  INFO 13106 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:27:51.947 ERROR 13106 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: FATAL: sorry, too many clients already
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:525) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:146) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:197) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:217) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.Driver.makeConnection(Driver.java:458) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.Driver.connect(Driver.java:260) ~[postgresql-42.2.14.jar:42.2.14]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-4.0.3.jar:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.15.jar:5.3.15]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.15.jar:5.3.15]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.15.jar:5.3.15]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292) ~[spring-boot-2.6.3.jar:2.6.3]
	at com.example.EventServiceApplication.main(EventServiceApplication.java:11) ~[classes/:na]

2024-07-06 18:27:51.987  WARN 13106 --- [main] o.h.e.j.e.i.JdbcEnvironmentInitiator     : HHH000342: Could not obtain connection to query metadata

org.postgresql.util.PSQLException: FATAL: sorry, too many clients already
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:525) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:146) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:197) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:217) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.Driver.makeConnection(Driver.java:458) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.Driver.connect(Driver.java:260) ~[postgresql-42.2.14.jar:42.2.14]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-4.0.3.jar:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.15.jar:5.3.15]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.15.jar:5.3.15]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.15.jar:5.3.15]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292) ~[spring-boot-2.6.3.jar:2.6.3]
	at com.example.EventServiceApplication.main(EventServiceApplication.java:11) ~[classes/:na]

2024-07-06 18:27:52.008  INFO 13106 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:27:52.334  INFO 13106 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:27:53.343 ERROR 13106 --- [main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

org.postgresql.util.PSQLException: FATAL: sorry, too many clients already
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:525) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:146) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:197) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:217) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.Driver.makeConnection(Driver.java:458) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.Driver.connect(Driver.java:260) ~[postgresql-42.2.14.jar:42.2.14]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-4.0.3.jar:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:44) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:183) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:104) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:192) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:81) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.15.jar:5.3.15]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.15.jar:5.3.15]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.15.jar:5.3.15]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292) ~[spring-boot-2.6.3.jar:2.6.3]
	at com.example.EventServiceApplication.main(EventServiceApplication.java:11) ~[classes/:na]

2024-07-06 18:27:53.365  WARN 13106 --- [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 0, SQLState: 53300
2024-07-06 18:27:53.365 ERROR 13106 --- [main] o.h.engine.jdbc.spi.SqlExceptionHelper   : FATAL: sorry, too many clients already
2024-07-06 18:27:53.370 ERROR 13106 --- [main] j.LocalContainerEntityManagerFactoryBean : Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
2024-07-06 18:27:53.370  WARN 13106 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
2024-07-06 18:27:53.372  INFO 13106 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2024-07-06 18:27:53.382  INFO 13106 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-07-06 18:27:53.392 ERROR 13106 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.15.jar:5.3.15]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.15.jar:5.3.15]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.15.jar:5.3.15]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303) ~[spring-boot-2.6.3.jar:2.6.3]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292) ~[spring-boot-2.6.3.jar:2.6.3]
	at com.example.EventServiceApplication.main(EventServiceApplication.java:11) ~[classes/:na]
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.15.jar:5.3.15]
	... 16 common frames omitted
Caused by: org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:71) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:183) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:104) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:192) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:81) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.15.jar:5.3.15]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.15.jar:5.3.15]
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: FATAL: sorry, too many clients already
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:525) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:146) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:197) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:217) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.Driver.makeConnection(Driver.java:458) ~[postgresql-42.2.14.jar:42.2.14]
	at org.postgresql.Driver.connect(Driver.java:260) ~[postgresql-42.2.14.jar:42.2.14]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-4.0.3.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-4.0.3.jar:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:44) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	... 35 common frames omitted

2024-07-06 18:32:57.055  INFO 13295 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 13295 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:32:57.057 DEBUG 13295 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:32:57.057  INFO 13295 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:32:57.332  INFO 13295 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:32:57.424  INFO 13295 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 87 ms. Found 2 JPA repository interfaces.
2024-07-06 18:32:57.928  INFO 13295 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:32:57.935  INFO 13295 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:32:57.935  INFO 13295 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:32:57.985  INFO 13295 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:32:57.985  INFO 13295 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 902 ms
2024-07-06 18:32:58.109  INFO 13295 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:32:58.141  INFO 13295 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:32:58.231  INFO 13295 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:32:58.286  INFO 13295 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:32:58.397  INFO 13295 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:32:58.408  INFO 13295 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:32:58.866  INFO 13295 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:32:58.883  INFO 13295 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:32:59.244  WARN 13295 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:32:59.835  INFO 13295 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:32:59.956  INFO 13295 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:32:59.956  INFO 13295 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:32:59.956  INFO 13295 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720279979955
2024-07-06 18:32:59.958  INFO 13295 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:32:59.963  INFO 13295 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:32:59.973  INFO 13295 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:32:59.973  INFO 13295 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:32:59.974  INFO 13295 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720279979973
2024-07-06 18:32:59.974  INFO 13295 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:32:59.984  INFO 13295 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:32:59.994  INFO 13295 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 3.146 seconds (JVM running for 3.355)
2024-07-06 18:33:00.225  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:33:00.225  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:33:00.226  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:33:00.226  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:33:00.228  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:33:00.228  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:33:00.243  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-88e0a324-d8d4-47fe-aa4d-88ce0ce695e9
2024-07-06 18:33:00.243  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-6599f0a4-272e-4f22-b2fd-91a69a9c4af1
2024-07-06 18:33:00.243  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:33:00.244  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:33:00.244  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:33:00.244  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:33:00.247  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=80, memberId='consumer-event-service-group-1-6599f0a4-272e-4f22-b2fd-91a69a9c4af1', protocol='range'}
2024-07-06 18:33:00.253  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 80: {consumer-event-service-group-1-6599f0a4-272e-4f22-b2fd-91a69a9c4af1=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:33:00.259  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=80, memberId='consumer-event-service-group-1-6599f0a4-272e-4f22-b2fd-91a69a9c4af1', protocol='range'}
2024-07-06 18:33:00.260  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:33:00.262  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:33:00.280  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:33:00.280  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:33:24.495  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=93, memberId='consumer-auth-2-88e0a324-d8d4-47fe-aa4d-88ce0ce695e9', protocol='range'}
2024-07-06 18:33:54.507  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Disconnecting from node 2147483647 due to request timeout.
2024-07-06 18:33:54.514  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Cancelled in-flight SYNC_GROUP request with correlation id 6 due to node 2147483647 being disconnected (elapsed time since creation: 30008ms, elapsed time since send: 30008ms, request timeout: 30000ms)
2024-07-06 18:33:54.514  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Cancelled in-flight HEARTBEAT request with correlation id 7 due to node 2147483647 being disconnected (elapsed time since creation: 27008ms, elapsed time since send: 27008ms, request timeout: 30000ms)
2024-07-06 18:33:54.514  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Cancelled in-flight HEARTBEAT request with correlation id 8 due to node 2147483647 being disconnected (elapsed time since creation: 24007ms, elapsed time since send: 24007ms, request timeout: 30000ms)
2024-07-06 18:33:54.514  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Cancelled in-flight HEARTBEAT request with correlation id 9 due to node 2147483647 being disconnected (elapsed time since creation: 21006ms, elapsed time since send: 21006ms, request timeout: 30000ms)
2024-07-06 18:33:54.515  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Cancelled in-flight HEARTBEAT request with correlation id 10 due to node 2147483647 being disconnected (elapsed time since creation: 18005ms, elapsed time since send: 18005ms, request timeout: 30000ms)
2024-07-06 18:33:54.515  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Cancelled in-flight HEARTBEAT request with correlation id 11 due to node 2147483647 being disconnected (elapsed time since creation: 15004ms, elapsed time since send: 15004ms, request timeout: 30000ms)
2024-07-06 18:33:54.517  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Cancelled in-flight HEARTBEAT request with correlation id 12 due to node 2147483647 being disconnected (elapsed time since creation: 12003ms, elapsed time since send: 12003ms, request timeout: 30000ms)
2024-07-06 18:33:54.517  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Cancelled in-flight HEARTBEAT request with correlation id 13 due to node 2147483647 being disconnected (elapsed time since creation: 9002ms, elapsed time since send: 9001ms, request timeout: 30000ms)
2024-07-06 18:33:54.517  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Cancelled in-flight HEARTBEAT request with correlation id 14 due to node 2147483647 being disconnected (elapsed time since creation: 6001ms, elapsed time since send: 6001ms, request timeout: 30000ms)
2024-07-06 18:33:54.519  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-auth-2, groupId=auth] Cancelled in-flight HEARTBEAT request with correlation id 15 due to node 2147483647 being disconnected (elapsed time since creation: 3001ms, elapsed time since send: 3001ms, request timeout: 30000ms)
2024-07-06 18:33:54.521  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: null. isDisconnected: true. Rediscovery will be attempted.
2024-07-06 18:33:54.530  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:33:54.531  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:33:54.531  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Group coordinator localhost:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-06 18:33:54.531  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:33:54.638  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:33:54.640  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'null' (DisconnectException)
2024-07-06 18:33:54.641  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:34:09.498  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=94, memberId='consumer-auth-2-88e0a324-d8d4-47fe-aa4d-88ce0ce695e9', protocol='range'}
2024-07-06 18:34:09.499  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 94: {consumer-auth-2-88e0a324-d8d4-47fe-aa4d-88ce0ce695e9=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 18:34:09.503  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=94, memberId='consumer-auth-2-88e0a324-d8d4-47fe-aa4d-88ce0ce695e9', protocol='range'}
2024-07-06 18:34:09.504  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:34:09.504  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:34:09.509  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=19, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:34:09.510  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:34:55.549  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:34:55.549  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:34:55.550  INFO 13295 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:36:13.113  INFO 13589 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 13589 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:36:13.115 DEBUG 13589 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:36:13.116  INFO 13589 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:36:13.742  INFO 13589 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:36:13.838  INFO 13589 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 90 ms. Found 2 JPA repository interfaces.
2024-07-06 18:36:14.465  INFO 13589 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:36:14.489  INFO 13589 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:36:14.490  INFO 13589 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:36:14.617  INFO 13589 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:36:14.617  INFO 13589 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1454 ms
2024-07-06 18:36:14.838  INFO 13589 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:36:14.889  INFO 13589 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:36:15.003  INFO 13589 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:36:15.071  INFO 13589 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:36:15.187  INFO 13589 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:36:15.199  INFO 13589 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:36:16.204  INFO 13589 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:36:16.209  INFO 13589 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:36:16.628  WARN 13589 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:36:17.196  INFO 13589 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:36:17.306  INFO 13589 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:36:17.306  INFO 13589 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:36:17.306  INFO 13589 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720280177305
2024-07-06 18:36:17.308  INFO 13589 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:36:17.312  INFO 13589 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:36:17.319  INFO 13589 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:36:17.319  INFO 13589 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:36:17.319  INFO 13589 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720280177319
2024-07-06 18:36:17.319  INFO 13589 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:36:17.328  INFO 13589 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:36:17.336  INFO 13589 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 4.533 seconds (JVM running for 4.845)
2024-07-06 18:36:17.501  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:36:17.501  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:36:17.502  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:36:17.502  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:36:17.503  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:36:17.503  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:36:17.511  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-66624c47-52a8-4b7e-b561-95ca37a1a2dd
2024-07-06 18:36:17.511  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-73d6e5b1-ea59-43ce-93ba-0c86fddb3828
2024-07-06 18:36:17.511  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:36:17.511  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:36:17.511  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:36:17.511  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:36:19.214  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=83, memberId='consumer-event-service-group-1-66624c47-52a8-4b7e-b561-95ca37a1a2dd', protocol='range'}
2024-07-06 18:36:19.312  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=83, memberId='consumer-event-service-group-1-66624c47-52a8-4b7e-b561-95ca37a1a2dd', protocol='range'}
2024-07-06 18:36:19.314  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:36:19.316  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:36:19.324  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:36:19.324  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:37:47.175  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=99, memberId='consumer-auth-2-73d6e5b1-ea59-43ce-93ba-0c86fddb3828', protocol='range'}
2024-07-06 18:37:47.183  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=99, memberId='consumer-auth-2-73d6e5b1-ea59-43ce-93ba-0c86fddb3828', protocol='range'}
2024-07-06 18:37:47.184  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 18:37:47.186  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 18:37:47.186  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 18:39:06.318  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:39:06.318  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-73d6e5b1-ea59-43ce-93ba-0c86fddb3828 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:39:06.319  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:39:06.320  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:39:06.320  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:39:06.320  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:39:06.320  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-66624c47-52a8-4b7e-b561-95ca37a1a2dd sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:39:06.321  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:39:06.322  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:39:06.322  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:39:06.322  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:39:06.324  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:39:06.324  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:39:06.324  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:39:06.329  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:39:06.329  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:39:06.329  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:39:06.335  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 18:39:06.336  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 18:39:06.808  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:39:06.808  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:39:06.808  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:39:06.812  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:39:06.813  INFO 13589 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:39:06.839  INFO 13589 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:39:06.844  INFO 13589 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 18:39:06.853  INFO 13589 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 18:39:29.459  INFO 13717 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 13717 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:39:29.474 DEBUG 13717 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:39:29.475  INFO 13717 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:39:30.187  INFO 13717 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:39:30.353  INFO 13717 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 154 ms. Found 2 JPA repository interfaces.
2024-07-06 18:39:31.699  INFO 13717 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:39:31.710  INFO 13717 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:39:31.710  INFO 13717 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:39:31.787  INFO 13717 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:39:31.787  INFO 13717 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2110 ms
2024-07-06 18:39:32.037  INFO 13717 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:39:32.096  INFO 13717 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:39:32.366  INFO 13717 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:39:32.504  INFO 13717 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:39:32.809  INFO 13717 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:39:32.829  INFO 13717 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:39:33.521  INFO 13717 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:39:33.528  INFO 13717 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:39:34.088  WARN 13717 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:39:35.501  INFO 13717 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:39:35.966  INFO 13717 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:39:35.967  INFO 13717 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:39:35.967  INFO 13717 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720280375965
2024-07-06 18:39:35.969  INFO 13717 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:39:35.977  INFO 13717 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:39:35.990  INFO 13717 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:39:35.991  INFO 13717 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:39:35.991  INFO 13717 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720280375990
2024-07-06 18:39:35.991  INFO 13717 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:39:36.006  INFO 13717 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:39:36.022  INFO 13717 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 7.292 seconds (JVM running for 8.125)
2024-07-06 18:39:36.353  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:39:36.353  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:39:36.354  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:39:36.354  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:39:36.357  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:39:36.358  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:39:36.377  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-24d2458f-30e5-4309-bb5f-4f4adf310266
2024-07-06 18:39:36.377  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-803a03ae-fb5a-4691-8001-0237b7d7c029
2024-07-06 18:39:36.378  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:39:36.378  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:39:36.379  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:39:36.379  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:39:38.945  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=103, memberId='consumer-auth-2-24d2458f-30e5-4309-bb5f-4f4adf310266', protocol='range'}
2024-07-06 18:39:38.951  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=103, memberId='consumer-auth-2-24d2458f-30e5-4309-bb5f-4f4adf310266', protocol='range'}
2024-07-06 18:39:38.955  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:39:38.960  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:39:38.968  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=87, memberId='consumer-event-service-group-1-803a03ae-fb5a-4691-8001-0237b7d7c029', protocol='range'}
2024-07-06 18:39:38.972  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=25, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:39:38.972  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:39:39.031  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=87, memberId='consumer-event-service-group-1-803a03ae-fb5a-4691-8001-0237b7d7c029', protocol='range'}
2024-07-06 18:39:39.031  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:39:39.031  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:39:39.032  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:39:39.033  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:41:24.005  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:41:24.032  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:41:24.033  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 18:41:24.035  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:41:24.038  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 18:41:24.038  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:41:24.038  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:41:24.038  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:41:24.042  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=104, memberId='consumer-auth-2-24d2458f-30e5-4309-bb5f-4f4adf310266', protocol='range'}
2024-07-06 18:41:24.043  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=88, memberId='consumer-event-service-group-1-803a03ae-fb5a-4691-8001-0237b7d7c029', protocol='range'}
2024-07-06 18:41:24.054  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 88: {consumer-event-service-group-1-803a03ae-fb5a-4691-8001-0237b7d7c029=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:41:24.054  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 104: {consumer-auth-2-24d2458f-30e5-4309-bb5f-4f4adf310266=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 18:41:24.058  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=88, memberId='consumer-event-service-group-1-803a03ae-fb5a-4691-8001-0237b7d7c029', protocol='range'}
2024-07-06 18:41:24.059  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:41:24.059  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:41:24.059  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=104, memberId='consumer-auth-2-24d2458f-30e5-4309-bb5f-4f4adf310266', protocol='range'}
2024-07-06 18:41:24.060  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:41:24.060  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:41:24.062  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=25, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:41:24.062  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:41:24.062  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:41:24.062  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:43:36.169  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:43:36.169  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:43:36.170  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:43:36.170  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 18:43:36.170  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-803a03ae-fb5a-4691-8001-0237b7d7c029 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:43:36.170  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-24d2458f-30e5-4309-bb5f-4f4adf310266 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:43:36.170  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:43:36.171  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:43:36.171  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:43:36.171  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:43:36.172  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:43:36.172  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:43:36.173  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:43:36.174  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:43:36.174  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:43:36.175  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:43:36.276  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:43:36.277  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:43:36.277  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:43:36.277  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:43:36.277  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:43:36.277  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:43:36.280  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 18:43:36.280  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 18:43:36.280  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:43:36.280  INFO 13717 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:43:36.293  INFO 13717 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:43:36.296  INFO 13717 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 18:43:36.298  INFO 13717 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 18:43:40.713  INFO 13877 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 13877 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:43:40.716 DEBUG 13877 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:43:40.716  INFO 13877 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:43:41.114  INFO 13877 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:43:41.249  INFO 13877 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 128 ms. Found 2 JPA repository interfaces.
2024-07-06 18:43:41.994  INFO 13877 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:43:42.005  INFO 13877 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:43:42.005  INFO 13877 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:43:42.068  INFO 13877 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:43:42.069  INFO 13877 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1310 ms
2024-07-06 18:43:42.253  INFO 13877 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:43:42.297  INFO 13877 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:43:42.416  INFO 13877 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:43:42.484  INFO 13877 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:43:42.643  INFO 13877 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:43:42.660  INFO 13877 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:43:43.235  INFO 13877 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:43:43.241  INFO 13877 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:43:43.622  WARN 13877 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:43:44.669  INFO 13877 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:43:44.901  INFO 13877 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:43:44.901  INFO 13877 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:43:44.901  INFO 13877 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720280624900
2024-07-06 18:43:44.903  INFO 13877 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:43:44.909  INFO 13877 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:43:44.919  INFO 13877 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:43:44.920  INFO 13877 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:43:44.920  INFO 13877 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720280624919
2024-07-06 18:43:44.920  INFO 13877 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:43:44.931  INFO 13877 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:43:44.941  INFO 13877 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 4.529 seconds (JVM running for 4.85)
2024-07-06 18:43:45.205  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:43:45.205  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:43:45.212  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:43:45.212  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:43:45.214  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:43:45.214  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:43:45.225  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-c209b368-d28e-4b43-9612-802f87e16831
2024-07-06 18:43:45.225  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-5f147644-5499-4feb-82de-70d5d7b893ee
2024-07-06 18:43:45.225  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:43:45.226  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:43:45.226  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:43:45.226  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:43:45.995  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=107, memberId='consumer-auth-2-c209b368-d28e-4b43-9612-802f87e16831', protocol='range'}
2024-07-06 18:43:45.995  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=91, memberId='consumer-event-service-group-1-5f147644-5499-4feb-82de-70d5d7b893ee', protocol='range'}
2024-07-06 18:43:45.999  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=107, memberId='consumer-auth-2-c209b368-d28e-4b43-9612-802f87e16831', protocol='range'}
2024-07-06 18:43:46.001  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 18:43:46.002  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 18:43:46.003  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 18:43:46.098  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=91, memberId='consumer-event-service-group-1-5f147644-5499-4feb-82de-70d5d7b893ee', protocol='range'}
2024-07-06 18:43:46.099  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:43:46.102  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:43:46.115  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:43:46.116  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:43:49.002  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:43:49.003  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-06 18:43:49.005  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-06 18:43:49.006  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:43:49.010  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=108, memberId='consumer-auth-2-c209b368-d28e-4b43-9612-802f87e16831', protocol='range'}
2024-07-06 18:43:49.120  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=108, memberId='consumer-auth-2-c209b368-d28e-4b43-9612-802f87e16831', protocol='range'}
2024-07-06 18:43:49.121  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 18:43:49.121  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 18:43:49.121  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 18:44:41.532  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-c209b368-d28e-4b43-9612-802f87e16831 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:44:41.532  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:44:41.532  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:44:41.532  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-5f147644-5499-4feb-82de-70d5d7b893ee sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:44:41.533  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:44:41.533  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:44:41.533  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:44:41.533  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:44:41.533  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:44:41.533  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:44:41.535  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:44:41.535  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:44:41.535  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:44:41.537  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:44:41.538  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:44:41.539  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:44:41.539  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:44:41.540  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 18:44:41.540  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 18:44:41.637  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:44:41.637  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:44:41.637  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:44:41.638  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:44:41.638  INFO 13877 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:44:41.649  INFO 13877 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:44:41.650  INFO 13877 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 18:44:41.652  INFO 13877 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 18:44:50.987  INFO 14008 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 14008 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:44:50.990 DEBUG 14008 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:44:50.990  INFO 14008 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:44:51.525  INFO 14008 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:44:51.705  INFO 14008 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 172 ms. Found 2 JPA repository interfaces.
2024-07-06 18:44:52.748  INFO 14008 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:44:52.760  INFO 14008 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:44:52.761  INFO 14008 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:44:52.836  INFO 14008 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:44:52.837  INFO 14008 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1790 ms
2024-07-06 18:44:53.425  INFO 14008 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:44:53.530  INFO 14008 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:44:53.754  INFO 14008 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:44:53.983  INFO 14008 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:44:54.269  INFO 14008 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:44:54.287  INFO 14008 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:44:54.831  INFO 14008 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:44:54.839  INFO 14008 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:44:55.240  WARN 14008 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:44:55.880  INFO 14008 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:44:56.006  INFO 14008 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:44:56.006  INFO 14008 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:44:56.006  INFO 14008 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720280696005
2024-07-06 18:44:56.009  INFO 14008 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:44:56.014  INFO 14008 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:44:56.024  INFO 14008 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:44:56.024  INFO 14008 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:44:56.024  INFO 14008 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720280696024
2024-07-06 18:44:56.025  INFO 14008 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:44:56.034  INFO 14008 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:44:56.043  INFO 14008 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 5.41 seconds (JVM running for 5.749)
2024-07-06 18:44:56.235  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:44:56.235  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:44:56.236  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:44:56.236  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:44:56.237  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:44:56.237  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:44:56.247  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-7d357681-9c4b-491e-b1c5-b7169480ff63
2024-07-06 18:44:56.247  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-f9af277c-517d-4bd5-bd64-36d7ec40907e
2024-07-06 18:44:56.248  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:44:56.248  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:44:56.248  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:44:56.248  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:44:57.918  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=95, memberId='consumer-event-service-group-1-f9af277c-517d-4bd5-bd64-36d7ec40907e', protocol='range'}
2024-07-06 18:44:57.918  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=113, memberId='consumer-auth-2-7d357681-9c4b-491e-b1c5-b7169480ff63', protocol='range'}
2024-07-06 18:44:58.006  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=95, memberId='consumer-event-service-group-1-f9af277c-517d-4bd5-bd64-36d7ec40907e', protocol='range'}
2024-07-06 18:44:58.007  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=113, memberId='consumer-auth-2-7d357681-9c4b-491e-b1c5-b7169480ff63', protocol='range'}
2024-07-06 18:44:58.009  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:44:58.011  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 18:44:58.012  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 18:44:58.012  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:44:58.013  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 18:44:58.022  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:44:58.023  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:45:18.928  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 18:45:18.929  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:45:18.929  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:45:18.929  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:45:18.931  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=96, memberId='consumer-event-service-group-1-f9af277c-517d-4bd5-bd64-36d7ec40907e', protocol='range'}
2024-07-06 18:45:18.933  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:45:18.933  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-06 18:45:18.933  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-06 18:45:18.933  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:45:18.934  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=114, memberId='consumer-auth-2-7d357681-9c4b-491e-b1c5-b7169480ff63', protocol='range'}
2024-07-06 18:45:18.937  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 96: {consumer-event-service-group-1-f9af277c-517d-4bd5-bd64-36d7ec40907e=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:45:18.937  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 114: {consumer-auth-2-7d357681-9c4b-491e-b1c5-b7169480ff63=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 18:45:18.939  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=96, memberId='consumer-event-service-group-1-f9af277c-517d-4bd5-bd64-36d7ec40907e', protocol='range'}
2024-07-06 18:45:18.940  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:45:18.940  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:45:18.940  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=114, memberId='consumer-auth-2-7d357681-9c4b-491e-b1c5-b7169480ff63', protocol='range'}
2024-07-06 18:45:18.940  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:45:18.940  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:45:18.941  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:45:18.941  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:45:18.941  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=28, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:45:18.942  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:45:19.301  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:45:19.303  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:45:19.305  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:45:19.314  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-f9af277c-517d-4bd5-bd64-36d7ec40907e sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:45:19.314  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 18:45:19.320  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-7d357681-9c4b-491e-b1c5-b7169480ff63 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:45:19.346  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:45:19.346  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:45:19.346  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:45:19.326  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:45:19.351  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:45:19.352  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:45:19.353  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:45:19.353  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:45:19.353  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:45:19.353  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:45:19.454  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.clients.FetchSessionHandler    : [Consumer clientId=consumer-auth-2, groupId=auth] Node 0 sent an invalid full fetch response with extraIds=(Pual-fytSrKhkB51Bq60hA), response=()
2024-07-06 18:45:19.468  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:45:19.486  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:45:19.488  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:45:19.509  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 18:45:19.511  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 18:45:19.722  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:45:19.722  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:45:19.723  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:45:19.726  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:45:19.727  INFO 14008 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:45:19.765  INFO 14008 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:45:19.769  INFO 14008 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 18:45:19.772  INFO 14008 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 18:45:44.781  INFO 14115 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 14115 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:45:44.783 DEBUG 14115 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:45:44.783  INFO 14115 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:45:45.265  INFO 14115 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:45:45.407  INFO 14115 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 135 ms. Found 2 JPA repository interfaces.
2024-07-06 18:45:48.161  INFO 14115 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:45:48.219  INFO 14115 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:45:48.220  INFO 14115 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:45:48.344  INFO 14115 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:45:48.344  INFO 14115 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3512 ms
2024-07-06 18:45:48.961  INFO 14115 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:45:49.036  INFO 14115 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:45:49.224  INFO 14115 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:45:49.339  INFO 14115 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:45:49.608  INFO 14115 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:45:49.714  INFO 14115 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:45:52.351  INFO 14115 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:45:52.377  INFO 14115 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:45:53.331  WARN 14115 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:45:55.150  INFO 14115 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:45:55.338  INFO 14115 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:45:55.338  INFO 14115 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:45:55.339  INFO 14115 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720280755337
2024-07-06 18:45:55.341  INFO 14115 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:45:55.348  INFO 14115 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:45:55.367  INFO 14115 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:45:55.368  INFO 14115 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:45:55.368  INFO 14115 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720280755367
2024-07-06 18:45:55.369  INFO 14115 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:45:55.398  INFO 14115 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:45:55.419  INFO 14115 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 11.322 seconds (JVM running for 11.827)
2024-07-06 18:45:55.756  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:45:55.756  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:45:55.757  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:45:55.757  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:45:55.759  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:45:55.759  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:45:55.776  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-edd5ffb0-5625-45bb-bb21-fddf3312603c
2024-07-06 18:45:55.776  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:45:55.776  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7
2024-07-06 18:45:55.777  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:45:55.777  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:45:55.777  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:45:55.783  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=98, memberId='consumer-event-service-group-1-edd5ffb0-5625-45bb-bb21-fddf3312603c', protocol='range'}
2024-07-06 18:45:55.784  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=116, memberId='consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7', protocol='range'}
2024-07-06 18:45:55.790  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 116: {consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 18:45:55.790  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 98: {consumer-event-service-group-1-edd5ffb0-5625-45bb-bb21-fddf3312603c=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:45:55.807  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=116, memberId='consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7', protocol='range'}
2024-07-06 18:45:55.807  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=98, memberId='consumer-event-service-group-1-edd5ffb0-5625-45bb-bb21-fddf3312603c', protocol='range'}
2024-07-06 18:45:55.808  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:45:55.808  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:45:55.811  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:45:55.811  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:45:55.829  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:45:55.829  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=28, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:45:55.830  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:45:55.830  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:45:58.787  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 18:45:58.787  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:45:58.787  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:45:58.787  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:45:58.788  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 18:45:58.788  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:45:58.788  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:45:58.789  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:45:58.795  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=99, memberId='consumer-event-service-group-1-edd5ffb0-5625-45bb-bb21-fddf3312603c', protocol='range'}
2024-07-06 18:45:58.796  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=117, memberId='consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7', protocol='range'}
2024-07-06 18:45:58.796  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 117: {consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7=Assignment(partitions=[]), consumer-auth-2-a08b2a0c-e09b-4bbd-b735-ae666d276dca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 18:45:58.798  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=117, memberId='consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7', protocol='range'}
2024-07-06 18:45:58.799  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 18:45:58.799  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 18:45:58.799  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 18:45:58.870  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 99: {consumer-event-service-group-1-2876342e-c82b-4a30-b2f4-0aacc78f9ad1=Assignment(partitions=[band-registration-0]), consumer-event-service-group-1-edd5ffb0-5625-45bb-bb21-fddf3312603c=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:45:58.873  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=99, memberId='consumer-event-service-group-1-edd5ffb0-5625-45bb-bb21-fddf3312603c', protocol='range'}
2024-07-06 18:45:58.873  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:45:58.873  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:45:58.874  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:45:58.874  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:46:01.805  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:46:01.806  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-06 18:46:01.806  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-06 18:46:01.806  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:46:01.808  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=118, memberId='consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7', protocol='range'}
2024-07-06 18:46:01.809  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 118: {consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7=Assignment(partitions=[]), consumer-auth-1-eb7a772c-c67b-4491-9a81-cb6bb4e2ea59=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-f11f6e98-3eab-4be7-adab-795166c78ff9=Assignment(partitions=[]), consumer-auth-2-a08b2a0c-e09b-4bbd-b735-ae666d276dca=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 18:46:01.812  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=118, memberId='consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7', protocol='range'}
2024-07-06 18:46:01.812  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 18:46:01.812  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 18:46:01.813  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 18:46:07.800  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 18:46:07.801  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:46:07.801  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:46:07.801  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:46:07.804  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=100, memberId='consumer-event-service-group-1-edd5ffb0-5625-45bb-bb21-fddf3312603c', protocol='range'}
2024-07-06 18:46:07.804  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 100: {consumer-event-service-group-1-edd5ffb0-5625-45bb-bb21-fddf3312603c=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:46:07.812  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:46:07.813  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-06 18:46:07.817  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-06 18:46:07.815  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=100, memberId='consumer-event-service-group-1-edd5ffb0-5625-45bb-bb21-fddf3312603c', protocol='range'}
2024-07-06 18:46:07.819  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:46:07.819  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:46:07.822  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:46:07.823  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=119, memberId='consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7', protocol='range'}
2024-07-06 18:46:07.827  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 119: {consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-1-eb7a772c-c67b-4491-9a81-cb6bb4e2ea59=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-f11f6e98-3eab-4be7-adab-795166c78ff9=Assignment(partitions=[])}
2024-07-06 18:46:07.827  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:46:07.828  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:46:07.833  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=119, memberId='consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7', protocol='range'}
2024-07-06 18:46:07.834  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:46:07.835  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:46:07.837  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=28, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:46:07.838  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:46:10.825  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:46:10.826  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:46:10.826  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 18:46:10.826  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:46:10.828  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=120, memberId='consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7', protocol='range'}
2024-07-06 18:46:10.828  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 120: {consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 18:46:10.831  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=120, memberId='consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7', protocol='range'}
2024-07-06 18:46:10.831  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:46:10.832  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:46:10.833  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=28, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:46:10.833  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:46:11.005  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:46:11.005  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:46:11.005  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 18:46:11.005  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:46:11.005  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-bd9ed107-d485-4654-a471-65748c6ee0d7 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:46:11.006  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-edd5ffb0-5625-45bb-bb21-fddf3312603c sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:46:11.006  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:46:11.006  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:46:11.007  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:46:11.007  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:46:11.009  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:46:11.009  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:46:11.011  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:46:11.011  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:46:11.011  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:46:11.011  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:46:11.357  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:46:11.357  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:46:11.357  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:46:11.361  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 18:46:11.362  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 18:46:11.450  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:46:11.450  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:46:11.450  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:46:11.452  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:46:11.452  INFO 14115 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:46:11.471  INFO 14115 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:46:11.473  INFO 14115 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 18:46:11.474  INFO 14115 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 18:46:15.769  INFO 14208 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 14208 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:46:15.771 DEBUG 14208 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:46:15.771  INFO 14208 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:46:16.336  INFO 14208 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:46:16.597  INFO 14208 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 251 ms. Found 2 JPA repository interfaces.
2024-07-06 18:46:18.038  INFO 14208 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:46:18.049  INFO 14208 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:46:18.050  INFO 14208 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:46:18.142  INFO 14208 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:46:18.142  INFO 14208 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2324 ms
2024-07-06 18:46:18.348  INFO 14208 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:46:18.409  INFO 14208 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:46:18.580  INFO 14208 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:46:18.678  INFO 14208 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:46:18.897  INFO 14208 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:46:18.917  INFO 14208 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:46:19.659  INFO 14208 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:46:19.667  INFO 14208 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:46:20.249  WARN 14208 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:46:21.072  INFO 14208 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:46:21.225  INFO 14208 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:46:21.226  INFO 14208 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:46:21.226  INFO 14208 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720280781224
2024-07-06 18:46:21.228  INFO 14208 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:46:21.234  INFO 14208 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:46:21.245  INFO 14208 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:46:21.246  INFO 14208 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:46:21.246  INFO 14208 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720280781245
2024-07-06 18:46:21.246  INFO 14208 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:46:21.261  INFO 14208 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:46:21.282  INFO 14208 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 5.851 seconds (JVM running for 6.308)
2024-07-06 18:46:21.523  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:46:21.523  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:46:21.525  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:46:21.525  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:46:21.526  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:46:21.526  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:46:21.540  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-12243b7c-17a2-4750-91d4-47fcc9a3daad
2024-07-06 18:46:21.540  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-24be9619-e353-4270-80fc-63cae849d68d
2024-07-06 18:46:21.541  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:46:21.541  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:46:21.541  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:46:21.541  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:46:21.543  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=102, memberId='consumer-event-service-group-1-12243b7c-17a2-4750-91d4-47fcc9a3daad', protocol='range'}
2024-07-06 18:46:21.543  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=122, memberId='consumer-auth-2-24be9619-e353-4270-80fc-63cae849d68d', protocol='range'}
2024-07-06 18:46:21.548  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 122: {consumer-auth-2-24be9619-e353-4270-80fc-63cae849d68d=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 18:46:21.548  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 102: {consumer-event-service-group-1-12243b7c-17a2-4750-91d4-47fcc9a3daad=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:46:21.553  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=122, memberId='consumer-auth-2-24be9619-e353-4270-80fc-63cae849d68d', protocol='range'}
2024-07-06 18:46:21.553  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=102, memberId='consumer-event-service-group-1-12243b7c-17a2-4750-91d4-47fcc9a3daad', protocol='range'}
2024-07-06 18:46:21.554  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:46:21.554  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:46:21.555  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:46:21.555  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:46:21.563  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=28, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:46:21.563  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:46:21.563  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:46:21.563  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:46:24.546  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 18:46:24.546  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:46:24.547  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:46:24.547  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:46:24.548  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 18:46:24.548  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:46:24.548  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:46:24.548  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:46:24.550  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=123, memberId='consumer-auth-2-24be9619-e353-4270-80fc-63cae849d68d', protocol='range'}
2024-07-06 18:46:24.550  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=103, memberId='consumer-event-service-group-1-12243b7c-17a2-4750-91d4-47fcc9a3daad', protocol='range'}
2024-07-06 18:46:24.593  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 103: {consumer-event-service-group-1-12243b7c-17a2-4750-91d4-47fcc9a3daad=Assignment(partitions=[band-registration-request-0]), consumer-event-service-group-1-db2dbac5-0168-46df-a7e1-85f09e759404=Assignment(partitions=[band-registration-0])}
2024-07-06 18:46:24.593  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 123: {consumer-auth-2-24be9619-e353-4270-80fc-63cae849d68d=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-1-41ec278d-1a82-4720-8358-5b66786d1778=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-49445b5c-3629-44b7-853d-7dd038b791a8=Assignment(partitions=[]), consumer-auth-2-caca89ba-5701-4530-a456-0ed28cc6f125=Assignment(partitions=[])}
2024-07-06 18:46:24.595  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=103, memberId='consumer-event-service-group-1-12243b7c-17a2-4750-91d4-47fcc9a3daad', protocol='range'}
2024-07-06 18:46:24.596  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:46:24.596  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:46:24.596  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=123, memberId='consumer-auth-2-24be9619-e353-4270-80fc-63cae849d68d', protocol='range'}
2024-07-06 18:46:24.596  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:46:24.596  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:46:24.599  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:46:24.599  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:46:24.603  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=28, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:46:24.603  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:47:03.625  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:47:03.625  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:47:03.626  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 18:47:03.626  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:47:03.626  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-24be9619-e353-4270-80fc-63cae849d68d sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:47:03.626  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-12243b7c-17a2-4750-91d4-47fcc9a3daad sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:47:03.626  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:47:03.626  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:47:03.626  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:47:03.626  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:47:03.628  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:47:03.628  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:47:03.628  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:47:03.629  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:47:03.629  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:47:03.630  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:47:03.846  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:47:03.846  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:47:03.847  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:47:03.847  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:47:03.847  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:47:03.848  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:47:03.854  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 18:47:03.856  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 18:47:03.856  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:47:03.856  INFO 14208 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:47:03.879  INFO 14208 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:47:03.882  INFO 14208 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 18:47:03.885  INFO 14208 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 18:48:07.886  INFO 14453 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 14453 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:48:07.888 DEBUG 14453 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:48:07.888  INFO 14453 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:48:08.307  INFO 14453 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:48:08.458  INFO 14453 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 143 ms. Found 2 JPA repository interfaces.
2024-07-06 18:48:09.446  INFO 14453 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:48:09.463  INFO 14453 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:48:09.463  INFO 14453 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:48:09.558  INFO 14453 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:48:09.558  INFO 14453 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1641 ms
2024-07-06 18:48:09.786  INFO 14453 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:48:09.844  INFO 14453 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:48:10.003  INFO 14453 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:48:10.089  INFO 14453 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:48:10.318  INFO 14453 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:48:10.338  INFO 14453 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:48:11.255  INFO 14453 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:48:11.264  INFO 14453 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:48:11.999  WARN 14453 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:48:12.946  INFO 14453 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:48:13.072  INFO 14453 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:48:13.072  INFO 14453 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:48:13.072  INFO 14453 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720280893071
2024-07-06 18:48:13.074  INFO 14453 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:48:13.079  INFO 14453 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:48:13.089  INFO 14453 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:48:13.089  INFO 14453 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:48:13.089  INFO 14453 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720280893089
2024-07-06 18:48:13.090  INFO 14453 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:48:13.099  INFO 14453 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:48:13.108  INFO 14453 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 5.453 seconds (JVM running for 5.718)
2024-07-06 18:48:13.281  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:48:13.281  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:48:13.282  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:48:13.282  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:48:13.283  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:48:13.283  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:48:13.292  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-1e8782be-5887-42a4-826f-dbcfabc0f03d
2024-07-06 18:48:13.292  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-c00ce1f6-84a8-41ab-87ae-21906d87e51c
2024-07-06 18:48:13.293  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:48:13.293  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:48:13.293  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:48:13.294  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:48:13.500  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=128, memberId='consumer-auth-2-c00ce1f6-84a8-41ab-87ae-21906d87e51c', protocol='range'}
2024-07-06 18:48:13.500  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=106, memberId='consumer-event-service-group-1-1e8782be-5887-42a4-826f-dbcfabc0f03d', protocol='range'}
2024-07-06 18:48:13.503  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=128, memberId='consumer-auth-2-c00ce1f6-84a8-41ab-87ae-21906d87e51c', protocol='range'}
2024-07-06 18:48:13.504  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:48:13.505  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:48:13.511  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=29, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:48:13.511  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:48:13.573  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=106, memberId='consumer-event-service-group-1-1e8782be-5887-42a4-826f-dbcfabc0f03d', protocol='range'}
2024-07-06 18:48:13.573  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:48:13.574  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:48:13.575  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:48:13.576  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:48:16.504  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:48:16.505  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:48:16.506  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 18:48:16.506  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:48:16.508  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=129, memberId='consumer-auth-2-c00ce1f6-84a8-41ab-87ae-21906d87e51c', protocol='range'}
2024-07-06 18:48:16.515  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=129, memberId='consumer-auth-2-c00ce1f6-84a8-41ab-87ae-21906d87e51c', protocol='range'}
2024-07-06 18:48:16.515  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 18:48:16.515  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 18:48:16.516  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 18:51:46.615  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-c00ce1f6-84a8-41ab-87ae-21906d87e51c sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:51:46.615  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:51:46.616  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:51:46.617  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-1e8782be-5887-42a4-826f-dbcfabc0f03d sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:51:46.617  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:51:46.617  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:51:46.617  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:51:46.617  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:51:46.617  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:51:46.618  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:51:46.620  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:51:46.620  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:51:46.621  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:51:46.621  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:51:46.625  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:51:46.625  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:51:46.625  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:51:46.627  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 18:51:46.628  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 18:51:47.051  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:51:47.051  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:51:47.052  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:51:47.056  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:51:47.056  INFO 14453 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:51:47.078  INFO 14453 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:51:47.080  INFO 14453 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 18:51:47.082  INFO 14453 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 18:52:08.720  INFO 14633 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 14633 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:52:08.722 DEBUG 14633 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:52:08.722  INFO 14633 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:52:09.121  INFO 14633 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:52:09.325  INFO 14633 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 194 ms. Found 2 JPA repository interfaces.
2024-07-06 18:52:09.970  INFO 14633 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:52:09.977  INFO 14633 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:52:09.978  INFO 14633 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:52:10.027  INFO 14633 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:52:10.027  INFO 14633 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1261 ms
2024-07-06 18:52:10.233  INFO 14633 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:52:10.274  INFO 14633 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:52:10.390  INFO 14633 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:52:10.456  INFO 14633 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:52:10.743  INFO 14633 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:52:10.758  INFO 14633 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:52:11.213  INFO 14633 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:52:11.221  INFO 14633 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:52:11.857  WARN 14633 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:52:12.516  INFO 14633 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:52:12.672  INFO 14633 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:52:12.672  INFO 14633 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:52:12.672  INFO 14633 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720281132671
2024-07-06 18:52:12.674  INFO 14633 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:52:12.682  INFO 14633 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:52:12.693  INFO 14633 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:52:12.694  INFO 14633 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:52:12.694  INFO 14633 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720281132693
2024-07-06 18:52:12.694  INFO 14633 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:52:12.707  INFO 14633 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:52:12.718  INFO 14633 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 4.346 seconds (JVM running for 4.751)
2024-07-06 18:52:12.964  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:52:12.964  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:52:12.965  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:52:12.965  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:52:12.966  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:52:12.966  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:52:12.975  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-b5ae71e6-2e7c-49dd-bba3-54d136815f12
2024-07-06 18:52:12.975  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-ec8de0df-6a15-49b8-8ecd-6a7046520bad
2024-07-06 18:52:12.975  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:52:12.975  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:52:12.975  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:52:12.975  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:52:14.069  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=110, memberId='consumer-event-service-group-1-ec8de0df-6a15-49b8-8ecd-6a7046520bad', protocol='range'}
2024-07-06 18:52:14.132  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=110, memberId='consumer-event-service-group-1-ec8de0df-6a15-49b8-8ecd-6a7046520bad', protocol='range'}
2024-07-06 18:52:14.135  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:52:14.138  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:52:14.148  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:52:14.148  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:52:15.021  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=135, memberId='consumer-auth-2-b5ae71e6-2e7c-49dd-bba3-54d136815f12', protocol='range'}
2024-07-06 18:52:15.197  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=135, memberId='consumer-auth-2-b5ae71e6-2e7c-49dd-bba3-54d136815f12', protocol='range'}
2024-07-06 18:52:15.198  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 18:52:15.198  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 18:52:15.198  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 18:56:06.123  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:56:06.125  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-06 18:56:06.127  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-06 18:56:06.128  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:56:06.156  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=136, memberId='consumer-auth-2-b5ae71e6-2e7c-49dd-bba3-54d136815f12', protocol='range'}
2024-07-06 18:56:06.164  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 136: {consumer-auth-2-b5ae71e6-2e7c-49dd-bba3-54d136815f12=Assignment(partitions=[]), consumer-auth-2-58a4c403-be9a-4a0e-83ac-95bc5463b29a=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 18:56:06.169  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=136, memberId='consumer-auth-2-b5ae71e6-2e7c-49dd-bba3-54d136815f12', protocol='range'}
2024-07-06 18:56:06.169  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 18:56:06.169  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 18:56:06.169  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 18:56:14.174  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 18:56:14.175  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:56:14.175  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:56:14.175  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:56:14.177  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=111, memberId='consumer-event-service-group-1-ec8de0df-6a15-49b8-8ecd-6a7046520bad', protocol='range'}
2024-07-06 18:56:14.177  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 111: {consumer-event-service-group-1-ec8de0df-6a15-49b8-8ecd-6a7046520bad=Assignment(partitions=[band-registration-request-0])}
2024-07-06 18:56:14.180  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=111, memberId='consumer-event-service-group-1-ec8de0df-6a15-49b8-8ecd-6a7046520bad', protocol='range'}
2024-07-06 18:56:14.180  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:56:14.181  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:56:14.182  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:56:14.182  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:56:15.159  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:56:15.160  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-06 18:56:15.160  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-06 18:56:15.160  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:56:15.161  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=137, memberId='consumer-auth-2-b5ae71e6-2e7c-49dd-bba3-54d136815f12', protocol='range'}
2024-07-06 18:56:15.161  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 137: {consumer-auth-2-b5ae71e6-2e7c-49dd-bba3-54d136815f12=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 18:56:15.163  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=137, memberId='consumer-auth-2-b5ae71e6-2e7c-49dd-bba3-54d136815f12', protocol='range'}
2024-07-06 18:56:15.163  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:56:15.163  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:56:15.164  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=31, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:56:15.164  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:56:18.163  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 18:56:18.168  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:56:18.168  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 18:56:18.168  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:56:18.170  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=138, memberId='consumer-auth-2-b5ae71e6-2e7c-49dd-bba3-54d136815f12', protocol='range'}
2024-07-06 18:56:18.188  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 138: {consumer-auth-2-c50d6db4-d884-4cbc-8479-4514a17f201f=Assignment(partitions=[]), consumer-auth-2-b5ae71e6-2e7c-49dd-bba3-54d136815f12=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-1-eb65b988-407d-4e8a-a507-cc1db871cd8a=Assignment(partitions=[roleCheckTopic-0])}
2024-07-06 18:56:18.190  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=138, memberId='consumer-auth-2-b5ae71e6-2e7c-49dd-bba3-54d136815f12', protocol='range'}
2024-07-06 18:56:18.190  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 18:56:18.190  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 18:56:18.192  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=31, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:56:18.192  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 18:56:21.569  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:56:21.569  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 18:56:21.569  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:56:21.569  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 18:56:21.570  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-ec8de0df-6a15-49b8-8ecd-6a7046520bad sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:56:21.570  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-b5ae71e6-2e7c-49dd-bba3-54d136815f12 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:56:21.570  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:56:21.571  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:56:21.573  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:56:21.571  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:56:21.573  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:56:21.573  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:56:21.574  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:56:21.574  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:56:21.574  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:56:21.575  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:56:21.712  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:56:21.712  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:56:21.712  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:56:21.714  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 18:56:21.715  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 18:56:21.980  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:56:21.980  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:56:21.982  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:56:21.986  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:56:21.987  INFO 14633 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:56:22.007  INFO 14633 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:56:22.011  INFO 14633 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 18:56:22.013  INFO 14633 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 18:56:25.642  INFO 14803 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 14803 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 18:56:25.646 DEBUG 14803 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 18:56:25.647  INFO 14803 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 18:56:26.601  INFO 14803 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 18:56:26.809  INFO 14803 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 184 ms. Found 2 JPA repository interfaces.
2024-07-06 18:56:27.551  INFO 14803 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 18:56:27.561  INFO 14803 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 18:56:27.561  INFO 14803 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 18:56:27.631  INFO 14803 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 18:56:27.632  INFO 14803 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1928 ms
2024-07-06 18:56:27.813  INFO 14803 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 18:56:27.855  INFO 14803 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 18:56:27.983  INFO 14803 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 18:56:28.059  INFO 14803 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 18:56:28.221  INFO 14803 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 18:56:28.243  INFO 14803 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 18:56:28.819  INFO 14803 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 18:56:28.825  INFO 14803 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:56:29.290  WARN 14803 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 18:56:30.295  INFO 14803 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:56:30.442  INFO 14803 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:56:30.442  INFO 14803 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:56:30.442  INFO 14803 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720281390441
2024-07-06 18:56:30.444  INFO 14803 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 18:56:30.450  INFO 14803 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 18:56:30.463  INFO 14803 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 18:56:30.463  INFO 14803 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 18:56:30.463  INFO 14803 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720281390463
2024-07-06 18:56:30.463  INFO 14803 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 18:56:30.476  INFO 14803 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 18:56:30.487  INFO 14803 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 5.125 seconds (JVM running for 5.362)
2024-07-06 18:56:30.714  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:56:30.714  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 18:56:30.715  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:56:30.715  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 18:56:30.717  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:56:30.717  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:56:30.727  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-291d8209-4a90-4079-b199-919d150f70b3
2024-07-06 18:56:30.727  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-dcda468d-15f1-4a95-911d-303ea403f250
2024-07-06 18:56:30.728  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:56:30.728  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 18:56:30.728  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 18:56:30.728  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 18:56:33.187  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=140, memberId='consumer-auth-2-dcda468d-15f1-4a95-911d-303ea403f250', protocol='range'}
2024-07-06 18:56:33.192  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=140, memberId='consumer-auth-2-dcda468d-15f1-4a95-911d-303ea403f250', protocol='range'}
2024-07-06 18:56:33.194  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 18:56:33.195  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 18:56:33.196  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 18:56:33.656  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=114, memberId='consumer-event-service-group-1-291d8209-4a90-4079-b199-919d150f70b3', protocol='range'}
2024-07-06 18:56:33.718  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=114, memberId='consumer-event-service-group-1-291d8209-4a90-4079-b199-919d150f70b3', protocol='range'}
2024-07-06 18:56:33.718  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 18:56:33.720  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 18:56:33.725  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 18:56:33.726  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 18:56:41.703  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 18:56:41.704  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-dcda468d-15f1-4a95-911d-303ea403f250 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:56:41.704  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 18:56:41.705  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-291d8209-4a90-4079-b199-919d150f70b3 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 18:56:41.705  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:56:41.705  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:56:41.705  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:56:41.705  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:56:41.708  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:56:41.708  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 18:56:41.710  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:56:41.710  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 18:56:41.718  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:56:41.718  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 18:56:41.723  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:56:41.724  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:56:41.724  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:56:41.729  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 18:56:41.730  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 18:56:42.012  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 18:56:42.012  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 18:56:42.012  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 18:56:42.014  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 18:56:42.014  INFO 14803 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 18:56:42.033  INFO 14803 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 18:56:42.035  INFO 14803 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 18:56:42.039  INFO 14803 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 19:05:29.379  INFO 15138 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 15138 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 19:05:29.381 DEBUG 15138 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 19:05:29.381  INFO 15138 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 19:05:29.668  INFO 15138 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 19:05:29.756  INFO 15138 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 84 ms. Found 2 JPA repository interfaces.
2024-07-06 19:05:30.268  INFO 15138 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 19:05:30.276  INFO 15138 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 19:05:30.276  INFO 15138 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 19:05:30.335  INFO 15138 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 19:05:30.335  INFO 15138 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 922 ms
2024-07-06 19:05:30.466  INFO 15138 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 19:05:30.496  INFO 15138 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 19:05:30.646  INFO 15138 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 19:05:30.884  INFO 15138 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 19:05:31.275  INFO 15138 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 19:05:31.295  INFO 15138 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 19:05:31.960  INFO 15138 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 19:05:31.968  INFO 15138 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 19:05:32.578  WARN 15138 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 19:05:34.037  INFO 15138 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 19:05:34.468  INFO 15138 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 19:05:34.468  INFO 15138 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 19:05:34.468  INFO 15138 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720281934467
2024-07-06 19:05:34.472  INFO 15138 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 19:05:34.481  INFO 15138 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 19:05:34.499  INFO 15138 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 19:05:34.500  INFO 15138 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 19:05:34.500  INFO 15138 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720281934499
2024-07-06 19:05:34.500  INFO 15138 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 19:05:34.520  INFO 15138 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 19:05:34.532  INFO 15138 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 5.365 seconds (JVM running for 5.622)
2024-07-06 19:05:35.019  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 19:05:35.021  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 19:05:35.023  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 19:05:35.023  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 19:05:35.027  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:05:35.029  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:05:35.048  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-b262c2b9-7367-4403-84db-3d042c7c5e32
2024-07-06 19:05:35.049  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-9d2e1220-82c9-4881-bea1-3d281a945f2b
2024-07-06 19:05:35.049  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 19:05:35.050  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:05:35.049  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 19:05:35.051  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:05:35.087  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=119, memberId='consumer-event-service-group-1-b262c2b9-7367-4403-84db-3d042c7c5e32', protocol='range'}
2024-07-06 19:05:35.089  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=148, memberId='consumer-auth-2-9d2e1220-82c9-4881-bea1-3d281a945f2b', protocol='range'}
2024-07-06 19:05:35.120  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 148: {consumer-auth-2-9d2e1220-82c9-4881-bea1-3d281a945f2b=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 19:05:35.121  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 119: {consumer-event-service-group-1-b262c2b9-7367-4403-84db-3d042c7c5e32=Assignment(partitions=[band-registration-request-0])}
2024-07-06 19:05:35.131  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=148, memberId='consumer-auth-2-9d2e1220-82c9-4881-bea1-3d281a945f2b', protocol='range'}
2024-07-06 19:05:35.131  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=119, memberId='consumer-event-service-group-1-b262c2b9-7367-4403-84db-3d042c7c5e32', protocol='range'}
2024-07-06 19:05:35.139  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 19:05:35.135  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 19:05:35.142  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 19:05:35.143  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 19:05:35.157  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=32, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:05:35.157  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:05:35.158  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 19:05:35.158  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 19:05:44.104  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 19:05:44.104  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 19:05:44.106  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 19:05:44.106  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 19:05:44.107  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 19:05:44.107  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 19:05:44.107  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:05:44.107  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:05:44.111  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=120, memberId='consumer-event-service-group-1-b262c2b9-7367-4403-84db-3d042c7c5e32', protocol='range'}
2024-07-06 19:05:44.112  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=149, memberId='consumer-auth-2-9d2e1220-82c9-4881-bea1-3d281a945f2b', protocol='range'}
2024-07-06 19:05:44.117  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 149: {consumer-auth-2-e267f010-3cc8-4cbb-b980-0b19dce345af=Assignment(partitions=[]), consumer-auth-2-9d2e1220-82c9-4881-bea1-3d281a945f2b=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 19:05:44.123  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=149, memberId='consumer-auth-2-9d2e1220-82c9-4881-bea1-3d281a945f2b', protocol='range'}
2024-07-06 19:05:44.123  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 19:05:44.124  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 19:05:44.130  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=32, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:05:44.131  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 19:05:44.179  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 120: {consumer-event-service-group-1-70295014-564e-407c-8ce9-1b2a783e7e0c=Assignment(partitions=[band-registration-0]), consumer-event-service-group-1-b262c2b9-7367-4403-84db-3d042c7c5e32=Assignment(partitions=[band-registration-request-0])}
2024-07-06 19:05:44.191  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=120, memberId='consumer-event-service-group-1-b262c2b9-7367-4403-84db-3d042c7c5e32', protocol='range'}
2024-07-06 19:05:44.191  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 19:05:44.191  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 19:05:44.194  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:05:44.194  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 19:05:47.114  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 19:05:47.114  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 19:05:47.115  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 19:05:47.115  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:05:47.128  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=150, memberId='consumer-auth-2-9d2e1220-82c9-4881-bea1-3d281a945f2b', protocol='range'}
2024-07-06 19:05:47.252  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 150: {consumer-auth-2-4e711cda-4eb6-4142-916e-7e56833f67ae=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-e267f010-3cc8-4cbb-b980-0b19dce345af=Assignment(partitions=[]), consumer-auth-1-d4ef41da-9dcc-48ef-b2d0-5a1f7f2a3518=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-9d2e1220-82c9-4881-bea1-3d281a945f2b=Assignment(partitions=[])}
2024-07-06 19:05:47.258  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=150, memberId='consumer-auth-2-9d2e1220-82c9-4881-bea1-3d281a945f2b', protocol='range'}
2024-07-06 19:05:47.258  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 19:05:47.259  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 19:05:47.259  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 19:13:48.543  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 19:13:48.543  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-9d2e1220-82c9-4881-bea1-3d281a945f2b sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 19:13:48.544  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 19:13:48.545  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-b262c2b9-7367-4403-84db-3d042c7c5e32 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 19:13:48.545  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:13:48.545  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:13:48.545  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:13:48.545  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:13:48.545  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 19:13:48.545  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 19:13:48.548  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:13:48.548  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:13:48.548  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:13:48.548  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:13:48.551  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 19:13:48.551  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 19:13:48.551  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 19:13:48.553  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 19:13:48.553  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 19:13:48.717  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 19:13:48.717  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 19:13:48.717  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 19:13:48.718  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 19:13:48.725  INFO 15138 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 19:13:48.742  INFO 15138 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 19:13:48.744  INFO 15138 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 19:13:48.746  INFO 15138 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 19:13:53.849  INFO 15461 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 15461 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 19:13:53.852 DEBUG 15461 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 19:13:53.852  INFO 15461 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 19:13:54.453  INFO 15461 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 19:13:54.606  INFO 15461 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 146 ms. Found 2 JPA repository interfaces.
2024-07-06 19:13:55.582  INFO 15461 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 19:13:55.594  INFO 15461 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 19:13:55.595  INFO 15461 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 19:13:55.694  INFO 15461 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 19:13:55.695  INFO 15461 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1790 ms
2024-07-06 19:13:55.969  INFO 15461 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 19:13:56.037  INFO 15461 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 19:13:56.244  INFO 15461 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 19:13:56.356  INFO 15461 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 19:13:56.550  INFO 15461 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 19:13:56.571  INFO 15461 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 19:13:57.181  INFO 15461 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 19:13:57.188  INFO 15461 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 19:13:57.787  WARN 15461 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 19:13:58.807  INFO 15461 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 19:13:59.018  INFO 15461 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 19:13:59.019  INFO 15461 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 19:13:59.019  INFO 15461 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720282439017
2024-07-06 19:13:59.022  INFO 15461 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 19:13:59.030  INFO 15461 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 19:13:59.045  INFO 15461 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 19:13:59.045  INFO 15461 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 19:13:59.045  INFO 15461 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720282439045
2024-07-06 19:13:59.046  INFO 15461 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 19:13:59.062  INFO 15461 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 19:13:59.076  INFO 15461 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 5.651 seconds (JVM running for 5.928)
2024-07-06 19:13:59.320  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 19:13:59.320  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 19:13:59.321  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 19:13:59.321  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 19:13:59.322  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:13:59.322  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:13:59.333  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-38cc1a7d-0158-4c1f-a23e-7015788e78f2
2024-07-06 19:13:59.333  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-5966b091-d7f5-4126-acbf-548dfbfcaf91
2024-07-06 19:13:59.334  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 19:13:59.334  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 19:13:59.334  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:13:59.334  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:13:59.336  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=154, memberId='consumer-auth-2-38cc1a7d-0158-4c1f-a23e-7015788e78f2', protocol='range'}
2024-07-06 19:13:59.336  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=123, memberId='consumer-event-service-group-1-5966b091-d7f5-4126-acbf-548dfbfcaf91', protocol='range'}
2024-07-06 19:13:59.341  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 123: {consumer-event-service-group-1-5966b091-d7f5-4126-acbf-548dfbfcaf91=Assignment(partitions=[band-registration-request-0])}
2024-07-06 19:13:59.341  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 154: {consumer-auth-2-38cc1a7d-0158-4c1f-a23e-7015788e78f2=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 19:13:59.345  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=154, memberId='consumer-auth-2-38cc1a7d-0158-4c1f-a23e-7015788e78f2', protocol='range'}
2024-07-06 19:13:59.345  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=123, memberId='consumer-event-service-group-1-5966b091-d7f5-4126-acbf-548dfbfcaf91', protocol='range'}
2024-07-06 19:13:59.346  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 19:13:59.346  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 19:13:59.348  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 19:13:59.348  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 19:13:59.355  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=34, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:13:59.355  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:13:59.355  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 19:13:59.355  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 19:14:02.339  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 19:14:02.339  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 19:14:02.340  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 19:14:02.340  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 19:14:02.340  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 19:14:02.340  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 19:14:02.340  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:14:02.341  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:14:02.342  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=124, memberId='consumer-event-service-group-1-5966b091-d7f5-4126-acbf-548dfbfcaf91', protocol='range'}
2024-07-06 19:14:02.342  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=155, memberId='consumer-auth-2-38cc1a7d-0158-4c1f-a23e-7015788e78f2', protocol='range'}
2024-07-06 19:14:02.342  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 155: {consumer-auth-2-38cc1a7d-0158-4c1f-a23e-7015788e78f2=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-e07de4d7-8c6e-480f-a7a1-d485209a0f0c=Assignment(partitions=[])}
2024-07-06 19:14:02.345  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=155, memberId='consumer-auth-2-38cc1a7d-0158-4c1f-a23e-7015788e78f2', protocol='range'}
2024-07-06 19:14:02.345  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 19:14:02.345  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 19:14:02.346  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=34, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:14:02.346  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 19:14:02.394  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 124: {consumer-event-service-group-1-5966b091-d7f5-4126-acbf-548dfbfcaf91=Assignment(partitions=[band-registration-request-0]), consumer-event-service-group-1-7bb05fc1-91b2-4fb3-8325-213e2ac78b51=Assignment(partitions=[band-registration-0])}
2024-07-06 19:14:02.398  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=124, memberId='consumer-event-service-group-1-5966b091-d7f5-4126-acbf-548dfbfcaf91', protocol='range'}
2024-07-06 19:14:02.398  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 19:14:02.398  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 19:14:02.400  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:14:02.400  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 19:14:05.344  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 19:14:05.345  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 19:14:05.345  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 19:14:05.345  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:14:05.349  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=156, memberId='consumer-auth-2-38cc1a7d-0158-4c1f-a23e-7015788e78f2', protocol='range'}
2024-07-06 19:14:05.418  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 156: {consumer-auth-1-515dfaaf-172f-42ed-b1a8-6e4ebe9b8161=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-326a6f2a-254f-4a0d-838c-f22feb214e70=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-38cc1a7d-0158-4c1f-a23e-7015788e78f2=Assignment(partitions=[]), consumer-auth-2-e07de4d7-8c6e-480f-a7a1-d485209a0f0c=Assignment(partitions=[])}
2024-07-06 19:14:05.421  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=156, memberId='consumer-auth-2-38cc1a7d-0158-4c1f-a23e-7015788e78f2', protocol='range'}
2024-07-06 19:14:05.421  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 19:14:05.421  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 19:14:05.421  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 19:22:05.598  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 19:22:05.598  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 19:22:05.601  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-06 19:22:05.601  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 19:22:05.602  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 19:22:05.602  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:22:05.602  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-06 19:22:05.603  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:22:05.607  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=157, memberId='consumer-auth-2-38cc1a7d-0158-4c1f-a23e-7015788e78f2', protocol='range'}
2024-07-06 19:22:05.607  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=125, memberId='consumer-event-service-group-1-5966b091-d7f5-4126-acbf-548dfbfcaf91', protocol='range'}
2024-07-06 19:22:05.608  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 157: {consumer-auth-2-38cc1a7d-0158-4c1f-a23e-7015788e78f2=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 19:22:05.608  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 125: {consumer-event-service-group-1-5966b091-d7f5-4126-acbf-548dfbfcaf91=Assignment(partitions=[band-registration-request-0])}
2024-07-06 19:22:05.616  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=157, memberId='consumer-auth-2-38cc1a7d-0158-4c1f-a23e-7015788e78f2', protocol='range'}
2024-07-06 19:22:05.616  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=125, memberId='consumer-event-service-group-1-5966b091-d7f5-4126-acbf-548dfbfcaf91', protocol='range'}
2024-07-06 19:22:05.617  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 19:22:05.617  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 19:22:05.617  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 19:22:05.617  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 19:22:05.620  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=35, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:22:05.620  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:22:05.621  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 19:22:05.621  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 19:22:06.628  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 19:22:06.628  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 19:22:06.628  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 19:22:06.628  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 19:22:06.628  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-5966b091-d7f5-4126-acbf-548dfbfcaf91 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 19:22:06.628  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-38cc1a7d-0158-4c1f-a23e-7015788e78f2 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 19:22:06.629  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:22:06.631  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:22:06.631  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:22:06.631  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:22:06.632  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 19:22:06.632  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 19:22:06.635  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:22:06.635  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:22:06.635  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:22:06.635  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:22:06.640  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 19:22:06.642  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 19:22:06.642  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 19:22:06.646  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 19:22:06.647  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 19:22:06.770  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 19:22:06.771  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 19:22:06.771  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 19:22:06.772  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 19:22:06.772  INFO 15461 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 19:22:06.802  INFO 15461 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 19:22:06.805  INFO 15461 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 19:22:06.807  INFO 15461 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 19:22:14.569  INFO 15637 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 15637 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 19:22:14.575 DEBUG 15637 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 19:22:14.579  INFO 15637 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 19:22:16.254  INFO 15637 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 19:22:16.846  INFO 15637 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 571 ms. Found 2 JPA repository interfaces.
2024-07-06 19:22:18.670  INFO 15637 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 19:22:18.682  INFO 15637 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 19:22:18.682  INFO 15637 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 19:22:18.769  INFO 15637 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 19:22:18.770  INFO 15637 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4092 ms
2024-07-06 19:22:19.017  INFO 15637 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 19:22:19.077  INFO 15637 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 19:22:19.242  INFO 15637 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 19:22:19.334  INFO 15637 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 19:22:19.521  INFO 15637 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 19:22:19.540  INFO 15637 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 19:22:20.160  INFO 15637 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 19:22:20.166  INFO 15637 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 19:22:20.620  WARN 15637 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 19:22:21.522  INFO 15637 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 19:22:21.781  INFO 15637 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 19:22:21.781  INFO 15637 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 19:22:21.781  INFO 15637 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720282941780
2024-07-06 19:22:21.784  INFO 15637 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 19:22:21.793  INFO 15637 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 19:22:21.809  INFO 15637 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 19:22:21.810  INFO 15637 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 19:22:21.810  INFO 15637 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720282941809
2024-07-06 19:22:21.811  INFO 15637 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 19:22:21.829  INFO 15637 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 19:22:21.845  INFO 15637 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 8.73 seconds (JVM running for 9.901)
2024-07-06 19:22:22.232  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 19:22:22.232  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 19:22:22.235  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 19:22:22.235  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 19:22:22.237  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:22:22.237  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:22:22.252  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-12119423-47fc-49a6-8089-87b70750c7cc
2024-07-06 19:22:22.252  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-50118276-6820-4094-9657-ca4966d80317
2024-07-06 19:22:22.253  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 19:22:22.253  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 19:22:22.253  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:22:22.253  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:22:22.263  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=127, memberId='consumer-event-service-group-1-50118276-6820-4094-9657-ca4966d80317', protocol='range'}
2024-07-06 19:22:22.263  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=159, memberId='consumer-auth-2-12119423-47fc-49a6-8089-87b70750c7cc', protocol='range'}
2024-07-06 19:22:22.270  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 127: {consumer-event-service-group-1-50118276-6820-4094-9657-ca4966d80317=Assignment(partitions=[band-registration-request-0])}
2024-07-06 19:22:22.270  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 159: {consumer-auth-2-12119423-47fc-49a6-8089-87b70750c7cc=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 19:22:22.276  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=159, memberId='consumer-auth-2-12119423-47fc-49a6-8089-87b70750c7cc', protocol='range'}
2024-07-06 19:22:22.276  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=127, memberId='consumer-event-service-group-1-50118276-6820-4094-9657-ca4966d80317', protocol='range'}
2024-07-06 19:22:22.276  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 19:22:22.276  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 19:22:22.279  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 19:22:22.279  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 19:22:22.301  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=35, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:22:22.302  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:22:22.303  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 19:22:22.303  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 19:22:25.265  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 19:22:25.265  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 19:22:25.266  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 19:22:25.266  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 19:22:25.266  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 19:22:25.266  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 19:22:25.266  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:22:25.266  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:22:25.268  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=128, memberId='consumer-event-service-group-1-50118276-6820-4094-9657-ca4966d80317', protocol='range'}
2024-07-06 19:22:25.268  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=160, memberId='consumer-auth-2-12119423-47fc-49a6-8089-87b70750c7cc', protocol='range'}
2024-07-06 19:22:25.269  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 160: {consumer-auth-2-6137fb11-2764-4c92-8fc2-156b39a9e466=Assignment(partitions=[]), consumer-auth-2-12119423-47fc-49a6-8089-87b70750c7cc=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 19:22:25.272  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=160, memberId='consumer-auth-2-12119423-47fc-49a6-8089-87b70750c7cc', protocol='range'}
2024-07-06 19:22:25.272  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 19:22:25.273  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 19:22:25.274  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=35, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:22:25.274  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 19:22:25.435  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 128: {consumer-event-service-group-1-760374e5-7b1b-4d42-9439-b423a5982259=Assignment(partitions=[band-registration-0]), consumer-event-service-group-1-50118276-6820-4094-9657-ca4966d80317=Assignment(partitions=[band-registration-request-0])}
2024-07-06 19:22:25.437  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=128, memberId='consumer-event-service-group-1-50118276-6820-4094-9657-ca4966d80317', protocol='range'}
2024-07-06 19:22:25.437  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 19:22:25.437  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 19:22:25.439  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:22:25.439  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 19:22:28.270  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 19:22:28.271  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 19:22:28.271  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 19:22:28.271  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:22:28.273  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=161, memberId='consumer-auth-2-12119423-47fc-49a6-8089-87b70750c7cc', protocol='range'}
2024-07-06 19:22:28.496  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 161: {consumer-auth-2-e169c0aa-586d-467a-a987-0750dc1c7020=Assignment(partitions=[]), consumer-auth-2-6137fb11-2764-4c92-8fc2-156b39a9e466=Assignment(partitions=[]), consumer-auth-1-37a4e141-df15-470b-b6d3-d515a1ffa568=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-12119423-47fc-49a6-8089-87b70750c7cc=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 19:22:28.500  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=161, memberId='consumer-auth-2-12119423-47fc-49a6-8089-87b70750c7cc', protocol='range'}
2024-07-06 19:22:28.502  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 19:22:28.503  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 19:22:28.507  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=35, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:22:28.507  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 19:27:44.052  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 19:27:44.052  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 19:27:44.053  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 19:27:44.053  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 19:27:44.054  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-50118276-6820-4094-9657-ca4966d80317 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 19:27:44.054  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-12119423-47fc-49a6-8089-87b70750c7cc sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 19:27:44.056  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:27:44.054  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:27:44.056  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:27:44.057  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:27:44.057  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 19:27:44.058  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 19:27:44.059  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:27:44.059  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:27:44.060  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:27:44.060  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:27:44.202  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 19:27:44.203  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 19:27:44.204  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 19:27:44.219  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 19:27:44.226  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 19:27:44.435  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 19:27:44.438  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 19:27:44.442  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 19:27:44.451  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 19:27:44.453  INFO 15637 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 19:27:44.527  INFO 15637 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 19:27:44.541  INFO 15637 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 19:27:44.556  INFO 15637 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 19:28:32.938  INFO 15832 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 15832 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 19:28:32.939 DEBUG 15832 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 19:28:32.939  INFO 15832 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 19:28:33.222  INFO 15832 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 19:28:33.314  INFO 15832 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 87 ms. Found 2 JPA repository interfaces.
2024-07-06 19:28:34.351  INFO 15832 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 19:28:34.364  INFO 15832 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 19:28:34.364  INFO 15832 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 19:28:34.446  INFO 15832 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 19:28:34.446  INFO 15832 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1479 ms
2024-07-06 19:28:34.749  INFO 15832 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 19:28:34.848  INFO 15832 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 19:28:35.127  INFO 15832 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 19:28:35.228  INFO 15832 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 19:28:35.445  INFO 15832 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 19:28:35.468  INFO 15832 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 19:28:36.124  INFO 15832 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 19:28:36.133  INFO 15832 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 19:28:36.599  WARN 15832 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 19:28:37.518  INFO 15832 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 19:28:37.693  INFO 15832 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 19:28:37.693  INFO 15832 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 19:28:37.693  INFO 15832 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720283317691
2024-07-06 19:28:37.696  INFO 15832 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 19:28:37.724  INFO 15832 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 19:28:37.761  INFO 15832 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 19:28:37.761  INFO 15832 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 19:28:37.762  INFO 15832 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720283317761
2024-07-06 19:28:37.764  INFO 15832 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 19:28:37.795  INFO 15832 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 19:28:37.864  INFO 15832 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 5.138 seconds (JVM running for 5.345)
2024-07-06 19:28:38.313  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 19:28:38.313  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 19:28:38.314  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 19:28:38.314  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 19:28:38.317  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:28:38.317  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:28:38.332  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-22596f92-2e16-447f-95a7-f7ee83e0f071
2024-07-06 19:28:38.332  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-83a442d5-0df5-4bfe-98fd-afb65cddd528
2024-07-06 19:28:38.332  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 19:28:38.332  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 19:28:38.332  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:28:38.332  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:28:38.337  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=131, memberId='consumer-event-service-group-1-83a442d5-0df5-4bfe-98fd-afb65cddd528', protocol='range'}
2024-07-06 19:28:38.337  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=165, memberId='consumer-auth-2-22596f92-2e16-447f-95a7-f7ee83e0f071', protocol='range'}
2024-07-06 19:28:38.344  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 165: {consumer-auth-2-22596f92-2e16-447f-95a7-f7ee83e0f071=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 19:28:38.344  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 131: {consumer-event-service-group-1-83a442d5-0df5-4bfe-98fd-afb65cddd528=Assignment(partitions=[band-registration-request-0])}
2024-07-06 19:28:38.349  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=131, memberId='consumer-event-service-group-1-83a442d5-0df5-4bfe-98fd-afb65cddd528', protocol='range'}
2024-07-06 19:28:38.349  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=165, memberId='consumer-auth-2-22596f92-2e16-447f-95a7-f7ee83e0f071', protocol='range'}
2024-07-06 19:28:38.350  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 19:28:38.350  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 19:28:38.353  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 19:28:38.353  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 19:28:38.363  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:28:38.363  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=36, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:28:38.364  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 19:28:38.364  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 19:28:44.341  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 19:28:44.341  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 19:28:44.344  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 19:28:44.344  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 19:28:44.345  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 19:28:44.345  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 19:28:44.346  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:28:44.346  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:28:44.349  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=132, memberId='consumer-event-service-group-1-83a442d5-0df5-4bfe-98fd-afb65cddd528', protocol='range'}
2024-07-06 19:28:44.349  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=166, memberId='consumer-auth-2-22596f92-2e16-447f-95a7-f7ee83e0f071', protocol='range'}
2024-07-06 19:28:44.450  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 132: {consumer-event-service-group-1-83a442d5-0df5-4bfe-98fd-afb65cddd528=Assignment(partitions=[band-registration-request-0]), consumer-event-service-group-1-c1ac65b7-7699-49ff-b455-c415019dd9c4=Assignment(partitions=[band-registration-0])}
2024-07-06 19:28:44.450  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 166: {consumer-auth-2-3f0b77f7-69b3-4e1b-a7d2-cf96ad84a3ec=Assignment(partitions=[]), consumer-auth-2-22596f92-2e16-447f-95a7-f7ee83e0f071=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-1-9ec20833-0fe3-4156-accb-d14c4fb92c3f=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-d6a14af1-1e25-4b36-a01a-002ac41e842d=Assignment(partitions=[])}
2024-07-06 19:28:44.454  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=132, memberId='consumer-event-service-group-1-83a442d5-0df5-4bfe-98fd-afb65cddd528', protocol='range'}
2024-07-06 19:28:44.454  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=166, memberId='consumer-auth-2-22596f92-2e16-447f-95a7-f7ee83e0f071', protocol='range'}
2024-07-06 19:28:44.454  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 19:28:44.454  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 19:28:44.454  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 19:28:44.454  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 19:28:44.457  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:28:44.458  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 19:28:44.458  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=36, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:28:44.458  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 19:32:58.884  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 19:32:58.884  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 19:32:58.887  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 19:32:58.887  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 19:32:58.887  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-83a442d5-0df5-4bfe-98fd-afb65cddd528 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 19:32:58.887  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-22596f92-2e16-447f-95a7-f7ee83e0f071 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 19:32:58.888  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:32:58.888  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:32:58.888  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:32:58.888  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 19:32:58.888  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:32:58.890  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 19:32:58.891  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:32:58.891  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:32:58.893  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:32:58.893  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:32:59.171  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 19:32:59.172  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 19:32:59.172  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 19:32:59.172  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 19:32:59.172  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 19:32:59.172  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 19:32:59.179  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 19:32:59.180  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 19:32:59.180  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 19:32:59.180  INFO 15832 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 19:32:59.203  INFO 15832 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 19:32:59.206  INFO 15832 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 19:32:59.209  INFO 15832 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 19:34:36.714  INFO 16103 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 16103 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 19:34:36.718 DEBUG 16103 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 19:34:36.718  INFO 16103 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 19:34:37.335  INFO 16103 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 19:34:37.499  INFO 16103 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 152 ms. Found 2 JPA repository interfaces.
2024-07-06 19:34:38.544  INFO 16103 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 19:34:38.555  INFO 16103 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 19:34:38.556  INFO 16103 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 19:34:38.628  INFO 16103 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 19:34:38.628  INFO 16103 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1814 ms
2024-07-06 19:34:38.815  INFO 16103 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 19:34:38.855  INFO 16103 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 19:34:38.967  INFO 16103 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 19:34:39.031  INFO 16103 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 19:34:39.164  INFO 16103 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 19:34:39.179  INFO 16103 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 19:34:39.720  INFO 16103 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 19:34:39.725  INFO 16103 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 19:34:40.092  WARN 16103 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 19:34:40.821  INFO 16103 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 19:34:40.946  INFO 16103 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 19:34:40.946  INFO 16103 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 19:34:40.946  INFO 16103 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720283680945
2024-07-06 19:34:40.948  INFO 16103 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 19:34:40.952  INFO 16103 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 19:34:40.963  INFO 16103 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 19:34:40.963  INFO 16103 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 19:34:40.963  INFO 16103 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720283680963
2024-07-06 19:34:40.963  INFO 16103 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 19:34:40.974  INFO 16103 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 19:34:40.981  INFO 16103 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 4.866 seconds (JVM running for 5.397)
2024-07-06 19:34:41.159  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 19:34:41.159  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 19:34:41.160  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 19:34:41.160  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 19:34:41.161  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:34:41.161  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:34:41.174  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-6aa9c9e5-f99d-4fb1-b584-ad442da22946
2024-07-06 19:34:41.175  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 19:34:41.175  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:34:41.174  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-fc821ddc-f01f-49a0-aea9-2e9884f0b69c
2024-07-06 19:34:41.175  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 19:34:41.175  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:34:42.686  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=169, memberId='consumer-auth-2-fc821ddc-f01f-49a0-aea9-2e9884f0b69c', protocol='range'}
2024-07-06 19:34:42.691  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=135, memberId='consumer-event-service-group-1-6aa9c9e5-f99d-4fb1-b584-ad442da22946', protocol='range'}
2024-07-06 19:34:42.819  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=169, memberId='consumer-auth-2-fc821ddc-f01f-49a0-aea9-2e9884f0b69c', protocol='range'}
2024-07-06 19:34:42.823  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 19:34:42.824  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 19:34:42.823  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=135, memberId='consumer-event-service-group-1-6aa9c9e5-f99d-4fb1-b584-ad442da22946', protocol='range'}
2024-07-06 19:34:42.826  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 19:34:42.829  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 19:34:42.826  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 19:34:42.840  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:34:42.841  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 19:43:06.891  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 19:43:06.900  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions 
2024-07-06 19:43:06.906  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: []
2024-07-06 19:43:06.909  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:43:06.923  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 19:43:06.923  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 19:43:06.924  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 19:43:06.925  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:43:06.926  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=170, memberId='consumer-auth-2-fc821ddc-f01f-49a0-aea9-2e9884f0b69c', protocol='range'}
2024-07-06 19:43:06.927  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=136, memberId='consumer-event-service-group-1-6aa9c9e5-f99d-4fb1-b584-ad442da22946', protocol='range'}
2024-07-06 19:43:06.959  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 136: {consumer-event-service-group-1-6aa9c9e5-f99d-4fb1-b584-ad442da22946=Assignment(partitions=[band-registration-request-0])}
2024-07-06 19:43:06.965  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=136, memberId='consumer-event-service-group-1-6aa9c9e5-f99d-4fb1-b584-ad442da22946', protocol='range'}
2024-07-06 19:43:06.966  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 19:43:06.966  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 19:43:06.968  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:43:06.969  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 19:43:07.125  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=170, memberId='consumer-auth-2-fc821ddc-f01f-49a0-aea9-2e9884f0b69c', protocol='range'}
2024-07-06 19:43:07.125  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[])
2024-07-06 19:43:07.125  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: 
2024-07-06 19:43:07.125  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: []
2024-07-06 19:43:07.319  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 19:43:07.321  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 19:43:07.321  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-6aa9c9e5-f99d-4fb1-b584-ad442da22946 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 19:43:07.320  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-fc821ddc-f01f-49a0-aea9-2e9884f0b69c sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 19:43:07.324  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:43:07.322  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:43:07.325  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:43:07.326  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 19:43:07.325  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:43:07.326  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 19:43:07.327  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:43:07.328  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:43:07.328  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:43:07.334  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:43:07.333  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 19:43:07.334  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 19:43:07.334  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 19:43:07.346  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 19:43:07.353  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 19:43:07.615  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 19:43:07.616  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 19:43:07.624  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 19:43:07.631  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 19:43:07.632  INFO 16103 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 19:43:07.695  INFO 16103 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 19:43:07.705  INFO 16103 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 19:43:07.716  INFO 16103 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-06 19:44:24.409  INFO 16411 --- [main] com.example.EventServiceApplication      : Starting EventServiceApplication using Java 17.0.10 on MacBook-Pro-Valerij.local with PID 16411 (/Users/rublev/DEV/musikBand/MusicEventService/target/classes started by rublev in /Users/rublev/DEV/musikBand/MusicEventService)
2024-07-06 19:44:24.411 DEBUG 16411 --- [main] com.example.EventServiceApplication      : Running with Spring Boot v2.6.3, Spring v5.3.15
2024-07-06 19:44:24.411  INFO 16411 --- [main] com.example.EventServiceApplication      : No active profile set, falling back to default profiles: default
2024-07-06 19:44:24.957  INFO 16411 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-06 19:44:25.143  INFO 16411 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 177 ms. Found 2 JPA repository interfaces.
2024-07-06 19:44:26.117  INFO 16411 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2024-07-06 19:44:26.128  INFO 16411 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-06 19:44:26.128  INFO 16411 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.56]
2024-07-06 19:44:26.201  INFO 16411 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-06 19:44:26.201  INFO 16411 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1741 ms
2024-07-06 19:44:26.413  INFO 16411 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-06 19:44:26.467  INFO 16411 --- [main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.5.Final
2024-07-06 19:44:26.629  INFO 16411 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-07-06 19:44:26.723  INFO 16411 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-06 19:44:26.948  INFO 16411 --- [main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-06 19:44:26.965  INFO 16411 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2024-07-06 19:44:27.593  INFO 16411 --- [main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-07-06 19:44:27.602  INFO 16411 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 19:44:28.082  WARN 16411 --- [main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-06 19:44:28.912  INFO 16411 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-event-service-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = event-service-group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 19:44:29.070  INFO 16411 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 19:44:29.070  INFO 16411 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 19:44:29.070  INFO 16411 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720284269069
2024-07-06 19:44:29.072  INFO 16411 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Subscribed to topic(s): band-registration-request
2024-07-06 19:44:29.079  INFO 16411 --- [main] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-auth-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = auth
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-06 19:44:29.092  INFO 16411 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.5.1
2024-07-06 19:44:29.093  INFO 16411 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 2c6fb6c54472e90a
2024-07-06 19:44:29.093  INFO 16411 --- [main] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1720284269092
2024-07-06 19:44:29.093  INFO 16411 --- [main] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Subscribed to topic(s): roleCheckResponseTopic
2024-07-06 19:44:29.107  INFO 16411 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2024-07-06 19:44:29.118  INFO 16411 --- [main] com.example.EventServiceApplication      : Started EventServiceApplication in 5.051 seconds (JVM running for 5.358)
2024-07-06 19:44:29.334  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-auth-2, groupId=auth] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 19:44:29.334  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.clients.Metadata        : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Cluster ID: xH4Ubh-_R5SLbLWuAt4FIg
2024-07-06 19:44:29.335  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 19:44:29.335  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Discovered group coordinator localhost:9092 (id: 2147483647 rack: null)
2024-07-06 19:44:29.337  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:44:29.337  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:44:29.353  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: need to re-join with the given member-id: consumer-auth-2-1ef51617-68f8-4da3-b687-233f1d18a69f
2024-07-06 19:44:29.353  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: need to re-join with the given member-id: consumer-event-service-group-1-88bec12f-bd1f-4f55-b939-5f65b0506d22
2024-07-06 19:44:29.354  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 19:44:29.354  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException)
2024-07-06 19:44:29.354  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:44:29.354  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:44:29.361  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=138, memberId='consumer-event-service-group-1-88bec12f-bd1f-4f55-b939-5f65b0506d22', protocol='range'}
2024-07-06 19:44:29.362  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=172, memberId='consumer-auth-2-1ef51617-68f8-4da3-b687-233f1d18a69f', protocol='range'}
2024-07-06 19:44:29.366  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 172: {consumer-auth-2-1ef51617-68f8-4da3-b687-233f1d18a69f=Assignment(partitions=[roleCheckResponseTopic-0])}
2024-07-06 19:44:29.366  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 138: {consumer-event-service-group-1-88bec12f-bd1f-4f55-b939-5f65b0506d22=Assignment(partitions=[band-registration-request-0])}
2024-07-06 19:44:29.371  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=172, memberId='consumer-auth-2-1ef51617-68f8-4da3-b687-233f1d18a69f', protocol='range'}
2024-07-06 19:44:29.371  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=138, memberId='consumer-event-service-group-1-88bec12f-bd1f-4f55-b939-5f65b0506d22', protocol='range'}
2024-07-06 19:44:29.371  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 19:44:29.372  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 19:44:29.373  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 19:44:29.373  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 19:44:29.381  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:44:29.381  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=38, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:44:29.382  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 19:44:29.382  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 19:44:32.366  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: group is already rebalancing
2024-07-06 19:44:32.366  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: group is already rebalancing
2024-07-06 19:44:32.368  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 19:44:32.368  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 19:44:32.368  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 19:44:32.368  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 19:44:32.369  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] (Re-)joining group
2024-07-06 19:44:32.369  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] (Re-)joining group
2024-07-06 19:44:32.371  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully joined group with generation Generation{generationId=173, memberId='consumer-auth-2-1ef51617-68f8-4da3-b687-233f1d18a69f', protocol='range'}
2024-07-06 19:44:32.371  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully joined group with generation Generation{generationId=139, memberId='consumer-event-service-group-1-88bec12f-bd1f-4f55-b939-5f65b0506d22', protocol='range'}
2024-07-06 19:44:32.412  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Finished assignment for group at generation 173: {consumer-auth-2-c90f0712-5fbb-47c5-90ce-41639008668e=Assignment(partitions=[]), consumer-auth-1-d7365192-6085-4a75-a5aa-e65f7dd5b0f9=Assignment(partitions=[roleCheckTopic-0]), consumer-auth-2-1ef51617-68f8-4da3-b687-233f1d18a69f=Assignment(partitions=[roleCheckResponseTopic-0]), consumer-auth-2-9bae48f2-cc8b-408e-a2c6-ef0501433c60=Assignment(partitions=[])}
2024-07-06 19:44:32.412  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Finished assignment for group at generation 139: {consumer-event-service-group-1-60a0f413-de8d-4d91-8199-16ebf93056ef=Assignment(partitions=[band-registration-0]), consumer-event-service-group-1-88bec12f-bd1f-4f55-b939-5f65b0506d22=Assignment(partitions=[band-registration-request-0])}
2024-07-06 19:44:32.414  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Successfully synced group in generation Generation{generationId=173, memberId='consumer-auth-2-1ef51617-68f8-4da3-b687-233f1d18a69f', protocol='range'}
2024-07-06 19:44:32.414  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Successfully synced group in generation Generation{generationId=139, memberId='consumer-event-service-group-1-88bec12f-bd1f-4f55-b939-5f65b0506d22', protocol='range'}
2024-07-06 19:44:32.414  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Notifying assignor about the new Assignment(partitions=[roleCheckResponseTopic-0])
2024-07-06 19:44:32.415  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Adding newly assigned partitions: roleCheckResponseTopic-0
2024-07-06 19:44:32.415  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Notifying assignor about the new Assignment(partitions=[band-registration-request-0])
2024-07-06 19:44:32.415  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Adding newly assigned partitions: band-registration-request-0
2024-07-06 19:44:32.417  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Setting offset for partition roleCheckResponseTopic-0 to the committed offset FetchPosition{offset=38, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:44:32.417  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions assigned: [roleCheckResponseTopic-0]
2024-07-06 19:44:32.419  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Setting offset for partition band-registration-request-0 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 0 rack: null)], epoch=0}}
2024-07-06 19:44:32.420  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions assigned: [band-registration-request-0]
2024-07-06 19:48:51.451  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Revoke previously assigned partitions roleCheckResponseTopic-0
2024-07-06 19:48:51.451  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Revoke previously assigned partitions band-registration-request-0
2024-07-06 19:48:51.452  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: partitions revoked: [roleCheckResponseTopic-0]
2024-07-06 19:48:51.452  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: partitions revoked: [band-registration-request-0]
2024-07-06 19:48:51.453  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Member consumer-auth-2-1ef51617-68f8-4da3-b687-233f1d18a69f sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 19:48:51.453  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Member consumer-event-service-group-1-88bec12f-bd1f-4f55-b939-5f65b0506d22 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2024-07-06 19:48:51.453  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:48:51.453  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:48:51.454  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:48:51.455  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:48:51.456  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-auth-2, groupId=auth] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 19:48:51.456  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.clients.consumer.KafkaConsumer     : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-06 19:48:51.459  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:48:51.459  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-06 19:48:51.459  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-auth-2, groupId=auth] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:48:51.460  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.k.c.c.internals.ConsumerCoordinator  : [Consumer clientId=consumer-event-service-group-1, groupId=event-service-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-06 19:48:51.582  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 19:48:51.582  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics scheduler closed
2024-07-06 19:48:51.582  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 19:48:51.582  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-06 19:48:51.582  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 19:48:51.582  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] org.apache.kafka.common.metrics.Metrics  : Metrics reporters closed
2024-07-06 19:48:51.585  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-auth-2 unregistered
2024-07-06 19:48:51.586  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : auth: Consumer stopped
2024-07-06 19:48:51.587  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.a.kafka.common.utils.AppInfoParser     : App info kafka.consumer for consumer-event-service-group-1 unregistered
2024-07-06 19:48:51.587  INFO 16411 --- [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] o.s.k.l.KafkaMessageListenerContainer    : event-service-group: Consumer stopped
2024-07-06 19:48:51.606  INFO 16411 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-06 19:48:51.609  INFO 16411 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-06 19:48:51.611  INFO 16411 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
